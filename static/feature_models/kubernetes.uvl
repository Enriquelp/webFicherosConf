features 
    "Kubernetes resource object"
        mandatory
            apiVersion {doc 'APIVersion defines the versioned schema of this representation of an object_ Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#resources'}
                mandatory
                    Group {abstract, doc 'refers to the API group that organizes related resources_ Kubernetes divides its API into logical groups to make it easier to manage, extend, and evolve different types of resources_ These groups are essentially namespaces for related API objects_'} 
                        alternative
                            GROUP_admissionregistration
                            GROUP_apiextensions
                            GROUP_apiregistration
                            GROUP_apps
                            GROUP_authentication
                            GROUP_authorization
                            GROUP_autoscaling
                            GROUP_batch
                            GROUP_certificates
                            GROUP_coordination
                            GROUP_core
                            GROUP_discovery
                            GROUP_events
                            GROUP_flowcontrol
                            GROUP_internal
                            GROUP_networking
                            GROUP_node
                            GROUP_policy
                            GROUP_rbac
                            GROUP_resource
                            GROUP_scheduling
                            GROUP_storage
                    Version {abstract, doc 'specifies the version of the API group that the resource should use and  indicates which stage of development the resource is in and helps ensure compatibility with the Kubernetes cluster_'}
                        alternative
                            VERSION_v1
                            VERSION_v1beta1
                            VERSION_v1beta3
                            VERSION_v1alpha1
                            VERSION_v1alpha2
                            VERSION_v2
            kind {doc 'Kind is a string value representing the REST resource this object represents_ Servers may infer this from the endpoint the client submits requests to_ Cannot be updated_ In CamelCase_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#types-kinds'}
                alternative
                    Workloads_APIs {abstract, doc 'Refer to the set of API resources that manage and run application workloads, such as containers and jobs_ These resources are responsible for defining how applications are deployed, scaled, and managed across a cluster_'}
                        alternative
                            KIND_Container
                            KIND_CronJob
                            KIND_DaemonSet
                            KIND_Deployment
                            KIND_Job
                            KIND_Pod
                            KIND_ReplicaSet
                            KIND_ReplicationController
                            KIND_StatefulSet
                    Service_APIs {abstract, doc 'Refer to the set of resources used to expose and manage access to applications running in a cluster_ These resources define how applications are accessed both internally (within the cluster) and externally (from outside the cluster)_'}
                        alternative
                            KIND_Endpoints
                            KIND_EndpointSlice
                            KIND_Ingress
                            KIND_IngressClass
                            KIND_Service
                    Confing_and_storage_APIs {abstract, doc 'Are used to manage configurations, secrets, and storage for applications running in a cluster_ These APIs handle configuration data, sensitive information (like passwords and API keys), and persistent storage to ensure applications have the necessary resources to function properly_'}
                        alternative
                            KIND_ConfigMap
                            KIND_CSIDriver
                            KIND_CSINode
                            KIND_Secret
                            KIND_PersistentVolumeClaim
                            KIND_StorageClass
                            KIND_CSIStorageCapacity
                            KIND_Volume
                            KIND_VolumeAttachment
                            KIND_VolumeAttributesClass
                    Metadata_APIs {abstract, doc 'are used to manage and manipulate the metadata associated with various Kubernetes resources_ Metadata typically includes information such as names, labels, annotations, and namespaces, which helps identify and organize resources within the cluster_'}
                        alternative
                            KIND_ClusterTrustBundle
                            KIND_ControllerRevision
                            KIND_CustomResourceDefinition
                            KIND_Event
                            KIND_LimitRange
                            KIND_HorizontalPodAutoscaler
                            KIND_MutatingWebhookConfiguration
                            KIND_ValidatingWebhookConfiguration
                            KIND_PodSchedulingContext
                            KIND_PodTemplate
                            KIND_PodDisruptionBudget
                            KIND_PriorityClass
                            KIND_ResourceClaim
                            KIND_ResourceClaimParameters {added_version '1_30'}
                            KIND_ResourceSlice {added_version '1_30'}
                            KIND_ResourceClaimTemplate
                            KIND_ResourceClass
                            KIND_ValidatingAdmissionPolicy
                            KIND_ValidatingAdmissionPolicyBinding
                    Cluster_APIs {abstract, doc 'Are used to manage the overall configuration, state, and resources of the Kubernetes cluster itself_ These APIs help in the management of cluster-wide resources and configurations, such as nodes, clusters, and certain system-level components_'}
                        alternative
                            KIND_APIService
                            KIND_Binding
                            KIND_CertificateSigningRequest
                            KIND_ClusterRole
                            KIND_ClusterRoleBinding
                            KIND_ComponentStatus
                            KIND_FlowSchema
                            KIND_IPAddress
                            KIND_Lease
                            KIND_LocalSubjectAccessReview
                            KIND_Namespace
                            KIND_Node
                            KIND_PersistentVolume
                            KIND_PriorityLevelConfiguration
                            KIND_ResourceQuota
                            KIND_Role
                            KIND_RoleBinding
                            KIND_RuntimeClass
                            KIND_SelfSubjectAccessReview
                            KIND_SelfSubjectReview
                            KIND_SelfSubjectRulesReview
                            KIND_ServiceAccount
                            KIND_ServiceCIDR
                            KIND_StorageVersion
                            KIND_SubjectAccessReview
                            KIND_TokenRequest
                            KIND_TokenReview
                            KIND_NetworkPolicy
        optional
            metadata {doc 'Standard object`s metadata_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#metadata'}
                mandatory
                    METADATA_name {doc 'Name must be unique within a namespace_ Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically_ Name is primarily intended for creation idempotence and configuration definition_ Cannot be updated_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names#names'}
                optional
                    METADATA_deletionGracePeriodSeconds {doc 'Number of seconds allowed for this object to gracefully terminate before it will be removed from the system_ Only set when deletionTimestamp is also set_ May only be shortened_ Read-only_'}
                    METADATA_namespace {doc 'Namespace defines the space within which each name must be unique_ An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation_ Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty_ Must be a DNS_LABEL_ Cannot be updated_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/namespaces'}
                    METADATA_labels   {doc 'Map of string keys and values that can be used to organize and categorize (scope and select) objects_ May match selectors of replication controllers and services_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/labels'}
                        mandatory
                            LABELS_key
                            LABELS_value
                    METADATA_annotations   {doc 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata_ They are not queryable and should be preserved when modifying objects_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/annotations'}
                        mandatory
                            ANNOTATIONS_key
                            ANNOTATIONS_value
                    METADATA_finalizers {doc 'Must be empty before the object is deleted from the registry_ Each entry is an identifier for the responsible component that will remove the entry from the list_ If the deletionTimestamp of the object is non-nil, entries in this list can only be removed_ Finalizers may be processed and removed in any order_ Order is NOT enforced because it introduces significant risk of stuck finalizers_ finalizers is a shared field, any actor with permission can reorder it_ If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock_ Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list_'}
                    METADATA_generateName {doc 'GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided_ If this field is used, the name returned to the client will be different than the name passed_ This value will also be combined with a unique suffix_ The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server_ If this field is specified and the generated name exists, the server will return a 409_ Applied only if Name is not specified_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#idempotency'}            
                    METADATA_managedFields   {doc 'ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow_ This is mostly for internal housekeeping, and users typically shouldn`t need to set or understand this field_ A workflow can be the user`s name, a controller`s name, or the name of a specific apply path like "ci-cd"_ The set of fields is always in the version that the workflow used when modifying the object_'} 
                        mandatory   
                            METADATA_MANAGEFIELDS_apiversion {doc 'APIVersion defines the version of this resource that this field set applies to_ The format is "group/version" just like the top-level APIVersion field_ It is necessary to track the version of a field set because it cannot be automatically converted_'}
                        optional
                            METADATA_MANAGEFIELDS_fieldsType {doc 'FieldsType is the discriminator for the different fields format and version_ There is currently only one possible value: "FieldsV1"'}
                            METADATA_MANAGEFIELDS_fieldsV1 {doc 'FieldsV1 holds the first JSON version format as described in the "FieldsV1" type_'}
                            METADATA_MANAGEFIELDS_manager {doc 'Manager is an identifier of the workflow managing these fields_'}
                            METADATA_MANAGEFIELDS_operation {doc 'Operation is the type of operation which lead to this ManagedFieldsEntry being created_ The only valid values for this field are "Apply" and "Update"_'}
                                alternative   
                                    METADATA_MANAGEFIELDS_OPERATION_apply
                                    METADATA_MANAGEFIELDS_OPERATION_update
                            METADATA_MANAGEFIELDS_subresource {doc 'Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource_ The value of this field is used to distinguish between managers, even if they share the same name_ For example, a status update will be distinct from a regular update using the same manager name_ Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource_'}
                            METADATA_MANAGEFIELDS_time {doc 'Time is the timestamp of when the ManagedFields entry was added_ The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field_ The timestamp does not update when a field is removed from the entry because another manager took it over_'}
                    METADATA_ownerReferences   
                        mandatory   
                            METADATA_OWNERREFERENCES_apiVersion {doc 'API version of the referent_'}
                            METADATA_OWNERREFERENCES_kind {doc 'Kind of the referent_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#types-kinds'}
                            METADATA_OWNERREFERENCES_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names#names'}
                            METADATA_OWNERREFERENCES_uid {doc 'UID of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names#uids'}      
                        optional   
                            METADATA_OWNERREFERENCES_blockOwnerDeletion {default false, doc 'If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed_ See https://kubernetes_io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion_ Defaults to false_ To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned_'}
                            METADATA_OWNERREFERENCES_controller {doc 'If true, this reference points to the managing controller_'}
            spec {doc 'Specification of the desired behavior of the object_'}
                optional 
                    DeploymentSpec {abstract, doc 'Specification of the desired behavior of the Deployment_'}
                        optional   
                            DEPLOYMENTSPEC_minReadySeconds {default 0, doc 'Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available_ Defaults to 0 (pod will be considered available as soon as it is ready)'}
                            DEPLOYMENTSPEC_paused {doc 'Indicates that the deployment is paused_'}
                            DEPLOYMENTSPEC_progressDeadlineSeconds {default 600, doc 'The maximum time in seconds for a deployment to make progress before it is considered to be failed_ The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status_ Note that progress will not be estimated during the time a deployment is paused_ Defaults to 600s_'}
                            DEPLOYMENTSPEC_replicas {default 1, doc 'Number of desired pods_ This is a pointer to distinguish between explicit zero and not specified_ Defaults to 1_'}
                            DEPLOYMENTSPEC_revisionHistoryLimit {default 10, doc 'The number of old ReplicaSets to retain to allow rollback_ This is a pointer to distinguish between explicit zero and not specified_ Defaults to 10_'}
                            DEPLOYMENTSPEC_selector {doc 'Label selector for pods_ Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment_ It must match the pod templates labels_'}
                                or 
                                    SELECTOR_matchLabels   {doc 'matchExpressions is a list of label selector requirements_ The requirements are ANDed_'}
                                        mandatory 
                                            MATCHLABELS_key
                                            MATCHLABELS_value
                                    SELECTOR_matchExpressions   {doc 'matchLabels is a map of {key,value} pairs_ A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value"_ The requirements are ANDed_'}
                                        mandatory   
                                            MATCHEXPRESSIONS_key {doc 'key is the label key that the selector applies to_'}
                                            MATCHEXPRESSIONS_values   {doc 'values is an array of string values_ If the operator is In or NotIn, the values array must be non-empty_ If the operator is Exists or DoesNotExist, the values array must be empty_ This array is replaced during a strategic merge patch_'}
                                                mandatory
                                                    MATCHEXPRESSIONS_value
                                            MATCHEXPRESSIONS_operator {doc 'operator represents a keys relationship to a set of values_ Valid operators are In, NotIn, Exists and DoesNotExist_'}
                                                alternative
                                                    OPERATOR_in
                                                    OPERATOR_notIn
                                                    OPERATOR_exist
                                                    OPERATOR_doesNotExist
                                                    OPERATOR_gt
                                                    OPERATOR_lt
                            DEPLOYMENTSPEC_strategy {doc 'The deployment strategy to use to replace existing pods with new ones_'}
                                mandatory
                                    STRATEGY_type {doc 'Type of deployment_ Can be "Recreate" or "RollingUpdate"_ Default is RollingUpdate_'}
                                        or
                                            STRATEGY_TYPE_Recreate
                                            STRATEGY_TYPE_RollingUpdate {default}
                                                mandatory
                                                    maxUnavailable {default 25, doc 'The maximum number of pods that can be unavailable during the update_ Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%)_ Absolute number is calculated from percentage by rounding down_ This can not be 0 if MaxSurge is 0_ Defaults to 25%_ Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods immediately when the rolling update starts_ Once new pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods_'}
                                                optional
                                                    maxSurge {default 25, doc 'The maximum number of pods that can be scheduled above the desired number of pods_ Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%)_ This can not be 0 if MaxUnavailable is 0_ Absolute number is calculated from percentage by rounding up_ Defaults to 25%_ Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods_ Once old pods have been killed, new ReplicaSet can be scaled up further, ensuring that total number of pods running at any time during the update is at most 130% of desired pods_'}
                            DEPLOYMENTSPEC_template {doc 'Template describes the pods that will be created_ The only allowed template_spec_restartPolicy value is "Always"_'}
                                mandatory
                                    DEPLOYMENTSPEC_TEMPLATE_metadata {incomplete, doc 'Standard object`s metadata_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#metadata'}
                                        optional
                                            TEMPLATE_METADATA_name {doc 'Name must be unique within a namespace_ Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically_ Name is primarily intended for creation idempotence and configuration definition_ Cannot be updated_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names#names'}
                                            TEMPLATE_METADATA_namespace {doc 'Namespace defines the space within which each name must be unique_ An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation_ Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty_ Must be a DNS_LABEL_ Cannot be updated_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/namespaces'}
                                            TEMPLATE_METADATA_deletionGracePeriodSeconds {doc 'Number of seconds allowed for this object to gracefully terminate before it will be removed from the system_ Only set when deletionTimestamp is also set_ May only be shortened_ Read-only_'}
                                            TEMPLATE_METADATA_labels   {doc 'Map of string keys and values that can be used to organize and categorize (scope and select) objects_ May match selectors of replication controllers and services_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/labels'}
                                                mandatory
                                                    TEMPLATE_METADATA_LABELS_key
                                                    TEMPLATE_METADATA_LABELS_value
                                            TEMPLATE_METADATA_annotations   {doc 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata_ They are not queryable and should be preserved when modifying objects_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/annotations'}
                                                mandatory
                                                    TEMPLATE_METADATA_ANNOTATIONS_key
                                                    TEMPLATE_METADATA_ANNOTATIONS_value
                                            TEMPLATE_METADATA_finalizers {doc 'Must be empty before the object is deleted from the registry_ Each entry is an identifier for the responsible component that will remove the entry from the list_ If the deletionTimestamp of the object is non-nil, entries in this list can only be removed_ Finalizers may be processed and removed in any order_ Order is NOT enforced because it introduces significant risk of stuck finalizers_ finalizers is a shared field, any actor with permission can reorder it_ If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock_ Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list_'}
                                            TEMPLATE_METADATA_generateName {doc 'GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided_ If this field is used, the name returned to the client will be different than the name passed_ This value will also be combined with a unique suffix_ The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server_ If this field is specified and the generated name exists, the server will return a 409_ Applied only if Name is not specified_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#idempotency'}                                               
                                            TEMPLATE_METADATA_managedFields   {doc 'ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow_ This is mostly for internal housekeeping, and users typically shouldn`t need to set or understand this field_ A workflow can be the user`s name, a controller`s name, or the name of a specific apply path like "ci-cd"_ The set of fields is always in the version that the workflow used when modifying the object_'} 
                                                mandatory   
                                                    TEMPLATE_METADATA_MANAGEFIELDS_apiversion {doc 'APIVersion defines the version of this resource that this field set applies to_ The format is "group/version" just like the top-level APIVersion field_ It is necessary to track the version of a field set because it cannot be automatically converted_'}
                                                optional
                                                    TEMPLATE_METADATA_MANAGEFIELDS_fieldsType {doc 'FieldsType is the discriminator for the different fields format and version_ There is currently only one possible value: "FieldsV1"'}
                                                    TEMPLATE_METADATA_MANAGEFIELDS_fieldsV1 {doc 'FieldsV1 holds the first JSON version format as described in the "FieldsV1" type_'}
                                                    TEMPLATE_METADATA_MANAGEFIELDS_manager {doc 'Manager is an identifier of the workflow managing these fields_'}
                                                    TEMPLATE_METADATA_MANAGEFIELDS_operation {doc 'Operation is the type of operation which lead to this ManagedFieldsEntry being created_ The only valid values for this field are "Apply" and "Update"_'}
                                                        alternative   
                                                            TEMPLATE_METADATA_MANAGEFIELDS_OPERATION_apply
                                                            TEMPLATE_METADATA_MANAGEFIELDS_OPERATION_update
                                                    TEMPLATE_METADATA_MANAGEFIELDS_subresource {doc 'Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource_ The value of this field is used to distinguish between managers, even if they share the same name_ For example, a status update will be distinct from a regular update using the same manager name_ Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource_'}
                                                    TEMPLATE_METADATA_MANAGEFIELDS_time {doc 'Time is the timestamp of when the ManagedFields entry was added_ The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field_ The timestamp does not update when a field is removed from the entry because another manager took it over_'}
                                            TEMPLATE_METADATA_ownerReferences   
                                                mandatory   
                                                    TEMPLATE_METADATA_OWNERREFERENCES_apiVersion {doc 'API version of the referent_'}
                                                    TEMPLATE_METADATA_OWNERREFERENCES_kind {doc 'Kind of the referent_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#types-kinds'}
                                                    TEMPLATE_METADATA_OWNERREFERENCES_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names#names'}
                                                    TEMPLATE_METADATA_OWNERREFERENCES_uid {doc 'UID of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names#uids'}      
                                                optional   
                                                    TEMPLATE_METADATA_OWNERREFERENCES_blockOwnerDeletion {default false, doc 'If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed_ See https://kubernetes_io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion_ Defaults to false_ To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned_'}
                                                    TEMPLATE_METADATA_OWNERREFERENCES_controller {doc 'If true, this reference points to the managing controller_'}
                                    DEPLOYMENTSPEC_TEMPLATE_podspec {doc 'If true, PodSpec must be defined'}
                    PodSpec {abstract, incomplete, doc 'Specification of the desired behavior of the Pod_'} 
                        mandatory
                            PODSPEC_containers   {doc 'List of containers belonging to the pod_ Containers cannot currently be added or removed_ There must be at least one container in a Pod_ Cannot be updated_'}
                                mandatory   
                                    CONTAINERS_name {doc 'Name of the container specified as a DNS_LABEL_ Each container in a pod must have a unique name (DNS_LABEL)_ Cannot be updated_'}
                                optional     
                                    CONTAINERS_args   {doc 'Arguments to the entrypoint_ The container image`s CMD is used if this is not provided_ Variable references $(VAR_NAME) are expanded using the container`s environment_ If a variable cannot be resolved, the reference in the input string will be unchanged_ Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i_e_ "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)"_ Escaped references will never be expanded, regardless of whether the variable exists or not_ Cannot be updated_ More info: https://kubernetes_io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'}
                                        mandatory   
                                            CONTAINERS_ARGS_value 
                                    CONTAINERS_command   {doc 'Entrypoint array_ Not executed within a shell_ The container image`s ENTRYPOINT is used if this is not provided_ Variable references $(VAR_NAME) are expanded using the container`s environment_ If a variable cannot be resolved, the reference in the input string will be unchanged_ Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i_e_ "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)"_ Escaped references will never be expanded, regardless of whether the variable exists or not_ Cannot be updated_ More info: https://kubernetes_io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'}
                                        mandatory   
                                            CONTAINERS_COMMAND_value 
                                    CONTAINERS_env   {doc 'List of environment variables to set in the container_ Cannot be updated_'}
                                        mandatory
                                            CONTAINERS_ENV_name {doc 'Name of the environment variable_ Must be a C_IDENTIFIER_'}
                                            CONTAINERS_ENV_value {default ' ',doc 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables_ If a variable cannot be resolved, the reference in the input string will be unchanged_ Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i_e_ "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)"_ Escaped references will never be expanded, regardless of whether the variable exists or not_ Defaults to ""_'}
                                        optional    
                                            CONTAINERS_ENV_valueFrom {doc 'Source for the environment variable`s value_ Cannot be used if value is not empty_'}
                                                alternative   
                                                    configMapKeyRef {doc 'Selects a key of a ConfigMap_'}
                                                        mandatory
                                                            CONFIGMAPKEYREF_key {doc 'The key to select_'}
                                                            CONFIGMAPKEYREF_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                                                        optional
                                                            CONFIGMAPKEYREF_optional {doc 'Specify whether the ConfigMap or its key must be defined'}
                                                    fieldRef {doc 'Selects a field of the pod: supports metadata_name, metadata_namespace, `metadata_labels[<KEY>]`, `metadata_annotations["<KEY>"]`, spec_nodeName, spec_serviceAccountName, status_hostIP, status_podIP, status_podIPs_'}
                                                        mandatory
                                                            FIELDREF_fieldPath {default 'v1',doc 'Version of the schema the FieldPath is written in terms of, defaults to "v1"_'}
                                                        optional   
                                                            FIELDREF_apiversion {doc 'Path of the field to select in the specified API version_'}
                                                    resourceFieldRef {doc 'Selects a resource of the container: only resources limits and requests (limits_cpu, limits_memory, limits_ephemeral-storage, requests_cpu, requests_memory and requests_ephemeral-storage) are currently supported_'}
                                                        mandatory
                                                            RESOURCEFIELDREF_containerName {doc 'Container name: required for volumes, optional for env vars'}
                                                            RESOURCEFIELDREF_resource {doc 'Required: resource to select'}
                                                        optional   
                                                            RESOURCEFIELDREF_divisor {default '1', doc 'Specifies the output format of the exposed resources, defaults to "1"'}
                                                    secretKeyRef {doc 'Selects a key of a secret in the pod`s namespace'}
                                                        mandatory
                                                            SECRETKEYREF_key {doc 'The key of the secret to select from_ Must be a valid secret key_'}
                                                            SECRETKEYREF_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                                                        optional
                                                            SECRETKEYREF_optional {doc 'Specify whether the Secret or its key must be defined'}
                                    CONTAINERS_envFrom   {doc 'List of sources to populate environment variables in the container_ The keys defined within a source must be a C_IDENTIFIER_ All invalid keys will be reported as an event when the container is starting_ When a key exists in multiple sources, the value associated with the last source will take precedence_ Values defined by an Env with a duplicate key will take precedence_ Cannot be updated_'}
                                        alternative  
                                            ENVFROM_configMapRef {doc 'The ConfigMap to select from'}
                                                mandatory   
                                                    CONFIGMAPREF_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                                                    CONFIGMAPREF_optional {doc 'Specify whether the ConfigMap must be defined'}
                                            ENVFROM_prefix {doc 'An optional identifier to prepend to each key in the ConfigMap_ Must be a C_IDENTIFIER_'}
                                            ENVFROM_secretRef {doc 'The Secret to select from'}
                                                mandatory   
                                                    SECRETREF_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                                                    SECRETREF_optional {doc 'Specify whether the Secret must be defined'}
                                    CONTAINERS_image {doc 'Container image name_ More info: https://kubernetes_io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets_'}
                                    CONTAINERS_imagePullPolicy {doc 'Image pull policy_ One of Always, Never, IfNotPresent_ Defaults to Always if :latest tag is specified, or IfNotPresent otherwise_ Cannot be updated_ More info: https://kubernetes_io/docs/concepts/containers/images#updating-images'}
                                        alternative   
                                            IMAGEPULLPOLICY_always {default}
                                            IMAGEPULLPOLICY_never
                                            IMAGEPULLPOLICY_ifNotPresent
                                    CONTAINERS_lifecycle {doc 'Actions that the management system should take in response to container lifecycle events_ Cannot be updated_'}
                                        optional
                                            LIFECYCLE_postStart {doc 'PostStart is called immediately after a container is created_ If the handler fails, the container is terminated and restarted according to its restart policy_ Other management of the container blocks until the hook completes_ More info: https://kubernetes_io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'}
                                                optional   
                                                    POSTSTART_exec   {doc 'Exec specifies the action to take_'}
                                                        mandatory   
                                                            POSTSTART_EXEC_command {doc 'Command is the command line to execute inside the container, the working directory for the command is root ("/") in the container`s filesystem_ The command is simply exec`d, it is not run inside a shell, so traditional shell instructions ("|", etc) won`t work_ To use a shell, you need to explicitly call out to that shell_ Exit status of 0 is treated as live/healthy and non-zero is unhealthy_'}
                                                    POSTSTART_httpGet {doc 'HTTPGet specifies the http request to perform_'}
                                                        mandatory   
                                                            POSTSTART_HTTPGET_host {doc 'Host name to connect to, defaults to the pod IP_ You probably want to set "Host" in httpHeaders instead_'}
                                                            POSTSTART_HTTPGET_httpHeaders   {doc 'Custom headers to set in the request_ HTTP allows repeated headers_'}
                                                                mandatory
                                                                    POSTSTART_HTTPHEADERS_name {doc 'The header field name_ This will be canonicalized upon output, so case-variant names will be understood as the same header_'}       
                                                                    POSTSTART_HTTPHEADERS_value {doc 'The header field value'}
                                                            POSTSTART_HTTPGET_port {doc 'Name or number of the port to access on the container_ Number must be in the range 1 to 65535_ Name must be an IANA_SVC_NAME_'}
                                                        optional
                                                            POSTSTART_HTTPGET_path {doc 'Path to access on the HTTP server_'}
                                                            POSTSTART_HTTPGET_scheme {default 'HTTP', doc 'Scheme to use for connecting to the host_ Defaults to HTTP_'}
                                                    POSTSTART_sleep {doc 'Sleep represents the duration that the container should sleep before being terminated_'}
                                                        mandatory
                                                            POSTSTART_SLEEP_seconds {doc 'Seconds is the number of seconds to sleep_'}
                                            LIFECYCLE_preStop {doc 'PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc_ The handler is not called if the container crashes or exits_ The Pod`s termination grace period countdown begins before the PreStop hook is executed_ Regardless of the outcome of the handler, the container will eventually terminate within the Pod`s termination grace period (unless delayed by finalizers)_ Other management of the container blocks until the hook completes or until the termination grace period is reached_ More info: https://kubernetes_io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'}
                                                optional   
                                                    PRESTOP_exec   {doc 'Exec specifies the action to take_'}
                                                        mandatory   
                                                            PRESTOP_EXEC_command {doc 'Command is the command line to execute inside the container, the working directory for the command is root ("/") in the container`s filesystem_ The command is simply exec`d, it is not run inside a shell, so traditional shell instructions ("|", etc) won`t work_ To use a shell, you need to explicitly call out to that shell_ Exit status of 0 is treated as live/healthy and non-zero is unhealthy_'}
                                                    PRESTOP_httpGet {doc 'HTTPGet specifies the http request to perform_'}
                                                        mandatory   
                                                            PRESTOP_HTTPGET_host {doc 'Host name to connect to, defaults to the pod IP_ You probably want to set "Host" in httpHeaders instead_'}
                                                            PRESTOP_HTTPGET_httpHeaders   {doc 'Custom headers to set in the request_ HTTP allows repeated headers_'}
                                                                mandatory
                                                                    PRESTOP_HTTPHEADERS_name {doc 'The header field name_ This will be canonicalized upon output, so case-variant names will be understood as the same header_'}        
                                                                    PRESTOP_HTTPHEADERS_value {doc 'The header field value'}
                                                            PRESTOP_HTTPGET_port {doc 'Name or number of the port to access on the container_ Number must be in the range 1 to 65535_ Name must be an IANA_SVC_NAME_'}
                                                        optional
                                                            PRESTOP_HTTPGET_path {doc 'Path to access on the HTTP server_'}
                                                            PRESTOP_HTTPGET_scheme {default 'HTTP', doc 'Scheme to use for connecting to the host_ Defaults to HTTP_'}
                                                    PRESTOP_sleep {doc 'Sleep represents the duration that the container should sleep before being terminated_'}
                                                        mandatory
                                                            PRESTOP_SLEEP_seconds {doc 'Seconds is the number of seconds to sleep_'}
                                    CONTAINERS_livenessProbe {doc 'Periodic probe of container liveness_ Container will be restarted if the probe fails_ Cannot be updated_ More info: https://kubernetes_io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'}
                                        mandatory
                                            LIVENESSPROBE_exec   {doc 'Exec specifies the action to take_'}
                                                mandatory
                                                    LIVENESSPROBE_EXEC_command {doc 'Command is the command line to execute inside the container, the working directory for the command is root ("/") in the container`s filesystem_ The command is simply exec`d, it is not run inside a shell, so traditional shell instructions ("|", etc) won`t work_ To use a shell, you need to explicitly call out to that shell_ Exit status of 0 is treated as live/healthy and non-zero is unhealthy_'}
                                            LIVENESSPROBE_failureThreshold {default 3, doc 'Minimum consecutive failures for the probe to be considered failed after having succeeded_ Defaults to 3_ Minimum value is 1_'}
                                            LIVENESSPROBE_grpc {doc 'GRPC specifies an action involving a GRPC port_'}
                                                mandatory   
                                                    LIVENESSPROBE_GRPC_port {doc 'Port number of the gRPC service_ Number must be in the range 1 to 65535_'}
                                                optional
                                                    LIVENESSPROBE_GRPC_service {doc 'Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github_com/grpc/grpc/blob/master/doc/health-checking_md)_ If this is not specified, the default behavior is defined by gRPC_'}
                                            LIVENESSPROBE_httpGet {doc 'HTTPGet specifies the http request to perform_'}
                                                optional   
                                                    LIVENESSPROBE_HTTPGET_host {doc 'Host name to connect to, defaults to the pod IP_ You probably want to set "Host" in httpHeaders instead_'}
                                                    LIVENESSPROBE_HTTPGET_httpHeaders   {doc 'Custom headers to set in the request_ HTTP allows repeated headers_'}
                                                        mandatory   
                                                            LIVENESSPROBE_HTTPHEADERS_name {doc 'The header field name_ This will be canonicalized upon output, so case-variant names will be understood as the same header_'}
                                                            LIVENESSPROBE_HTTPHEADERS_value {doc 'The header field value'}
                                                    LIVENESSPROBE_HTTPGET_path {doc 'Path to access on the HTTP server_'}
                                                    LIVENESSPROBE_HTTPGET_port {doc 'Name or number of the port to access on the container_ Number must be in the range 1 to 65535_ Name must be an IANA_SVC_NAME_'}
                                                    LIVENESSPROBE_HTTPGET_scheme {default 'HTTP', doc 'Scheme to use for connecting to the host_ Defaults to HTTP_'}
                                            LIVENESSPROBE_initialDelaySeconds {doc 'Number of seconds after the container has started before liveness probes are initiated_ More info: https://kubernetes_io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'}
                                            LIVENESSPROBE_periodSeconds {default 10, doc 'How often (in seconds) to perform the probe_ Default to 10 seconds_ Minimum value is 1_'}
                                            LIVENESSPROBE_successThreshold {default 1, doc 'Minimum consecutive successes for the probe to be considered successful after having failed_ Defaults to 1_ Must be 1 for liveness and startup_ Minimum value is 1_'}
                                            LIVENESSPROBE_tcpSocket {doc 'TCPSocket specifies an action involving a TCP port_'}
                                                mandatory   
                                                    LIVENESSPROBE_TCPSOCKET_port {doc 'Number or name of the port to access on the container_ Number must be in the range 1 to 65535_ Name must be an IANA_SVC_NAME_'}
                                                optional   
                                                    LIVENESSPROBE_TCPSOCKET_host {doc 'Optional: Host name to connect to, defaults to the pod IP_'}
                                            LIVENESSPROBE_timeoutSeconds {default 1, doc 'Number of seconds after which the probe times out_ Defaults to 1 second_ Minimum value is 1_ More info: https://kubernetes_io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'}
                                        optional
                                            LIVENESSPROBE_terminationGracePeriodSeconds {doc 'Optional duration in seconds the pod needs to terminate gracefully upon probe failure_ The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal_ Set this value longer than the expected cleanup time for your process_ If this value is nil, the pod`s terminationGracePeriodSeconds will be used_ Otherwise, this value overrides the value provided by the pod spec_ Value must be non-negative integer_ The value zero indicates stop immediately via the kill signal (no opportunity to shut down)_ This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate_ Minimum value is 1_ spec_terminationGracePeriodSeconds is used if unset_'}
                                    CONTAINERS_ports   {doc 'List of ports to expose from the container_ Not specifying a port here DOES NOT prevent that port from being exposed_ Any port which is listening on the default "0_0_0_0" address inside a container will be accessible from the network_ Modifying this array with strategic merge patch may corrupt the data_ For more information See https://github_com/kubernetes/kubernetes/issues/108255_ Cannot be updated_'}
                                        mandatory   
                                            CONTAINERS_PORTS_containerPort {default 0, doc 'Number of port to expose on the pod`s IP address_ This must be a valid port number, 0 < x < 65536_'}
                                        optional 
                                            CONTAINERS_PORTS_hostIP {doc 'What host IP to bind the external port to_'}
                                            CONTAINERS_PORTS_hostPort {doc 'Number of port to expose on the host_ If specified, this must be a valid port number, 0 < x < 65536_ If HostNetwork is specified, this must match ContainerPort_ Most containers do not need this_'}
                                            CONTAINERS_PORTS_name {doc 'If specified, this must be an IANA_SVC_NAME and unique within the pod_ Each named port in a pod must have a unique name_ Name for the port that can be referred to by services_'}
                                            CONTAINERS_PORTS_protocol {doc 'Protocol for port_ Must be UDP, TCP, or SCTP_ Defaults to "TCP"_'}
                                                alternative   
                                                    PROTOCOL_UDP
                                                    PROTOCOL_TCP {default}
                                                    PROTOCOL_SCTP
                                    CONTAINERS_readinessProbe {doc 'Periodic probe of container service readiness_ Container will be removed from service endpoints if the probe fails_ Cannot be updated_ More info: https://kubernetes_io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'}
                                        mandatory
                                            READINESSPROBE_exec   {doc 'Exec specifies the action to take_'}
                                                mandatory
                                                    READINESSPROBE_EXEC_command {doc 'Command is the command line to execute inside the container, the working directory for the command is root ("/") in the container`s filesystem_ The command is simply exec`d, it is not run inside a shell, so traditional shell instructions ("|", etc) won`t work_ To use a shell, you need to explicitly call out to that shell_ Exit status of 0 is treated as live/healthy and non-zero is unhealthy_'}
                                            READINESSPROBE_failureThreshold {default 3, doc 'Minimum consecutive failures for the probe to be considered failed after having succeeded_ Defaults to 3_ Minimum value is 1_'}
                                            READINESSPROBE_grpc {doc 'GRPC specifies an action involving a GRPC port_'}
                                                mandatory   
                                                    READINESSPROBE_GRPC_port {doc 'Port number of the gRPC service_ Number must be in the range 1 to 65535_'}
                                                optional
                                                    READINESSPROBE_GRPC_service {doc 'Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github_com/grpc/grpc/blob/master/doc/health-checking_md)_ If this is not specified, the default behavior is defined by gRPC_'}
                                            READINESSPROBE_httpGet {doc 'HTTPGet specifies the http request to perform_'}
                                                optional   
                                                    READINESSPROBE_HTTPGET_host {doc 'Host name to connect to, defaults to the pod IP_ You probably want to set "Host" in httpHeaders instead_'}
                                                    READINESSPROBE_HTTPGET_httpHeaders   {doc 'Custom headers to set in the request_ HTTP allows repeated headers_'}
                                                        mandatory   
                                                            READINESSPROBE_HTTPHEADERS_name {doc 'The header field name_ This will be canonicalized upon output, so case-variant names will be understood as the same header_'}
                                                            READINESSPROBE_HTTPHEADERS_value {doc 'The header field value'}
                                                    READINESSPROBE_HTTPGET_path {doc 'Path to access on the HTTP server_'}
                                                    READINESSPROBE_HTTPGET_port {doc '	Name or number of the port to access on the container_ Number must be in the range 1 to 65535_ Name must be an IANA_SVC_NAME_'}
                                                    READINESSPROBE_HTTPGET_scheme {default 'HTTP', doc 'Scheme to use for connecting to the host_ Defaults to HTTP_'}
                                            READINESSPROBE_initialDelaySeconds {doc 'Number of seconds after the container has started before liveness probes are initiated_ More info: https://kubernetes_io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'}
                                            READINESSPROBE_periodSeconds {default 10, doc 'How often (in seconds) to perform the probe_ Default to 10 seconds_ Minimum value is 1_'}
                                            READINESSPROBE_successThreshold {default 1, doc 'Minimum consecutive successes for the probe to be considered successful after having failed_ Defaults to 1_ Must be 1 for liveness and startup_ Minimum value is 1_'}
                                            READINESSPROBE_tcpSocket {doc 'TCPSocket specifies an action involving a TCP port_'}
                                                mandatory   
                                                    READINESSPROBE_TCPSOCKET_port {doc 'Number or name of the port to access on the container_ Number must be in the range 1 to 65535_ Name must be an IANA_SVC_NAME_'}
                                                optional   
                                                    READINESSPROBE_TCPSOCKET_host {doc 'Optional: Host name to connect to, defaults to the pod IP_'}                                     
                                            READINESSPROBE_timeoutSeconds {default 1, doc 'Number of seconds after which the probe times out_ Defaults to 1 second_ Minimum value is 1_ More info: https://kubernetes_io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'}
                                        optional   
                                            READINESSPROBE_terminationGracePeriodSeconds {doc 'Optional duration in seconds the pod needs to terminate gracefully upon probe failure_ The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal_ Set this value longer than the expected cleanup time for your process_ If this value is nil, the pod`s terminationGracePeriodSeconds will be used_ Otherwise, this value overrides the value provided by the pod spec_ Value must be non-negative integer_ The value zero indicates stop immediately via the kill signal (no opportunity to shut down)_ This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate_ Minimum value is 1_ spec_terminationGracePeriodSeconds is used if unset_'}
                                    CONTAINERS_resizePolicy   {doc 'Resources resize policy for the container_'}
                                        mandatory   
                                            RESIZEPOLICY_resourceName {doc 'Name of the resource to which this resource resize policy applies_ Supported values: cpu, memory_'}
                                                alternative   
                                                    CONTAINERS_RESIZEPOLICY_RESTARTPOLICY_cpu
                                                    CONTAINERS_RESIZEPOLICY_RESTARTPOLICY_memory
                                            RESIZEPOLICY_restartPolicy {default 'NotRequired', doc 'Restart policy to apply when specified resource is resized_ If not specified, it defaults to NotRequired_'}
                                    CONTAINERS_restartPolicy {doc 'RestartPolicy defines the restart behavior of individual containers in a pod_ This field may only be set for init containers, and the only allowed value is "Always"_ For non-init containers or when this field is not specified, the restart behavior is defined by the Pod`s restart policy and the container type_ Setting the RestartPolicy as "Always" for the init container will have the following effect: this init container will be continually restarted on exit until all regular containers have terminated_ Once all regular containers have completed, all init containers with restartPolicy "Always" will be shut down_ This lifecycle differs from normal init containers and is often referred to as a "sidecar" container_ Although this init container still starts in the init container sequence, it does not wait for the container to complete before proceeding to the next init container_ Instead, the next init container starts immediately after this init container is started, or after any startupProbe has successfully completed_'}
                                    CONTAINERS_resources {doc 'Compute Resources required by this container_ Cannot be updated_ More info: https://kubernetes_io/docs/concepts/configuration/manage-resources-containers/'}
                                        or
                                            RESOURCES_request {doc 'Requests describes the minimum amount of compute resources required_ If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value_ Requests cannot exceed Limits_ More info: https://kubernetes_io/docs/concepts/configuration/manage-resources-containers/'}
                                                mandatory
                                                    REQUESTS_cpu
                                                    REQUESTS_memory
                                            RESOURCES_limits {doc 'Limits describes the maximum amount of compute resources allowed_ More info: https://kubernetes_io/docs/concepts/configuration/manage-resources-containers/'}
                                                mandatory
                                                    LIMITS_cpu
                                                    LIMITS_memory
                                            RESOURCES_claims {doc 'Claims lists the names of resources, defined in spec_resourceClaims, that are used by this container_ This is an alpha field and requires enabling the DynamicResourceAllocation feature gate_ This field is immutable_ It can only be set for containers_'}
                                                mandatory
                                                    RESOURCES_CLAIMS_name {doc 'Name must match the name of one entry in pod_spec_resourceClaims of the Pod where this field is used_ It makes that resource available inside a container_'}
                                    CONTAINERS_securityContext {doc 'SecurityContext defines the security options the container should be run with_ If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext_ More info: https://kubernetes_io/docs/tasks/configure-pod-container/security-context/'}
                                        optional   
                                            CONTAINERS_SECURITYCONTEXT_allowPrivilegeEscalation {doc 'AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process_ This bool directly controls if the no_new_privs flag will be set on the container process_ AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec_os_name is windows_'}
                                            CONTAINERS_SECURITYCONTEXT_privileged {default false, doc 'Run container in privileged mode_ Processes in privileged containers are essentially equivalent to root on the host_ Defaults to false_ Note that this field cannot be set when spec_os_name is windows_'}
                                            CONTAINERS_SECURITYCONTEXT_procMount {default 'DefaultProcMount', doc 'procMount denotes the type of proc mount to use for the containers_ The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths_ This requires the ProcMountType feature flag to be enabled_ Note that this field cannot be set when spec_os_name is windows_'}
                                            CONTAINERS_SECURITYCONTEXT_readOnlyRootFilesystem {default false, doc 'Whether this container has a read-only root filesystem_ Default is false_ Note that this field cannot be set when spec_os_name is windows_'}
                                            CONTAINERS_SECURITYCONTEXT_runAsGroup {doc 'The GID to run the entrypoint of the container process_ Uses runtime default if unset_ May also be set in PodSecurityContext_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_ Note that this field cannot be set when spec_os_name is windows_'}
                                            CONTAINERS_SECURITYCONTEXT_runAsNonRoot {doc 'Indicates that the container must run as a non-root user_ If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does_ If unset or false, no such validation will be performed_ May also be set in PodSecurityContext_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_'}
                                            CONTAINERS_SECURITYCONTEXT_runAsUser {doc 'The UID to run the entrypoint of the container process_ Defaults to user specified in image metadata if unspecified_ May also be set in PodSecurityContext_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_ Note that this field cannot be set when spec_os_name is windows_'}
                                            CONTAINERS_SECURITYCONTEXT_appArmorProfile {doc 'appArmorProfile is the AppArmor options to use by this container_ If set, this profile overrides the pod`s appArmorProfile_ Note that this field cannot be set when spec_os_name is windows_'}
                                                optional   
                                                    CONTAINERS_APPARMORPROFILE_localhostProfile {doc 'localhostProfile indicates a profile loaded on the node that should be used_ The profile must be preconfigured on the node to work_ Must match the loaded name of the profile_ Must be set if and only if type is "Localhost"_'}
                                                    CONTAINERS_APPARMORPROFILE_type {doc 'type indicates which kind of AppArmor profile will be applied_ Valid options are: Localhost - a profile pre-loaded on the node_ RuntimeDefault - the container runtime`s default profile_ Unconfined - no AppArmor enforcement_'}
                                                        alternative   
                                                            CONTAINERS_APPARMORPROFILE_TYPE_LocalHost
                                                            CONTAINERS_APPARMORPROFILE_TYPE_RuntimeDefault 
                                                            CONTAINERS_APPARMORPROFILE_TYPE_Unconfined 
                                            CONTAINERS_SECURITYCONTEXT_capabilities {doc 'The capabilities to add/drop when running containers_ Defaults to the default set of capabilities granted by the container runtime_ Note that this field cannot be set when spec_os_name is windows_'}
                                                optional   
                                                    CONTAINERS_CAPABILITIES_add   {doc 'Added capabilities'}
                                                        mandatory   
                                                            CONTAINERS_addedCapabilities
                                                    CONTAINERS_CAPABILITIES_drop   {doc 'Removed capabilities'}
                                                        mandatory   
                                                                CONTAINERS_removedCapabilities
                                            CONTAINERS_SECURITYCONTEXT_seLinuxOptions {doc 'The SELinux context to be applied to the container_ If unspecified, the container runtime will allocate a random SELinux context for each container_ May also be set in PodSecurityContext_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_ Note that this field cannot be set when spec_os_name is windows_'}
                                                optional   
                                                    CONTAINERS_SELINUXOPTIONS_level {doc 'Level is SELinux level label that applies to the container_'}
                                                    CONTAINERS_SELINUXOPTIONS_role {doc 'Role is a SELinux role label that applies to the container_'}
                                                    CONTAINERS_SELINUXOPTIONS_type {doc 'Type is a SELinux type label that applies to the container_'}
                                                    CONTAINERS_SELINUXOPTIONS_user {doc 'User is a SELinux user label that applies to the container_'}
                                            CONTAINERS_SECURITYCONTEXT_seccompProfile {doc 'The seccomp options to use by this container_ If seccomp options are provided at both the pod & container level, the container options override the pod options_ Note that this field cannot be set when spec_os_name is windows_'}
                                                optional   
                                                    CONTAINERS_SECCOMPROFILE_localhostProfile {doc 'localhostProfile indicates a profile defined in a file on the node should be used_ The profile must be preconfigured on the node to work_ Must be a descending path, relative to the kubelet`s configured seccomp profile location_ Must be set if type is "Localhost"_ Must NOT be set for any other type_'}
                                                    CONTAINERS_SECCOMPROFILE_type {doc 'type indicates which kind of seccomp profile will be applied_ Valid options are: Localhost - a profile defined in a file on the node should be used_ RuntimeDefault - the container runtime default profile should be used_ Unconfined - no profile should be applied_'}
                                                        alternative   
                                                            CONTAINERS_SECCOMPROFILE_Type_LocalHost
                                                            CONTAINERS_SECCOMPROFILE_Type_RuntimeDefault 
                                                            CONTAINERS_SECCOMPROFILE_Type_Unconfined
                                            CONTAINERS_SECURITYCONTEXT_windowsOptions {doc 'The Windows specific settings applied to all containers_ If unspecified, the options from the PodSecurityContext will be used_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_ Note that this field cannot be set when spec_os_name is linux_'}
                                                optional   
                                                    CONTAINERS_WINDOWSOPTIONS_gmsaCredentialSpec {doc 'GMSACredentialSpec is where the GMSA admission webhook (https://github_com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field_'}
                                                    CONTAINERS_WINDOWSOPTIONS_gmsaCredentialSpecName {doc 'GMSACredentialSpecName is the name of the GMSA credential spec to use_'}
                                                    CONTAINERS_WINDOWSOPTIONS_hostProcess {doc 'HostProcess determines if a container should be run as a "Host Process" container_ All of a Pod`s containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers)_ In addition, if HostProcess is true then HostNetwork must also be set to true_'}
                                                    CONTAINERS_WINDOWSOPTIONS_runAsUserName {doc 'The UserName in Windows to run the entrypoint of the container process_ Defaults to the user specified in image metadata if unspecified_ May also be set in PodSecurityContext_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_'}
                                    CONTAINERS_startupProbe {doc 'StartupProbe indicates that the Pod has successfully initialized_ If specified, no other probes are executed until this completes successfully_ If this probe fails, the Pod will be restarted, just as if the livenessProbe failed_ This can be used to provide different probe parameters at the beginning of a Pod`s lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation_ This cannot be updated_ More info: https://kubernetes_io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'}
                                        mandatory
                                            STARTUPPROBE_exec   {doc 'Exec specifies the action to take_'}
                                                mandatory
                                                    STARTUPPROBE_EXEC_command {doc 'Command is the command line to execute inside the container, the working directory for the command is root ("/") in the container`s filesystem_ The command is simply exec`d, it is not run inside a shell, so traditional shell instructions ("|", etc) won`t work_ To use a shell, you need to explicitly call out to that shell_ Exit status of 0 is treated as live/healthy and non-zero is unhealthy_'}
                                            STARTUPPROBE_failureThreshold {default 3, doc 'Minimum consecutive failures for the probe to be considered failed after having succeeded_ Defaults to 3_ Minimum value is 1_'}
                                            STARTUPPROBE_grpc {doc 'GRPC specifies an action involving a GRPC port_'}
                                                mandatory   
                                                    STARTUPPROBE_GRPC_port {doc 'Port number of the gRPC service_ Number must be in the range 1 to 65535_'}
                                                optional
                                                    STARTUPPROBE_GRPC_service {doc 'Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github_com/grpc/grpc/blob/master/doc/health-checking_md)_ If this is not specified, the default behavior is defined by gRPC_'}
                                            STARTUPPROBE_httpGet {doc 'HTTPGet specifies the http request to perform_'}
                                                optional   
                                                    STARTUPPROBE_HTTPGET_host {doc 'Host name to connect to, defaults to the pod IP_ You probably want to set "Host" in httpHeaders instead_'}
                                                    STARTUPPROBE_HTTPGET_httpHeaders   {doc 'Custom headers to set in the request_ HTTP allows repeated headers_'}
                                                        mandatory   
                                                            STARTUPPROBE_HTTPHEADERS_name {doc 'The header field name_ This will be canonicalized upon output, so case-variant names will be understood as the same header_'}
                                                            STARTUPPROBE_HTTPHEADERS_value {doc 'The header field value'}
                                                    STARTUPPROBE_HTTPGET_path {doc 'Path to access on the HTTP server_'}
                                                    STARTUPPROBE_HTTPGET_port {doc 'Name or number of the port to access on the container_ Number must be in the range 1 to 65535_ Name must be an IANA_SVC_NAME_'}
                                                    STARTUPPROBE_HTTPGET_scheme {default 'HTTP', doc 'Scheme to use for connecting to the host_ Defaults to HTTP_'}
                                            STARTUPPROBE_initialDelaySeconds {doc 'Number of seconds after the container has started before liveness probes are initiated_ More info: https://kubernetes_io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'}
                                            STARTUPPROBE_periodSeconds {default 10, doc 'How often (in seconds) to perform the probe_ Default to 10 seconds_ Minimum value is 1_'}
                                            STARTUPPROBE_successThreshold {default 1, doc 'Minimum consecutive successes for the probe to be considered successful after having failed_ Defaults to 1_ Must be 1 for liveness and startup_ Minimum value is 1_'}
                                            STARTUPPROBE_tcpSocket {doc 'TCPSocket specifies an action involving a TCP port_'}
                                                mandatory   
                                                     STARTUPPROBE_TCPSOCKET_port {doc 'Number or name of the port to access on the container_ Number must be in the range 1 to 65535_ Name must be an IANA_SVC_NAME_'}
                                                optional   
                                                     STARTUPPROBE_TCPSOCKET_host {doc 'Optional: Host name to connect to, defaults to the pod IP_'}
                                            STARTUPPROBE_timeoutSeconds {default 1, doc 'Number of seconds after which the probe times out_ Defaults to 1 second_ Minimum value is 1_ More info: https://kubernetes_io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'}
                                        optional   
                                            STARTUPPROBE_terminationGracePeriodSeconds {doc 'Optional duration in seconds the pod needs to terminate gracefully upon probe failure_ The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal_ Set this value longer than the expected cleanup time for your process_ If this value is nil, the pod`s terminationGracePeriodSeconds will be used_ Otherwise, this value overrides the value provided by the pod spec_ Value must be non-negative integer_ The value zero indicates stop immediately via the kill signal (no opportunity to shut down)_ This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate_ Minimum value is 1_ spec_terminationGracePeriodSeconds is used if unset_'}
                                    CONTAINERS_stdin {default false, doc 'Whether this container should allocate a buffer for stdin in the container runtime_ If this is not set, reads from stdin in the container will always result in EOF_ Default is false_'}
                                    CONTAINERS_stdinOnce {default false, doc 'Whether the container runtime should close the stdin channel after it has been opened by a single attach_ When stdin is true the stdin stream will remain open across multiple attach sessions_ If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted_ If this flag is false, a container processes that reads from stdin will never receive an EOF_ Default is false'}
                                    CONTAINERS_terminationMessagePath {default '/dev/termination-log', doc 'Optional: Path at which the file to which the container`s termination message will be written is mounted into the container`s filesystem_ Message written is intended to be brief final status, such as an assertion failure message_ Will be truncated by the node if greater than 4096 bytes_ The total message length across all containers will be limited to 12kb_ Defaults to /dev/termination-log_ Cannot be updated_'}
                                    CONTAINERS_terminationMessagePolicy {default 'File', doc 'Indicate how the termination message should be populated_ File will use the contents of terminationMessagePath to populate the container status message on both success and failure_ FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error_ The log output is limited to 2048 bytes or 80 lines, whichever is smaller_ Defaults to File_ Cannot be updated_'}
                                    CONTAINERS_tty {default false, doc 'Whether this container should allocate a TTY for itself, also requires "stdin" to be true_ Default is false_'}
                                    CONTAINERS_volumeDevices   {doc 'volumeDevices is the list of block devices to be used by the container_'}
                                        mandatory
                                            VOLUMEDEVICES_devicePath {doc 'devicePath is the path inside of the container that the device will be mapped to_'}
                                            VOLUMEDEVICES_name {doc 'name must match the name of a persistentVolumeClaim in the pod'}
                                    CONTAINERS_volumeMounts   {doc 'Pod volumes to mount into the container`s filesystem_ Cannot be updated_'}
                                        mandatory   
                                            VOLUMEMOUNTS_mountPath {doc 'Path within the container at which the volume should be mounted_ Must not contain ":"_'}
                                            VOLUMEMOUNTS_name {doc 'This must match the Name of a Volume_'}
                                        optional
                                            VOLUMEMOUNTS_readonly {doc 'Mounted read-only if true, read-write otherwise (false or unspecified)_ Defaults to false_'}
                                            VOLUMEMOUNTS_mountPropagation {doc 'mountPropagation determines how mounts are propagated from the host to container and the other way around_ When not set, MountPropagationNone is used_ This field is beta in 1_10_ When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified (which defaults to None)_'}
                                            VOLUMEMOUNTS_recursiveReadOnly {doc 'RecursiveReadOnly specifies whether read-only mounts should be handled recursively_ If ReadOnly is false, this field has no meaning and must be unspecified_ If ReadOnly is true, and this field is set to Disabled, the mount is not made recursively read-only_ If this field is set to IfPossible, the mount is made recursively read-only, if it is supported by the container runtime_ If this field is set to Enabled, the mount is made recursively read-only if it is supported by the container runtime, otherwise the pod will not be started and an error will be generated to indicate the reason_ If this field is set to IfPossible or Enabled, MountPropagation must be set to None (or be unspecified, which defaults to None)_ If this field is not specified, it is treated as an equivalent of Disabled_'}
                                            VOLUMEMOUNTS_subPath {doc 'Path within the volume from which the container`s volume should be mounted_ Defaults to "" (volume`s root)_'}
                                            VOLUMEMOUNTS_subPathExpr {doc 'Expanded path within the volume from which the container`s volume should be mounted_ Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container`s environment_ Defaults to "" (volume`s root)_ SubPathExpr and SubPath are mutually exclusive_'}
                                    CONTAINERS_workingDir {doc 'Container`s working directory_ If not specified, the container runtime`s default will be used, which might be configured in the container image_ Cannot be updated_'}
                        optional
                            PODSPEC_serviceAccountName {doc 'ServiceAccountName is the name of the ServiceAccount to use to run this pod_ More info: https://kubernetes_io/docs/tasks/configure-pod-container/configure-service-account/'}
                            PODSPEC_initContainers   {incomplete, doc 'List of initialization containers belonging to the pod_ Init containers are executed in order prior to containers being started_ If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy_ The name for an init container or normal container must be unique among all containers_ Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes_ The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers_ Limits are applied to init containers in a similar fashion_ Init containers cannot currently be added or removed_ Cannot be updated_ More info: https://kubernetes_io/docs/concepts/workloads/pods/init-containers/'}
                                mandatory   
                                    INITCONTAINERS_name {doc 'Name of the container specified as a DNS_LABEL_ Each container in a pod must have a unique name (DNS_LABEL)_ Cannot be updated_'}
                                optional   
                                    INITCONTAINERS_image {doc 'Container image name_ More info: https://kubernetes_io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets_'}
                                    INITCONTAINERS_securityContext {doc 'SecurityContext defines the security options the container should be run with_ If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext_ More info: https://kubernetes_io/docs/tasks/configure-pod-container/security-context/'}
                                        optional   
                                            INITCONTAINERS_SECURITYCONTEXT_allowPrivilegeEscalation {doc 'AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process_ This bool directly controls if the no_new_privs flag will be set on the container process_ AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec_os_name is windows_'}
                                            INITCONTAINERS_SECURITYCONTEXT_privileged {default false, doc 'Run container in privileged mode_ Processes in privileged containers are essentially equivalent to root on the host_ Defaults to false_ Note that this field cannot be set when spec_os_name is windows_'}
                                            INITCONTAINERS_SECURITYCONTEXT_procMount {default 'DefaultProcMount', doc 'procMount denotes the type of proc mount to use for the containers_ The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths_ This requires the ProcMountType feature flag to be enabled_ Note that this field cannot be set when spec_os_name is windows_'}
                                            INITCONTAINERS_SECURITYCONTEXT_readOnlyRootFilesystem {default false, doc 'Whether this container has a read-only root filesystem_ Default is false_ Note that this field cannot be set when spec_os_name is windows_'}
                                            INITCONTAINERS_SECURITYCONTEXT_runAsGroup {doc 'The GID to run the entrypoint of the container process_ Uses runtime default if unset_ May also be set in PodSecurityContext_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_ Note that this field cannot be set when spec_os_name is windows_'}
                                            INITCONTAINERS_SECURITYCONTEXT_runAsNonRoot {doc 'Indicates that the container must run as a non-root user_ If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does_ If unset or false, no such validation will be performed_ May also be set in PodSecurityContext_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_'}
                                            INITCONTAINERS_SECURITYCONTEXT_runAsUser {doc 'The UID to run the entrypoint of the container process_ Defaults to user specified in image metadata if unspecified_ May also be set in PodSecurityContext_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_ Note that this field cannot be set when spec_os_name is windows_'}
                                            INITCONTAINERS_SECURITYCONTEXT_appArmorProfile {doc 'appArmorProfile is the AppArmor options to use by this container_ If set, this profile overrides the pod`s appArmorProfile_ Note that this field cannot be set when spec_os_name is windows_'}
                                                optional   
                                                    INITCONTAINERS_APPARMORPROFILE_localhostProfile {doc 'localhostProfile indicates a profile loaded on the node that should be used_ The profile must be preconfigured on the node to work_ Must match the loaded name of the profile_ Must be set if and only if type is "Localhost"_'}
                                                    INITCONTAINERS_APPARMORPROFILE_type {doc 'type indicates which kind of AppArmor profile will be applied_ Valid options are: Localhost - a profile pre-loaded on the node_ RuntimeDefault - the container runtime`s default profile_ Unconfined - no AppArmor enforcement_'}
                                                        alternative   
                                                            INITCONTAINERS_APPARMORPROFILE_TYPE_LocalHost
                                                            INITCONTAINERS_APPARMORPROFILE_TYPE_RuntimeDefault 
                                                            INITCONTAINERS_APPARMORPROFILE_TYPE_Unconfined 
                                            INITCONTAINERS_SECURITYCONTEXT_capabilities {doc 'The capabilities to add/drop when running containers_ Defaults to the default set of capabilities granted by the container runtime_ Note that this field cannot be set when spec_os_name is windows_'}
                                                optional   
                                                    INITCONTAINERS_CAPABILITIES_add   {doc 'Added capabilities'}
                                                        mandatory   
                                                            INITCONTAINERS_addedCapabilities
                                                    INITCONTAINERS_CAPABILITIES_drop   {doc 'Removed capabilities'}
                                                        mandatory   
                                                                INITCONTAINERS_removedCapabilities
                                            INITCONTAINERS_SECURITYCONTEXT_seLinuxOptions {doc 'The SELinux context to be applied to the container_ If unspecified, the container runtime will allocate a random SELinux context for each container_ May also be set in PodSecurityContext_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_ Note that this field cannot be set when spec_os_name is windows_'}
                                                optional   
                                                    INITCONTAINERS_SELINUXOPTIONS_level {doc 'Level is SELinux level label that applies to the container_'}
                                                    INITCONTAINERS_SELINUXOPTIONS_role {doc 'Role is a SELinux role label that applies to the container_'}
                                                    INITCONTAINERS_SELINUXOPTIONS_type {doc 'Type is a SELinux type label that applies to the container_'}
                                                    INITCONTAINERS_SELINUXOPTIONS_user {doc 'User is a SELinux user label that applies to the container_'}
                                            INITCONTAINERS_SECURITYCONTEXT_seccompProfile {doc 'The seccomp options to use by this container_ If seccomp options are provided at both the pod & container level, the container options override the pod options_ Note that this field cannot be set when spec_os_name is windows_'}
                                                optional   
                                                    INITCONTAINERS_SECCOMPROFILE_localhostProfile {doc 'localhostProfile indicates a profile defined in a file on the node should be used_ The profile must be preconfigured on the node to work_ Must be a descending path, relative to the kubelet`s configured seccomp profile location_ Must be set if type is "Localhost"_ Must NOT be set for any other type_'}
                                                    INITCONTAINERS_SECCOMPROFILE_type {doc 'type indicates which kind of seccomp profile will be applied_ Valid options are: Localhost - a profile defined in a file on the node should be used_ RuntimeDefault - the container runtime default profile should be used_ Unconfined - no profile should be applied_'}
                                                        alternative   
                                                            INITCONTAINERS_SECCOMPROFILE_Type_LocalHost
                                                            INITCONTAINERS_SECCOMPROFILE_Type_RuntimeDefault 
                                                            INITCONTAINERS_SECCOMPROFILE_Type_Unconfined
                                            INITCONTAINERS_SECURITYCONTEXT_windowsOptions {doc 'The Windows specific settings applied to all containers_ If unspecified, the options from the PodSecurityContext will be used_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_ Note that this field cannot be set when spec_os_name is linux_'}
                                                optional   
                                                    INITCONTAINERS_WINDOWSOPTIONS_gmsaCredentialSpec {doc 'GMSACredentialSpec is where the GMSA admission webhook (https://github_com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field_'}
                                                    INITCONTAINERS_WINDOWSOPTIONS_gmsaCredentialSpecName {doc 'GMSACredentialSpecName is the name of the GMSA credential spec to use_'}
                                                    INITCONTAINERS_WINDOWSOPTIONS_hostProcess {doc 'HostProcess determines if a container should be run as a "Host Process" container_ All of a Pod`s containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers)_ In addition, if HostProcess is true then HostNetwork must also be set to true_'}
                                                    INITCONTAINERS_WINDOWSOPTIONS_runAsUserName {doc 'The UserName in Windows to run the entrypoint of the container process_ Defaults to the user specified in image metadata if unspecified_ May also be set in PodSecurityContext_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_'}
                            PODSPEC_activeDeadlineSeconds {doc 'Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers_ Value must be a positive integer_'}
                            PODSPEC_affinity {incomplete, doc 'If specified, the pod`s scheduling constraints'}
                                optional
                                    AFFINITY_nodeAffinity {incomplete}
                                    AFFINITY_podAffinity {incomplete}
                                    AFFINITY_podAntiAffinity {incomplete}
                            PODSPEC_automountServiceAccountToken {doc 'AutomountServiceAccountToken indicates whether a service account token should be automatically mounted_'}                                   
                            PODSPEC_dnsPolicy {doc 'Set DNS policy for the pod_ Defaults to "ClusterFirst"_ Valid values are "ClusterFirstWithHostNet", "ClusterFirst", "Default" or "None"_ DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy_ To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to "ClusterFirstWithHostNet"_'}
                                alternative
                                    DNSPOLICY_ClusterFirstWithHostNet
                                    DNSPOLICY_ClusterFirst {default}
                                    DNSPOLICY_Default
                                    DNSPOLICY_None
                            PODSPEC_enableServiceLinks {doc 'EnableServiceLinks indicates whether information about services should be injected into pod`s environment variables, matching the syntax of Docker links_ Optional: Defaults to true_'}
                            PODSPEC_hostIPC {default false, doc 'Use the host`s ipc namespace_ Optional: Default to false_'}
                            PODSPEC_hostNetwork {default false, doc 'Host networking requested for this pod_ Use the host`s network namespace_ If this option is set, the ports that will be used must be specified_ Default to false_'}
                            PODSPEC_hostPID {default false, doc 'Use the host`s pid namespace_ Optional: Default to false_'}
                            PODSPEC_hostUsers {default true, doc 'Use the host`s user namespace_ Optional: Default to true_ If set to true or not present, the pod will be run in the host user namespace, useful for when the pod needs a feature only available to the host user namespace, such as loading a kernel module with CAP_SYS_MODULE_ When set to false, a new userns is created for the pod_ Setting false is useful for mitigating container breakout vulnerabilities even allowing users to run their containers as root without actually having root privileges on the host_ This field is alpha-level and is only honored by servers that enable the UserNamespacesSupport feature_'}
                            PODSPEC_hostname {doc 'Specifies the hostname of the Pod If not specified, the pod`s hostname will be set to a system-defined value_'}
                            PODSPEC_nodeName {doc 'NodeName is a request to schedule this pod onto a specific node_ If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements_'}
                            PODSPEC_Volumes   {doc 'List of volumes that can be mounted by containers belonging to the pod_ More info: https://kubernetes_io/docs/concepts/storage/volumes'}
                                mandatory   
                                    VOLUMES_name {doc 'name of the volume_ Must be a DNS_LABEL and unique within the pod_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                                    VOLUMES_type {abstract, doc 'It contains all the types of volumes that can be defined in the pod_'}
                                        or   
                                            emptyDir {doc 'emptyDir represents a temporary directory that shares a pod`s lifetime_ More info: https://kubernetes_io/docs/concepts/storage/volumes#emptydir'}
                                                optional
                                                    EMPTYDIR_medium {doc 'medium represents what type of storage medium should back this directory_ The default is "" which means to use the node`s default medium_ Must be an empty string (default) or Memory_ More info: https://kubernetes_io/docs/concepts/storage/volumes#emptydir'}
                                                        alternative   
                                                            EMPTYDIR_MEDIUM_default {default}
                                                            EMPTYDIR_MEDIUM_memory
                                                    EMPTYDIR_sizeLimit {default 'nil', doc 'sizeLimit is the total amount of local storage required for this EmptyDir volume_ The size limit is also applicable for memory medium_ The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod_ The default is nil which means that the limit is undefined_ More info: https://kubernetes_io/docs/concepts/storage/volumes#emptydir'}
                                            hostPath {doc 'hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container_ This is generally used for system agents or other privileged things that are allowed to see the host machine_ Most containers will NOT need this_ More info: https://kubernetes_io/docs/concepts/storage/volumes#hostpath'}
                                                optional
                                                    HOSTPATH_path {doc 'path of the directory on the host_ If the path is a symlink, it will follow the link to the real path_ More info: https://kubernetes_io/docs/concepts/storage/volumes#hostpath'}
                                                    HOSTPATH_type {default ' ', doc 'type for HostPath Volume Defaults to "" More info: https://kubernetes_io/docs/concepts/storage/volumes#hostpath'}
                                            persistentVolumeClaim {doc 'persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace_ More info: https://kubernetes_io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'}
                                                optional   
                                                    PERSISTENTVOLUMECLAIM_claimName {doc 'claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume_ More info: https://kubernetes_io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'}
                                                    PERSISTENTVOLUMECLAIM_readOnly {default false, doc 'readOnly Will force the ReadOnly setting in VolumeMounts_ Default false_'}
                                            configMap {doc 'configMap represents a configMap that should populate this volume'}
                                                optional
                                                    CONFIGMAP_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                                                    CONFIGMAP_defaultMode {doc 'defaultMode is optional: mode bits used to set permissions on created files by default_ Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511_ YAML accepts both octal and decimal values, JSON requires decimal values for mode bits_ Defaults to 0644_ Directories within the path are not affected by this setting_ This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set_'}
                                                    CONFIGMAP_optional {doc 'optional specify whether the ConfigMap or its keys must be defined'}
                                                    CONFIGMAP_items   {doc 'items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value_ If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present_ If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional_ Paths must be relative and may not contain the "__" path or start with "__"_'}
                                                        mandatory   
                                                            CONFIGMAP_ITEMS_key {doc 'key is the key to project_'}
                                                            CONFIGMAP_ITEMS_path {doc 'path is the relative path of the file to map the key to_ May not be an absolute path_ May not contain the path element "__"_ May not start with the string "__"_'}
                                                        optional 
                                                            CONFIGMAP_ITEMS_mode  {doc 'mode is Optional: mode bits used to set permissions on this file_ Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511_ YAML accepts both octal and decimal values, JSON requires decimal values for mode bits_ If not specified, the volume defaultMode will be used_ This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set_'}
                                            secret {doc 'secret represents a secret that should populate this volume_ More info: https://kubernetes_io/docs/concepts/storage/volumes#secret'}
                                                optional   
                                                    SECRET_secretName {doc 'secretName is the name of the secret in the pod`s namespace to use_ More info: https://kubernetes_io/docs/concepts/storage/volumes#secret'}
                                                    SECRET_defaultMode {default 644, doc 'defaultMode is Optional: mode bits used to set permissions on created files by default_ Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511_ YAML accepts both octal and decimal values, JSON requires decimal values for mode bits_ Defaults to 0644_ Directories within the path are not affected by this setting_ This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set_'}
                                                    SECRET_optional {doc 'optional field specify whether the Secret or its keys must be defined'}
                                                    SECRET_items   {doc 'items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value_ If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present_ If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional_ Paths must be relative and may not contain the "__" path or start with "__"_'}
                                                        mandatory   
                                                            SECRET_ITEMS_key {doc 'key is the key to project_'}
                                                            SECRET_ITEMS_path {doc 'path is the relative path of the file to map the key to_ May not be an absolute path_ May not contain the path element "__"_ May not start with the string "__"_'}
                                                        optional   
                                                            SECRET_ITEMS_mode {doc 'mode is Optional: mode bits used to set permissions on this file_ Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511_ YAML accepts both octal and decimal values, JSON requires decimal values for mode bits_ If not specified, the volume defaultMode will be used_ This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set_'}
                                            nfs {doc 'nfs represents an NFS mount on the host that shares a pod`s lifetime More info: https://kubernetes_io/docs/concepts/storage/volumes#nfs'}
                                                mandatory   
                                                    NFS_path {doc 'Path that is exported by the NFS server_ More info: https://kubernetes_io/docs/concepts/storage/volumes#nfs'}
                                                    NFS_server {doc 'Server is the hostname or IP address of the NFS server_ More info: https://kubernetes_io/docs/concepts/storage/volumes#nfs'}
                                                optional    
                                                    NFS_readOnly {default false, doc 'ReadOnly here will force the NFS export to be mounted with read-only permissions_ Defaults to false_'}
                                            csi {doc 'csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature)_'}
                                                mandatory   
                                                    CSI_driver {doc 'Driver is the name of the CSI driver that handles this volume_ Consult with your admin for the correct name as registered in the cluster_'}
                                                optional  
                                                    CSI_volumeAttributes {doc 'VolumeAttributes stores driver-specific properties that are passed to the CSI driver_ Consult your driver`s documentation for supported values_'}
                                                    CSI_readOnly {default false, doc 'ReadOnly here will force the ReadOnly setting in VolumeMounts_ Defaults to false_'}  
                                                    CSI_fsType {doc 'fsType to mount_ Ex_ "ext4", "xfs", "ntfs"_ If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply_'}                                      
                                                    CSI_nodePublichSecretRef {doc 'NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls_ This field is optional, and  may be empty if no secret is required_ If the secret is specified, it must be a secret object that is already visible to the Kubelet_'}
                                                        mandatory   
                                                            CSI_NODEPUBLISHSECRETREF_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                                            downwardAPI {doc 'downwardAPI represents downward API about the pod that should populate this volume'}
                                                mandatory   
                                                    DOWNWARDAPI_items   {doc 'Items is a list of downward API volume file'}
                                                        mandatory   
                                                            DOWNWARDAPI_ITEMS_fieldRef {doc 'FieldRef contains the field selector to populate this volume with_'}
                                                                mandatory 
                                                                    DOWNWARDAPI_ITEMS_FIELDREF_apiVersion {default 'v1', doc 'Version of the schema the FieldPath is written in terms of, defaults to "v1"_'}  
                                                                    DOWNWARDAPI_ITEMS_FIELDREF_fieldPath {doc 'Path of the field to select in the specified API version_'}
                                                            DOWNWARDAPI_ITEMS_path {doc 'Path is the relative path name of the file to be created_ Must not be absolute or contain the "__" path_ Must be utf-8 encoded_ The first item of the relative path must not start with "__'}
                                                        optional 
                                                            DOWNWARDAPI_mode {doc 'Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511_ YAML accepts both octal and decimal values, JSON requires decimal values for mode bits_ If not specified, the volume defaultMode will be used_ This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set_'}  
                                                            DOWNWARDAPI_ITEMS_resourceFieldRef {doc 'ResourceFieldRef contains the resource field selector to populate this volume with_'}
                                                                mandatory   
                                                                    DOWNWARDAPI_ITEMS_RESOURCEFIELDREF_containerName {doc 'Container name: required for volumes, optional for env vars'}
                                                                    DOWNWARDAPI_ITEMS_RESOURCEFIELDREF_resource {doc 'Required: resource to select'}
                                                                optional   
                                                                    DOWNWARDAPI_ITEMS_RESOURCEFIELDREF_divisor {default '1', doc 'Specifies the output format of the exposed resources, defaults to "1"'}
                                                optional
                                                    DOWNWARDAPI_defaultMode {default 644, doc 'Optional: mode bits to use on created files by default_ Must be a Optional: mode bits used to set permissions on created files by default_ Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511_ YAML accepts both octal and decimal values, JSON requires decimal values for mode bits_ Defaults to 0644_ Directories within the path are not affected by this setting_ This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set_'}
                                            ephemeral {doc 'ephemeral represents a volume that is handled by a cluster storage driver_ The volume`s lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed_ Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through a PersistentVolumeClaim (see EphemeralVolumeSource for more information on the connection between this volume type and PersistentVolumeClaim)_ Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod_ Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information_ A pod can use both types of ephemeral volumes and persistent volumes at the same time_'}
                                                mandatory   
                                                    EPHEMERAL_volumeClaimTemplate {doc 'Will be used to create a stand-alone PVC to provision the volume_ The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i_e_ the PVC will be deleted together with the pod_ The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec_Volumes` array entry_ Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long)_ An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake_ Starting the pod is then blocked until the unrelated PVC is removed_ If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists_ Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster_ This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created_ Required, must not be nil_'}
                                                        mandatory   
                                                            EPHEMERAL_VOLUMECLAIMTEMPLATE_spec {incomplete, doc 'The specification for the PersistentVolumeClaim_ The entire content is copied unchanged into the PVC that gets created from this template_ The same fields as in a PersistentVolumeClaim are also valid here_'}
                                                        optional   
                                                            EPHEMERAL_VOLUMECLAIMTEMPLATE_metadata {incomplete, doc 'May contain labels and annotations that will be copied into the PVC when creating it_ No other fields are allowed and will be rejected during validation_'}
                                            fc {doc 'fc represents a Fibre Channel resource that is attached to a kubelet`s host machine and then exposed to the pod_'}
                                                mandatory
                                                    FC_fsType {doc 'fsType is the filesystem type to mount_ Must be a filesystem type supported by the host operating system_ Ex_ "ext4", "xfs", "ntfs"_ Implicitly inferred to be "ext4" if unspecified_'}   
                                                optional    
                                                    FC_readOnly {default false, doc 'readOnly is Optional: Defaults to false (read/write)_ ReadOnly here will force the ReadOnly setting in VolumeMounts_'}
                                                    FC_lun {doc 'lun is Optional: FC target lun number'}
                                                    FC_targetWWNs   {doc 'targetWWNs is Optional: FC target worldwide names (WWNs)'}
                                                        mandatory   
                                                            FC_TARGETWWNS_targetWWN
                                                    FC_wwids   {doc 'wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously_'}
                                                        mandatory   
                                                            FC_WWIDS_wwid
                                            flocker {doc 'flocker represents a Flocker volume attached to a kubelet`s host machine_ This depends on the Flocker control service being running'}
                                                mandatory
                                                    FLOCKER_datsetUUID {doc 'datasetUUID is the UUID of the dataset_ This is unique identifier of a Flocker dataset'}
                                                    FLOCKER_datasetName {doc 'Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated'}
                                            iscsi {doc 'iscsi represents an ISCSI Disk resource that is attached to a kubelet`s host machine and then exposed to the pod_ More info: https://examples_k8s_io/volumes/iscsi/README_md'} 
                                                mandatory 
                                                    ISCSI_targetPortal {doc 'targetPortal is iSCSI Target Portal_ The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)_'}  
                                                    ISCSI_lun {doc 'lun represents iSCSI Target Lun number_'}
                                                    ISCSI_iqn {doc 'iqn is the target iSCSI Qualified Name_'}
                                                optional 
                                                    ISCSI_fsType {doc 'fsType is the filesystem type of the volume that you want to mount_ Tip: Ensure that the filesystem type is supported by the host operating system_ Examples: "ext4", "xfs", "ntfs"_ Implicitly inferred to be "ext4" if unspecified_ More info: https://kubernetes_io/docs/concepts/storage/volumes#iscsi'} 
                                                    ISCSI_chapAuthDiscovery {doc 'chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication'}
                                                    ISCSI_chapAuthSession {doc 'chapAuthSession defines whether support iSCSI Session CHAP authentication'}
                                                    ISCSI_initiatorName {doc 'initiatorName is the custom iSCSI Initiator Name_ If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection_'}
                                                    ISCSI_iscsiInterface {default 'default', doc 'iscsiInterface is the interface Name that uses an iSCSI transport_ Defaults to "default" (tcp)_'}
                                                    ISCSI_portals   {doc 'portals is the iSCSI Target Portal List_ The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)_'}
                                                        mandatory   
                                                            ISCSI_PORTALS_portal
                                                    ISCSI_readOnly {default false, doc 'readOnly here will force the ReadOnly setting in VolumeMounts_ Defaults to false_'}
                                                    ISCSI_secretRef {doc 'secretRef is the CHAP Secret for iSCSI target and initiator authentication'}
                                                        mandatory   
                                                            ISCSI_SECRETREF_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                                            photonPersistentDisk {doc 'photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine_'}
                                                mandatory   
                                                    PHOTONPERSISTENTDISK_pdID {doc 'pdID is the ID that identifies Photon Controller persistent disk_'}
                                                optional    
                                                    PHOTONPERSISTENTDISK_fsType {doc 'fsType is the filesystem type to mount_ Must be a filesystem type supported by the host operating system_ Ex_ "ext4", "xfs", "ntfs"_ Implicitly inferred to be "ext4" if unspecified_'}
                                            projected {doc 'projected items for all in one resources secrets, configmaps, and downward API_'}
                                                mandatory   
                                                    PROJECTED_defaultmode {doc 'defaultMode are the mode bits used to set permissions on created files by default_ Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511_ YAML accepts both octal and decimal values, JSON requires decimal values for mode bits_ Directories within the path are not affected by this setting_ This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set_'}
                                                    PROJECTED_sources   {doc 'sources is the list of volume projections'}
                                                        alternative   
                                                            PROJECTED_SOURCES_clusterTrustBundle {incomplete, doc 'ClusterTrustBundle allows a pod to access the `_spec_trustBundle` field of ClusterTrustBundle objects in an auto-updating file_ Alpha, gated by the ClusterTrustBundleProjection feature gate_ ClusterTrustBundle objects can either be selected by name, or by the combination of signer name and a label selector_ Kubelet performs aggressive normalization of the PEM contents written into the pod filesystem_ Esoteric PEM features such as inter-block comments and block headers are stripped_ Certificates are deduplicated_ The ordering of certificates within the file is arbitrary, and Kubelet may change the order over time_'}
                                                            PROJECTED_SOURCES_configMap {incomplete, doc 'configMap information about the configMap data to project'}
                                                            PROJECTED_SOURCES_downwardAPI {incomplete, doc 'downwardAPI information about the downwardAPI data to project'}
                                                            PROJECTED_SOURCES_secret {incomplete, doc 'secret information about the secret data to project'}
                                                            PROJECTED_SOURCES_serviceAccountToken {incomplete, doc 'serviceAccountToken is information about the serviceAccountToken data to project'}
                                            quobyte {doc 'quobyte represents a Quobyte mount on the host that shares a pod`s lifetime_'}
                                                mandatory   
                                                    QUOBYTE_volume {doc 'volume is a string that references an already created Quobyte volume by name_'}
                                                    QUOBYTE_registry {doc 'registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes'}
                                                optional
                                                    QUOBYTE_group {doc 'group to map volume access to Default is no group'}
                                                    QUOBYTE_readOnly {default false, doc 'readOnly here will force the Quobyte volume to be mounted with read-only permissions_ Defaults to false_'}
                                                    QUOBYTE_tenant {doc 'tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin'}
                                                    QUOBYTE_user {doc 'user to map volume access to Defaults to serivceaccount user'}
                                            rbd {doc 'rbd represents a Rados Block Device mount on the host that shares a pod`s lifetime_ More info: https://examples_k8s_io/volumes/rbd/README_md'}
                                                mandatory    
                                                    RBD_image {doc 'image is the rados image name_ More info: https://examples_k8s_io/volumes/rbd/README_md#how-to-use-it'}
                                                    RBD_monitors   {doc 'monitors is a collection of Ceph monitors_ More info: https://examples_k8s_io/volumes/rbd/README_md#how-to-use-it'}
                                                        mandatory   
                                                            RBD_MONITORS_monitor
                                                    RBD_pool {default 'rbd', doc 'pool is the rados pool name_ Default is rbd_ More info: https://examples_k8s_io/volumes/rbd/README_md#how-to-use-it'}                                                
                                                optional  
                                                    RBD_fsType {doc 'fsType is the filesystem type of the volume that you want to mount_ Tip: Ensure that the filesystem type is supported by the host operating system_ Examples: "ext4", "xfs", "ntfs"_ Implicitly inferred to be "ext4" if unspecified_ More info: https://kubernetes_io/docs/concepts/storage/volumes#rbd'}  
                                                    RBD_readOnly {default false,doc 'readOnly here will force the ReadOnly setting in VolumeMounts_ Defaults to false_ More info: https://examples_k8s_io/volumes/rbd/README_md#how-to-use-it'}
                                                    RBD_secretRef {default false, doc 'secretRef is name of the authentication secret for RBDUser_ If provided overrides keyring_ Default is nil_ More info: https://examples_k8s_io/volumes/rbd/README_md#how-to-use-it'}
                                                        mandatory   
                                                            RBD_SECRETREF_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                                                    RBD_keyring {default '/etc/ceph/keyring', doc 'keyring is the path to key ring for RBDUser_ Default is /etc/ceph/keyring_ More info: https://examples_k8s_io/volumes/rbd/README_md#how-to-use-it'}
                                                    RBD_user {default 'admin', doc 'user is the rados user name_ Default is admin_ More info: https://examples_k8s_io/volumes/rbd/README_md#how-to-use-it'}                                                    
                                            scaleIO {doc 'scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes_'}
                                                mandatory   
                                                    SCALEIO_gateway {doc 'gateway is the host address of the ScaleIO API Gateway_'}
                                                    SCALEIO_volumeName {doc 'volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source_'}
                                                    SCALEIO_system {doc 'system is the name of the storage system as configured in ScaleIO_'}
                                                    SCALEIO_protectionDomain {doc 'protectionDomain is the name of the ScaleIO Protection Domain for the configured storage_'}
                                                optional  
                                                    SCALEIO_fsType {default 'xfs', doc 'fsType is the filesystem type to mount_ Must be a filesystem type supported by the host operating system_ Ex_ "ext4", "xfs", "ntfs"_ Default is "xfs"_'} 
                                                    SCALEIO_readOnly {default false, doc 'readOnly Defaults to false (read/write)_ ReadOnly here will force the ReadOnly setting in VolumeMounts_'}
                                                    SCALEIO_secretRef {doc 'secretRef references to the secret for ScaleIO user and other sensitive information_ If this is not provided, Login operation will fail_'}
                                                        mandatory
                                                            SCALEIO_SECRETREF_name
                                                    SCALEIO_sslEnabled {default false, doc 'sslEnabled Flag enable/disable SSL communication with Gateway, default false'}
                                                    SCALEIO_storageMode {doc 'storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned_ Default is ThinProvisioned_'}
                                                        alternative   
                                                            SCALEIO_STORAGEMODE_thickProvisioned
                                                            SCALEIO_STORAGEMODE_thinProvisioned {default}
                                                    SCALEIO_storagePool {doc 'storagePool is the ScaleIO Storage Pool associated with the protection domain_'}
                                            storageos {doc 'storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes_'}
                                                mandatory   
                                                    STORAGEOS_volumeName {doc 'volumeName is the human-readable name of the StorageOS volume_ Volume names are only unique within a namespace_'}
                                                optional   
                                                    STORAGEOS_fsType {doc 'fsType is the filesystem type to mount_ Must be a filesystem type supported by the host operating system_ Ex_ "ext4", "xfs", "ntfs"_ Implicitly inferred to be "ext4" if unspecified_'}
                                                    STORAGEOS_readOnly {default false, doc 'readOnly defaults to false (read/write)_ ReadOnly here will force the ReadOnly setting in VolumeMounts_'}
                                                    STORAGEOS_secretRef {doc 'secretRef specifies the secret to use for obtaining the StorageOS API credentials_ If not specified, default values will be attempted_'}
                                                        mandatory   
                                                            STORAGEOS_SECRETREF_name
                                                    STORAGEOS_volumeNamespace {doc 'volumeNamespace specifies the scope of the volume within StorageOS_ If no namespace is specified then the Pod`s namespace will be used_ This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration_ Set VolumeName to any name to override the default behaviour_ Set to "default" if you are not using namespaces within StorageOS_ Namespaces that do not pre-exist within StorageOS will be created_'}
                    ServiceSpec {abstract, doc 'Specification of the desired behavior of the Service_'}
                        optional
                            SERVICESPEC_allocateLoadBalancerNodePorts {default true, doc 'allocateLoadBalancerNodePorts defines if NodePorts will be automatically allocated for services with type LoadBalancer_ Default is "true"_ It may be set to "false" if the cluster load-balancer does not rely on NodePorts_ If the caller requests specific NodePorts (by specifying a value), those requests will be respected, regardless of this field_ This field may only be set for services with type LoadBalancer and will be cleared if the type is changed to any other type_'}
                            SERVICESPEC_clusterIP {doc 'clusterIP is the IP address of the service and is usually assigned randomly_ If an address is specified manually, is in-range (as per system configuration), and is not in use, it will be allocated to the service; otherwise creation of the service will fail_ This field may not be changed through updates unless the type field is also being changed to ExternalName (which requires this field to be blank) or the type field is being changed from ExternalName (in which case this field may optionally be specified, as describe above)_ Valid values are "None", empty string (""), or a valid IP address_ Setting this to "None" makes a "headless service" (no virtual IP), which is useful when direct endpoint connections are preferred and proxying is not required_ Only applies to types ClusterIP, NodePort, and LoadBalancer_ If this field is specified when creating a Service of type ExternalName, creation will fail_ This field will be wiped when updating a Service to type ExternalName_ More info: https://kubernetes_io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'}
                                alternative
                                    CLUSTERIP_none
                                    CLUSTERIP_emptyString
                                    CLUSTERIP_IP
                            SERVICESPEC_clusterIPs   {doc 'ClusterIPs is a list of IP addresses assigned to this service, and are usually assigned randomly_ If an address is specified manually, is in-range (as per system configuration), and is not in use, it will be allocated to the service; otherwise creation of the service will fail_ This field may not be changed through updates unless the type field is also being changed to ExternalName (which requires this field to be empty) or the type field is being changed from ExternalName (in which case this field may optionally be specified, as describe above)_ Valid values are "None", empty string (""), or a valid IP address_ Setting this to "None" makes a "headless service" (no virtual IP), which is useful when direct endpoint connections are preferred and proxying is not required_ Only applies to types ClusterIP, NodePort, and LoadBalancer_ If this field is specified when creating a Service of type ExternalName, creation will fail_ This field will be wiped when updating a Service to type ExternalName_ If this field is not specified, it will be initialized from the clusterIP field_ If this field is specified, clients must ensure that clusterIPs[0] and clusterIP have the same value_ This field may hold a maximum of two entries (dual-stack IPs, in either order)_ These IPs must correspond to the values of the ipFamilies field_ Both clusterIPs and ipFamilies are governed by the ipFamilyPolicy field_ More info: https://kubernetes_io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'} 
                                alternative
                                    CLUSTERIPS_none
                                    CLUSTERIPS_emptyString
                                    CLUSTERIPS_IPs
                            SERVICESPEC_externalIPs   {doc 'externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service_ These IPs are not managed by Kubernetes_ The user is responsible for ensuring that traffic arrives at a node with this IP_ A common example is external load-balancers that are not part of the Kubernetes system_'}
                                mandatory
                                    SERVICESPEC_EXTERNALIPS_ip
                            SERVICESPEC_externalName {doc 'externalName is the external reference that discovery mechanisms will return as an alias for this service (e_g_ a DNS CNAME record)_ No proxying will be involved_ Must be a lowercase RFC-1123 hostname (https://tools_ietf_org/html/rfc1123) and requires `type` to be "ExternalName"_'}
                            SERVICESPEC_externalTrafficPolicy {doc 'externalTrafficPolicy describes how nodes distribute service traffic they receive on one of the Service`s "externally-facing" addresses (NodePorts, ExternalIPs, and LoadBalancer IPs)_ If set to "Local", the proxy will configure the service in a way that assumes that external load balancers will take care of balancing the service traffic between nodes, and so each node will deliver traffic only to the node-local endpoints of the service, without masquerading the client source IP_ (Traffic mistakenly sent to a node with no endpoints will be dropped_) The default value, "Cluster", uses the standard behavior of routing to all endpoints evenly (possibly modified by topology and other features)_ Note that traffic sent to an External IP or LoadBalancer IP from within the cluster will always get "Cluster" semantics, but clients sending to a NodePort from within the cluster may need to take traffic policy into account when picking a node_'}
                                alternative   
                                    EXTERNALTRAFFICPOLICY_Local
                                    EXTERNALTRAFFICPOLICY_Cluster {default}
                            SERVICESPEC_healthCheckNodePort {doc 'healthCheckNodePort specifies the healthcheck nodePort for the service_ This only applies when type is set to LoadBalancer and externalTrafficPolicy is set to Local_ If a value is specified, is in-range, and is not in use, it will be used_ If not specified, a value will be automatically allocated_ External systems (e_g_ load-balancers) can use this port to determine if a given node holds endpoints for this service or not_ If this field is specified when creating a Service which does not need it, creation will fail_ This field will be wiped when updating a Service to no longer need it (e_g_ changing type)_ This field cannot be updated once set_'}
                            SERVICESPEC_internalTrafficPolicy {doc 'InternalTrafficPolicy describes how nodes distribute service traffic they receive on the ClusterIP_ If set to "Local", the proxy will assume that pods only want to talk to endpoints of the service on the same node as the pod, dropping the traffic if there are no local endpoints_ The default value, "Cluster", uses the standard behavior of routing to all endpoints evenly (possibly modified by topology and other features)_'}
                                alternative   
                                    INTERNALTRAFFICPOLICY_Local
                                    INTERNALTRAFFICPOLICY_Cluster {default}
                            SERVICESPEC_ipFamilies {doc 'IPFamilies is a list of IP families (e_g_ IPv4, IPv6) assigned to this service_ This field is usually assigned automatically based on cluster configuration and the ipFamilyPolicy field_ If this field is specified manually, the requested family is available in the cluster, and ipFamilyPolicy allows it, it will be used; otherwise creation of the service will fail_ This field is conditionally mutable: it allows for adding or removing a secondary IP family, but it does not allow changing the primary IP family of the Service_ Valid values are "IPv4" and "IPv6"_ This field only applies to Services of types ClusterIP, NodePort, and LoadBalancer, and does apply to "headless" services_ This field will be wiped when updating a Service to type ExternalName_ This field may hold a maximum of two entries (dual-stack families, in either order)_ These families must correspond to the values of the clusterIPs field, if specified_ Both clusterIPs and ipFamilies are governed by the ipFamilyPolicy field_'}
                                optional
                                    IPFAMILIES_IPv4
                                    IPFAMILIES_IPv6
                            SERVICESPEC_ipFamilyPolicy {doc 'IPFamilyPolicy represents the dual-stack-ness requested or required by this Service_ If there is no value provided, then this field will be set to SingleStack_ Services can be "SingleStack" (a single IP family), "PreferDualStack" (two IP families on dual-stack configured clusters or a single IP family on single-stack clusters), or "RequireDualStack" (two IP families on dual-stack configured clusters, otherwise fail)_ The ipFamilies and clusterIPs fields depend on the value of this field_ This field will be wiped when updating a service to type ExternalName_'}
                                alternative   
                                    SingleStack {default}
                                    PreferDualStack
                                    RequireDualStack
                            SERVICESPEC_loadBalancerClass {doc 'loadBalancerClass is the class of the load balancer implementation this Service belongs to_ If specified, the value of this field must be a label-style identifier, with an optional prefix, e_g_ "internal-vip" or "example_com/internal-vip"_ Unprefixed names are reserved for end-users_ This field can only be set when the Service type is "LoadBalancer"_ If not set, the default load balancer implementation is used, today this is typically done through the cloud provider integration, but should apply for any default implementation_ If set, it is assumed that a load balancer implementation is watching for Services with a matching class_ Any default load balancer implementation (e_g_ cloud providers) should ignore Services that set this field_ This field can only be set when creating or updating a Service to type "LoadBalancer"_ Once set, it can not be changed_ This field will be wiped when a service is updated to a non "LoadBalancer" type_'}
                            SERVICESPEC_Ports   {doc 'The list of ports that are exposed by this service_ More info: https://kubernetes_io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'}
                                mandatory   
                                    SERVICESPEC_PORTS_port {doc 'The port that will be exposed by this service_'}
                                optional
                                    SERVICESPEC_PORTS_name {doc 'The name of this port within the service_ This must be a DNS_LABEL_ All ports within a ServiceSpec must have unique names_ When considering the endpoints for a Service, this must match the "name" field in the EndpointPort_ Optional if only one ServicePort is defined on this service_'}
                                    SERVICESPEC_PORTS_protocol {doc 'The IP protocol for this port_ Supports "TCP", "UDP", and "SCTP"_ Default is TCP_'}
                                        alternative
                                            PORTS_PROTOCOL_tcp {default}
                                            PORTS_PROTOCOL_udp
                                            PORTS_PROTOCOL_sctp
                                    SERVICESPEC_PORTS_nodePort {doc 'The port on each node on which this service is exposed when type is NodePort or LoadBalancer_ Usually assigned by the system_ If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail_ If not specified, a port will be allocated if this Service requires one_ If this field is specified when creating a Service which does not need it, creation will fail_ This field will be wiped when updating a Service to no longer need it (e_g_ changing type from NodePort to ClusterIP)_ More info: https://kubernetes_io/docs/concepts/services-networking/service/#type-nodeport'}
                                    SERVICESPEC_PORTS_targetPort {doc 'Number or name of the port to access on the pods targeted by the service_ Number must be in the range 1 to 65535_ Name must be an IANA_SVC_NAME_ If this is a string, it will be looked up as a named port in the target Pod`s container ports_ If this is not specified, the value of the "port" field is used (an identity map)_ This field is ignored for services with clusterIP=None, and should be omitted or set equal to the "port" field_ More info: https://kubernetes_io/docs/concepts/services-networking/service/#defining-a-service'}
                                    SERVICESPEC_PORTS_appProtocol {doc 'The application protocol for this port_ This is used as a hint for implementations to offer richer behavior for protocols that they understand_ This field follows standard Kubernetes label syntax_ Valid values are either: * Un-prefixed protocol names - reserved for IANA standard service names (as per RFC-6335 and https://www_iana_org/assignments/service-names)_ * Kubernetes-defined prefixed names: * "kubernetes_io/h2c" - HTTP/2 prior knowledge over cleartext as described in https://www_rfc-editor_org/rfc/rfc9113_html#name-starting-http-2-with-prior- * "kubernetes_io/ws" - WebSocket over cleartext as described in https://www_rfc-editor_org/rfc/rfc6455 * "kubernetes_io/wss" - WebSocket over TLS as described in https://www_rfc-editor_org/rfc/rfc6455 * Other protocols should use implementation-defined prefixed names such as mycompany_com/my-custom-protocol_'}
                            SERVICESPEC_publishNotReadyAddresses {doc 'publishNotReadyAddresses indicates that any agent which deals with endpoints for this Service should disregard any indications of ready/not-ready_ The primary use case for setting this field is for a StatefulSet`s Headless Service to propagate SRV DNS records for its Pods for the purpose of peer discovery_ The Kubernetes controllers that generate Endpoints and EndpointSlice resources for Services interpret this to mean that all endpoints are considered "ready" even if the Pods themselves are not_ Agents which consume only Kubernetes generated endpoints through the Endpoints or EndpointSlice resources can safely assume this behavior_'}
                            SERVICESPEC_Selector   {doc 'Route service traffic to pods with label keys and values matching this selector_ If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify_ Only applies to types ClusterIP, NodePort, and LoadBalancer_ Ignored if type is ExternalName_ More info: https://kubernetes_io/docs/concepts/services-networking/service/'}
                                mandatory
                                    SELECTOR_key
                                    SELECTOR_value
                            SERVICESPEC_sessionAffinity {doc 'sessionAffinityConfig contains the configurations of session affinity_'}
                                alternative   
                                    SESSIONAFFINITY_clientIP {doc 'clientIP contains the configurations of Client IP based session affinity_'}
                                    SESSIONAFFINITY_none
                            SERVICESPEC_sessionAffinityConfig {doc 'sessionAffinityConfig contains the configurations of session affinity_'}
                                mandatory
                                    SESSIONAFFINITYCONFIG_clientIP {doc 'clientIP contains the configurations of Client IP based session affinity_'}
                                        mandatory
                                            CLIENTIP_timeoutSeconds {default 10800, doc 'timeoutSeconds specifies the seconds of ClientIP type session sticky time_ The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP"_ Default value is 10800(for 3 hours)_'}
                            SERVICESPEC_trafficDistribution {doc 'TrafficDistribution offers a way to express preferences for how traffic is distributed to Service endpoints_ Implementations can use this field as a hint, but are not required to guarantee strict adherence_ If the field is not set, the implementation will apply its default routing strategy_ If set to "PreferClose", implementations should prioritize endpoints that are topologically close (e_g_, same zone)_'}
                            SERVICESPEC_Type {doc 'type determines how the Service is exposed_ Defaults to ClusterIP_ Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer_ "ClusterIP" allocates a cluster-internal IP address for load-balancing to endpoints_ Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object or EndpointSlice objects_ If clusterIP is "None", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a virtual IP_ "NodePort" builds on ClusterIP and allocates a port on every node which routes to the same endpoints as the clusterIP_ "LoadBalancer" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the same endpoints as the clusterIP_ "ExternalName" aliases this service to the specified externalName_ Several other fields do not apply to ExternalName services_ More info: https://kubernetes_io/docs/concepts/services-networking/service/#publishing-services-service-types'}
                                alternative   
                                    TYPE_ExternalName
                                    TYPE_ClusterIP {default}
                                    TYPE_NodePort
                                    TYPE_LoadBalancer
                    CustomResourceDefinitionSpec {incomplete, doc 'CustomResourceDefinitionSpec describes how a user wants their resource to appear'}
                        optional   
                            CUSTOMRESOURCEDEFINITIONSPEC_conversion {doc 'conversion defines conversion settings for the CRD_'}
                                mandatory 
                                    CONVERSION_strategy {doc 'strategy specifies how custom resources are converted between versions_ Allowed values are: - `"None"`: The converter only change the apiVersion and would not touch any other field in the custom resource_ - `"Webhook"`: API Server will call to an external webhook to do the conversion_ Additional information is needed for this option_ This requires spec_preserveUnknownFields to be false, and spec_conversion_webhook to be set_'}
                                        alternative
                                            CONVERSION_STRATEGY_None
                                            CONVERSION_STRATEGY_Webhook
                                optional
                                    CONVERSION_webhook {doc 'webhook describes how to call the conversion webhook_ Required when `strategy` is set to `"Webhook"`_'}
                                        mandatory
                                            WEBHOOK_clientConfig {doc 'clientConfig is the instructions for how to call the webhook if strategy is `Webhook`_'}
                                                alternative
                                                    CLIENTCONFIG_url {doc 'URL gives the location of the webhook, in standard URL form (`scheme://host:port/path`)_ Exactly one of `url` or `service` must be specified_'}
                                                    CLIENTCONFIG_URL_service {doc 'service is a reference to the service for this webhook_ Either service or url must be specified_ If the webhook is running within the cluster, then you should use `service`_'}                                                
                                                        mandatory   
                                                            CLIENTCONFIG_URL_SERVICE_name {doc 'name is the name of the service_ Required'}
                                                            CLIENTCONFIG_URL_SERVICE_namespace {doc 'namespace is the namespace of the service_ Required'}
                                                            CLIENTCONFIG_URL_port {default 443, doc 'port is an optional service port at which the webhook will be contacted_ `port` should be a valid port number (1-65535, inclusive)_ Defaults to 443 for backward compatibility_'}
                                                        optional   
                                                             CLIENTCONFIG_URL_SERVICE_path {doc 'path is an optional URL path at which the webhook will be contacted_'}
                                                optional   
                                                    CLIENTCONFIG_URL_caBundle {doc 'caBundle is a PEM encoded CA bundle which will be used to validate the webhook`s server certificate_ If unspecified, system trust roots on the apiserver are used_'}                                            
                                            WEEBHOOK_conversionReviewVersions   {doc 'conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects_ The API server will use the first version in the list which it supports_ If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource_ If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail_'}
                                                mandatory   
                                                    CONVERSIONREVIEWVERSIONS_version
                            CUSTOMRESOURCEDEFINITIONSPEC_group {doc 'group is the API group of the defined custom resource_ The custom resources are served under `/apis/<group>/___`_ Must match the name of the CustomResourceDefinition (in the form `<names_plural>_<group>`)_'}
                            CUSTOMRESOURCEDEFINITIONSPEC_names {doc 'names specify the resource and kind names for the custom resource_'}
                                mandatory   
                                    CUSTOMRESOURCEDEFINITIONSPEC_NAMES_categories   {doc 'categories is a list of grouped resources this custom resource belongs to (e_g_ "all")_ This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`_'}
                                        mandatory 
                                            NAMES_CATEGORIES_resource
                                    CUSTOMRESOURCEDEFINITIONSPEC_NAMES_kind {doc 'kind is the serialized kind of the resource_ It is normally CamelCase and singular_ Custom resource instances will use this value as the `kind` attribute in API calls_'}
                                    CUSTOMRESOURCEDEFINITIONSPEC_NAMES_listKind {doc 'listKind is the serialized kind of the list for this resource_ Defaults to "`kind`List"_'}
                                    CUSTOMRESOURCEDEFINITIONSPEC_NAMES_plural {doc 'plural is the plural name of the resource to serve_ The custom resources are served under `/apis/<group>/<version>/___/<plural>`_ Must match the name of the CustomResourceDefinition (in the form `<names_plural>_<group>`)_ Must be all lowercase_'}
                                    CUSTOMRESOURCEDEFINITIONSPEC_NAMES_singular {doc 'singular is the singular name of the resource_ It must be all lowercase_ Defaults to lowercased `kind`_'}
                                    CUSTOMRESOURCEDEFINITIONSPEC_NAMES_shortNames   {doc 'shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`_ It must be all lowercase_'}
                                        mandatory   
                                            SHORTNAMES_shortName 
                            CUSTOMRESOURCEDEFINITIONSPEC_scope {doc 'scope indicates whether the defined custom resource is cluster- or namespace-scoped_ Allowed values are `Cluster` and `Namespaced`_'}
                                alternative   
                                    CUSTOMRESOURCEDEFINITIONSPEC_SCOPE_Cluster
                                    CUSTOMRESOURCEDEFINITIONSPEC_SCOPE_Namespaced
                            CUSTOMRESOURCEDEFINITIONSPEC_versions    {doc 'Conversion describes conversion settings for the CRD_'}
                                optional
                                    VERSIONS_name {doc 'name is the version name, e_g_ v1, v2beta1, etc_ The custom resources are served under this version at `/apis/<group>/<version>/___` if `served` is true_'}
                                    VERSIONS_served {doc 'served is a flag enabling/disabling this version from being served via REST APIs'}
                                    VERSIONS_storage {doc 'storage indicates this version should be used when persisting custom resources to storage_ There must be exactly one version with storage=true_'}
                                    VERSIONS_subresources {doc 'subresources specify what subresources this version of the defined custom resource have_'} 
                                        optional   
                                            SUBRESOURCES_status {doc 'status indicates the custom resource should serve a /status subresource_ When enabled: 1_ requests to the custom resource primary endpoint ignore changes to the status stanza of the object_ 2_ requests to the custom resource /status subresource ignore changes to anything other than the status stanza of the object_'}
                                            SUBRESOURCES_scale {doc 'scale indicates the custom resource should serve a `/scale` subresource that returns an `autoscaling/v1` Scale object_'}
                                                mandatory
                                                    SUBRESOURCES_SCALE_specReplicasPath {doc 'specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec_replicas`_ Only JSON paths without the array notation are allowed_ Must be a JSON Path under `_spec`_ If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET_'}
                                                    SUBRESOURCES_SCALE_statusReplicasPath {doc 'statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status_replicas`_ Only JSON paths without the array notation are allowed_ Must be a JSON Path under `_status`_ If there is no value under the given path in the custom resource, the `status_replicas` value in the `/scale` subresource will default to 0_'}
                                                optional   
                                                    SUBRESOURCES_SCALE_labelSelectorPath {doc 'labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status_selector`_ Only JSON paths without the array notation are allowed_ Must be a JSON Path under `_status` or `_spec`_ Must be set to work with HorizontalPodAutoscaler_ The field pointed by this JSON path must be a string field (not a complex selector struct) which contains a serialized label selector in string form_ More info: https://kubernetes_io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource If there is no value under the given path in the custom resource, the `status_selector` value in the `/scale` subresource will default to the empty string_'}
                                    VERSIONS_schema   {doc 'schema describes the schema used for validation, pruning, and defaulting of this version of the custom resource_'}
                                        mandatory      
                                            SCHEMA_openAPIV3Schema {incomplete, doc 'OpenAPIV3Schema is the OpenAPI v3 schema to use for validation and pruning_'}
                                                optional   
                                                    OPENAPIV3SCHEMA_type {unavalible}        
                                                    OPENAPIV3SCHEMA_properties {unavalible}
                                                    OPENAPIV3SCHEMA_description {unavalible}
                                                    OPENAPIV3SCHEMA_required {unavalible}                              
                                    VERSIONS_additionalPrinterColumns   {doc 'AdditionalPrinterColumns are additional columns shown e_g_ in kubectl next to the name_ Defaults to a created-at column_ More info: https://kubernetes_io/docs/reference/using-api/api-concepts/#additionalprintercolumns'}
                                        optional
                                            ADDITIONALPRINTERCOLUMNS_name {doc 'name is a human readable name for the column_'}
                                            ADDITIONALPRINTERCOLUMNS_type {doc 'type is an OpenAPI type definition for this column_ See https://github_com/OAI/OpenAPI-Specification/blob/master/versions/2_0_md#data-types for details_'}
                                            ADDITIONALPRINTERCOLUMNS_JSONPath {doc 'jsonPath is a simple JSON path (i_e_ with array notation) which is evaluated against each custom resource to produce the value for this column_'}
                                            ADDITIONALPRINTERCOLUMNS_description {doc 'description is a human readable description of this column_'}
                                            ADDITIONALPRINTERCOLUMNS_priority {doc 'priority is an integer defining the relative importance of this column compared to others_ Lower numbers are considered higher priority_ Columns that may be omitted in limited space scenarios should be given a priority greater than 0_'}
                                            ADDITIONALPRINTERCOLUMNS_format {doc 'format is an optional OpenAPI type definition for this column_ The "name" format is applied to the primary identifier column to assist in clients identifying column is the resource name_ See https://github_com/OAI/OpenAPI-Specification/blob/master/versions/2_0_md#data-types for details_'}
                    CronJobSpec {doc 'Specification of the desired behavior of a cron job, including the schedule_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#spec-and-status'}
                        mandatory 
                            CRONJOBSPEC_jobTemplate {doc 'Specifies the job that will be created when executing a CronJob_'}
                                mandatory   
                                    JOBTEMPLATE_metadataReference {doc 'Reference to metadata object to not duplicate it'}
                                    JOBTEMPLATE_jobSpecReference {doc 'Reference to job spec to not duplicate it'}
                            CRONJOBSPEC_schedule {doc 'The schedule in Cron format, see https://en_wikipedia_org/wiki/Cron_'}
                        optional  
                            CRONJOBSPEC_concurrencyPolicy {doc 'pecifies how to treat concurrent executions of a Job_ Valid values are: - "Allow" (default): allows CronJobs to run concurrently; - "Forbid": forbids concurrent runs, skipping next run if previous run hasn`t finished yet; - "Replace": cancels currently running job and replaces it with a new one'}
                                alternative   
                                    CRONJOBSPEC_CONCURRENCYPOLICY_Allow {default}
                                    CRONJOBSPEC_CONCURRENCYPOLICY_Forbid
                                    CRONJOBSPEC_CONCURRENCYPOLICY_Replace
                            CRONJOBSPEC_failedJobsHistoryLimit {default 1, doc 'Specifies the job that will be created when executing a CronJob_'}
                            CRONJOBSPEC_successfulJobHistoryLimit {default 3, doc 'The number of successful finished jobs to retain_ Value must be non-negative integer_ Defaults to 3_'}
                            CRONJOBSPEC_suspend {default false, doc 'This flag tells the controller to suspend subsequent executions, it does not apply to already started executions_ Defaults to false_'}
                            CRONJOBSPEC_timezone {doc 'The time zone name for the given schedule, see https://en_wikipedia_org/wiki/List_of_tz_database_time_zones_ If not specified, this will default to the time zone of the kube-controller-manager process_ The set of valid time zone names and the time zone offset is loaded from the system-wide time zone database by the API server during CronJob validation and the controller manager during execution_ If no system-wide time zone database can be found a bundled version of the database is used instead_ If the time zone name becomes invalid during the lifetime of a CronJob or due to a change in host configuration, the controller will stop creating new new Jobs and will create a system event with the reason UnknownTimeZone_ More information can be found in https://kubernetes_io/docs/concepts/workloads/controllers/cron-jobs/#time-zones'}
                            CRONJOBSPEC_startingDeadlineSeconds {doc 'Optional deadline in seconds for starting the job if it misses scheduled time for any reason_ Missed jobs executions will be counted as failed ones_'}        
                    JobSpec {doc 'Specification of the desired behavior of the job_'}
                        mandatory   
                            JOBSPEC_activeDeadlineSeconds {doc 'Specifies the duration in seconds relative to the startTime that the job may be continuously active before the system tries to terminate it; value must be positive integer_ If a Job is suspended (at creation or through an update), this timer will effectively be stopped and reset when the Job is resumed again_'}
                            JOBSPEC_backoffLimit {default 6, doc 'Specifies the number of retries before marking this job failed_ Defaults to 6'}
                            JOBSPEC_backoffLimitPerIndex {doc 'Specifies the limit for the number of retries within an index before marking this index as failed_ When enabled the number of failures per index is kept in the pod`s batch_kubernetes_io/job-index-failure-count annotation_ It can only be set when Job`s completionMode=Indexed, and the Pod`s restart policy is Never_ The field is immutable_ This field is beta-level_ It can be used when the `JobBackoffLimitPerIndex` feature gate is enabled (enabled by default)_'}
                                mandatory    
                                    BACKOFFLIMITPERINDEX_value
                            JOBSPEC_completionMode {doc 'completionMode specifies how Pod completions are tracked_ It can be `NonIndexed` (default) or `Indexed`_ `NonIndexed` means that the Job is considered complete when there have been _spec_completions successfully completed Pods_ Each Pod completion is homologous to each other_ `Indexed` means that the Pods of a Job get an associated completion index from 0 to (_spec_completions - 1), available in the annotation batch_kubernetes_io/job-completion-index_ The Job is considered complete when there is one successfully completed Pod for each index_ When value is `Indexed`, _spec_completions must be specified and `_spec_parallelism` must be less than or equal to 10^5_ In addition, The Pod name takes the form `$(job-name)-$(index)-$(random-string)`, the Pod hostname takes the form `$(job-name)-$(index)`_ More completion modes can be added in the future_ If the Job controller observes a mode that it doesn`t recognize, which is possible during upgrades due to version skew, the controller skips updates for the Job_'}
                                alternative   
                                    COMPLETIONMODE_NonIndexed {default}
                                    COMPLETIONMODE_Indexed
                            JOBSPEC_completions {doc 'Specifies the desired number of successfully finished pods the job should be run with_ Setting to null means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value_ Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job_ More info: https://kubernetes_io/docs/concepts/workloads/controllers/jobs-run-to-completion/'}
                            JOBSPEC_managedBy {doc 'ManagedBy field indicates the controller that manages a Job_ The k8s Job controller reconciles jobs which don`t have this field at all or the field value is the reserved string `kubernetes_io/job-controller`, but skips reconciling Jobs with a custom value for this field_ The value must be a valid domain-prefixed path (e_g_ acme_io/foo) - all characters before the first "/" must be a valid subdomain as defined by RFC 1123_ All characters trailing the first "/" must be valid HTTP Path characters as defined by RFC 3986_ The value cannot exceed 64 characters_ This field is alpha-level_ The job controller accepts setting the field when the feature gate JobManagedBy is enabled (disabled by default)_'}
                            JOBSPEC_manualSelector {doc 'manualSelector controls generation of pod labels and pod selectors_ Leave `manualSelector` unset unless you are certain what you are doing_ When false or unset, the system pick labels unique to this job and appends those labels to the pod template_ When true, the user is responsible for picking unique labels and specifying the selector_ Failure to pick a unique label may cause this and other jobs to not function correctly_ However, You may see `manualSelector=true` in jobs that were created with the old `extensions/v1beta1` API_ More info: https://kubernetes_io/docs/concepts/workloads/controllers/jobs-run-to-completion/#specifying-your-own-pod-selector'}
                            JOBSPEC_failedIndexes {doc 'Specifies the maximal number of failed indexes before marking the Job as failed, when backoffLimitPerIndex is set_ Once the number of failed indexes exceeds this number the entire Job is marked as Failed and its execution is terminated_ When left as null the job continues execution of all of its indexes and is marked with the `Complete` Job condition_ It can only be specified when backoffLimitPerIndex is set_ It can be null or up to completions_ It is required and must be less than or equal to 10^4 when is completions greater than 10^5_ This field is beta-level_ It can be used when the `JobBackoffLimitPerIndex` feature gate is enabled (enabled by default)_'}
                            JOBSPEC_parallelism {doc 'Specifies the maximum desired number of pods the job should run at any given time_ The actual number of pods running in steady state will be less than this number when ((_spec_completions - _status_successful) < _spec_parallelism), i_e_ when the work left to do is less than max parallelism_ More info: https://kubernetes_io/docs/concepts/workloads/controllers/jobs-run-to-completion/'}
                            JOBSPEC_podFailurePolicy {doc 'Specifies the policy of handling failed pods_ In particular, it allows to specify the set of actions and conditions which need to be satisfied to take the associated action_ If empty, the default behaviour applies - the counter of failed pods, represented by the jobs`s _status_failed field, is incremented and it is checked against the backoffLimit_ This field cannot be used in combination with restartPolicy=OnFailure_ This field is beta-level_ It can be used when the `JobPodFailurePolicy` feature gate is enabled (enabled by default)_'}
                                mandatory 
                                    JOBSPEC_PODFAILUREPOLICY_rules   {doc 'A list of pod failure policy rules_ The rules are evaluated in order_ Once a rule matches a Pod failure, the remaining of the rules are ignored_ When no rule matches the Pod failure, the default handling applies - the counter of pod failures is incremented and it is checked against the backoffLimit_ At most 20 elements are allowed_'} 
                                        mandatory   
                                            PODFAILUREPOLICY_RULES_action {doc 'Specifies the action taken on a pod failure when the requirements are satisfied_ Possible values are: - FailJob: indicates that the pod`s job is marked as Failed and all running pods are terminated_ - FailIndex: indicates that the pod`s index is marked as Failed and will not be restarted_ This value is beta-level_ It can be used when the `JobBackoffLimitPerIndex` feature gate is enabled (enabled by default)_ - Ignore: indicates that the counter towards the _backoffLimit is not incremented and a replacement pod is created_ - Count: indicates that the pod is handled in the default way - the counter towards the _backoffLimit is incremented_ Additional values are considered to be added in the future_ Clients should react to an unknown action by skipping the rule_'}
                                                alternative   
                                                    PODFAILUREPOLICY_RULES_FailJob
                                                    PODFAILUREPOLICY_RULES_FailIndex
                                                    PODFAILUREPOLICY_RULES_Ignore
                                                    PODFAILUREPOLICY_RULES_Count
                                            PODFAILUREPOLICY_RULES_onPodConditions    {doc 'Represents the requirement on the pod conditions_ The requirement is represented as a list of pod condition patterns_ The requirement is satisfied if at least one pattern matches an actual pod condition_ At most 20 elements are allowed_'}
                                                mandatory   
                                                    ONPODCONDITIONS_type {doc 'Specifies the required Pod condition type_ To match a pod condition it is required that specified type equals the pod condition type_'}
                                                    ONPODCONDITIONS_status {default true, doc 'Specifies the required Pod condition status_ To match a pod condition it is required that the specified status equals the pod condition status_ Defaults to True_'}
                                        optional   
                                            PODFAILUREPOLICY_RULES_onExitCodes {doc 'Represents the requirement on the container exit codes_'}
                                                mandatory
                                                    ONEXITCODES_containerName {doc 'Restricts the check for exit codes to the container with the specified name_ When null, the rule applies to all containers_ When specified, it should match one the container or initContainer names in the pod template_'}
                                                    ONEXITCODES_operator {doc 'Represents the relationship between the container exit code(s) and the specified values_ Containers completed with success (exit code 0) are excluded from the requirement check_ Possible values are: - In: the requirement is satisfied if at least one container exit code (might be multiple if there are multiple containers not restricted by the `containerName` field) is in the set of specified values_ - NotIn: the requirement is satisfied if at least one container exit code (might be multiple if there are multiple containers not restricted by the `containerName` field) is not in the set of specified values_ Additional values are considered to be added in the future_ Clients should react to an unknown operator by assuming the requirement is not satisfied_'}
                                                        alternative   
                                                            ONEXITCODES_In
                                                            ONEXITCODES_NotIn
                                                    ONEXITCODES_values    {doc 'Specifies the set of values_ Each returned container exit code (might be multiple in case of multiple containers) is checked against this set of values with respect to the operator_ The list of values must be ordered and must not contain duplicates_ Value 0 cannot be used for the In operator_ At least one element is required_ At most 255 elements are allowed_'}
                                                        mandatory   
                                                            ONEXITCODES_VALUES_value   
                            JOBSPEC_podReplacementPolicy {doc 'podReplacementPolicy specifies when to create replacement Pods_ Possible values are: - TerminatingOrFailed means that we recreate pods when they are terminating (has a metadata_deletionTimestamp) or failed_ - Failed means to wait until a previously created Pod is fully terminated (has phase Failed or Succeeded) before creating a replacement Pod_ When using podFailurePolicy, Failed is the the only allowed value_ TerminatingOrFailed and Failed are allowed values when podFailurePolicy is not in use_ This is an beta field_ To use this, enable the JobPodReplacementPolicy feature toggle_ This is on by default_'}
                                alternative   
                                    PODREPLACEMENTPOLICY_TerminatingOrFailed
                                    PODREPLACEMENTPOLICY_Failed
                            JOBSPEC_selector {default false, doc 'A label query over pods that should match the pod count_ Normally, the system sets this field for you_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/labels/#label-selectors'}
                                or   
                                    JOBSPEC_SELECTOR_matchExpressions   {doc 'matchExpressions is a list of label selector requirements_ The requirements are ANDed_'}
                                        mandatory   
                                            JOBSPEC_SELECTOR_MATCHEXPRESSIONS_key {doc 'key is the label key that the selector applies to_'}
                                            JOBSPEC_SELECTOR_MATCHEXPRESSIONS_operator {doc 'operator represents a key`s relationship to a set of values_ Valid operators are In, NotIn, Exists, DoesNotExist_ Gt, and Lt_'}
                                                alternative   
                                                    JOBSPEC_OPERATOR_in
                                                    JOBSPEC_OPERATOR_notIn
                                                    JOBSPEC_OPERATOR_exist
                                                    JOBSPEC_OPERATOR_doesNotExist
                                                    JOBSPEC_OPERATOR_gt
                                                    JOBSPEC_OPERATOR_lt
                                            JOBSPEC_SELECTOR_MATCHEXPRESSIONS_values   {doc 'values is an array of string values_ If the operator is In or NotIn, the values array must be non-empty_ If the operator is Exists or DoesNotExist, the values array must be empty_ If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer_ This array is replaced during a strategic merge patch_'}
                                                mandatory   
                                                    JOBSPEC_SELECTOR_MATCHEXPRESSIONS_value
                                    JOBSPEC_SELECTOR_matchLabels   {doc 'matchLabels is a map of {key,value} pairs_ A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value"_ The requirements are ANDed_'}
                                        mandatory   
                                            JOBSPEC_SELECTOR_MATCHLABELS_key
                                            JOBSPEC_SELECTOR_MATCHLABELS_value
                            JOBSPEC_successPolicy {doc 'successPolicy specifies the policy when the Job can be declared as succeeded_ If empty, the default behavior applies - the Job is declared as succeeded only when the number of succeeded pods equals to the completions_ When the field is specified, it must be immutable and works only for the Indexed Jobs_ Once the Job meets the SuccessPolicy, the lingering pods are terminated_ This field is alpha-level_ To use this field, you must enable the `JobSuccessPolicy` feature gate (disabled by default)_'}
                                mandatory   
                                    JOBSPEC_SUCCESSPOLICY_rules    {doc 'rules represents the list of alternative rules for the declaring the Jobs as successful before `_status_succeeded >= _spec_completions`_ Once any of the rules are met, the "SucceededCriteriaMet" condition is added, and the lingering pods are removed_ The terminal state for such a Job has the "Complete" condition_ Additionally, these rules are evaluated in order; Once the Job meets one of the rules, other rules are ignored_ At most 20 elements are allowed_'}
                                        mandatory   
                                            SUCCESSPOLICY_RULES_succededCount {doc 'succeededCount specifies the minimal required size of the actual set of the succeeded indexes for the Job_ When succeededCount is used along with succeededIndexes, the check is constrained only to the set of indexes specified by succeededIndexes_ For example, given that succeededIndexes is "1-4", succeededCount is "3", and completed indexes are "1", "3", and "5", the Job isn`t declared as succeeded because only "1" and "3" indexes are considered in that rules_ When this field is null, this doesn`t default to any value and is never evaluated at any time_ When specified it needs to be a positive integer_'}
                                            SUCCESSPOLICY_RULES_succededIndexes {doc 'succeededIndexes specifies the set of indexes which need to be contained in the actual set of the succeeded indexes for the Job_ The list of indexes must be within 0 to "_spec_completions-1" and must not contain duplicates_ At least one element is required_ The indexes are represented as intervals separated by commas_ The intervals can be a decimal integer or a pair of decimal integers separated by a hyphen_ The number are listed in represented by the first and last element of the series, separated by a hyphen_ For example, if the completed indexes are 1, 3, 4, 5 and 7, they are represented as "1,3-5,7"_ When this field is null, this field doesn`t default to any value and is never evaluated at any time_'}
                            JOBSPEC_suspend {default false, doc 'suspend specifies whether the Job controller should create Pods or not_ If a Job is created with suspend set to true, no Pods are created by the Job controller_ If a Job is suspended after creation (i_e_ the flag goes from false to true), the Job controller will delete all active Pods associated with this Job_ Users must design their workload to gracefully handle this_ Suspending a Job will reset the StartTime field of the Job, effectively resetting the ActiveDeadlineSeconds timer too_ Defaults to false_'}
                            JOBSPEC_template {doc 'Describes the pod that will be created when executing a job_ The only allowed template_spec_restartPolicy values are "Never" or "OnFailure"_ More info: https://kubernetes_io/docs/concepts/workloads/controllers/jobs-run-to-completion/'}
                                mandatory   
                                    JOBSPEC_TEMPLATE_metadataReference {doc 'Reference to metadata to not duplicate it'}
                                    JOBSPEC_TEMPLATE_podSpecReference {doc 'Reference to pod spec to not duplicate it'}
                            JOBSPEC_ttlSecondsAfterFinished {doc 'ttlSecondsAfterFinished limits the lifetime of a Job that has finished execution (either Complete or Failed)_ If this field is set, ttlSecondsAfterFinished after the Job finishes, it is eligible to be automatically deleted_ When the Job is being deleted, its lifecycle guarantees (e_g_ finalizers) will be honored_ If this field is unset, the Job won`t be automatically deleted_ If this field is set to zero, the Job becomes eligible to be deleted immediately after it finishes_'}
                    NamespaceSpec {doc 'Spec defines the behavior of the Namespace_'}
                        mandatory   
                            NAMESPACE_SPEC_finalizers   {doc 'Finalizers is an opaque list of values that must be empty to permanently remove object from storage_ More info: https://kubernetes_io/docs/tasks/administer-cluster/namespaces/'}
                                mandatory   
                                    FINALIZERS_finalizer
                    IngressSpec {doc 'spec is the desired state of the Ingress_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#spec-and-status'}
                        mandatory   
                            INGRESSSPEC_defaultBackend {doc 'defaultBackend is the backend that should handle requests that don`t match any rule_ If Rules are not specified, DefaultBackend must be specified_ If DefaultBackend is not set, the handling of requests that do not match any of the rules will be up to the Ingress controller_'}
                                alternative   
                                    INGRESSSPEC_DEFAULTBACKEND_resource {doc 'resource is an ObjectRef to another Kubernetes resource in the namespace of the Ingress object_ If resource is specified, a service_Name and service_Port must not be specified_ This is a mutually exclusive setting with "Service"_'}
                                        mandatory   
                                            INGRESSSPEC_DEFAULTBACKEND_RESOURCE_kind {doc 'Kind is the type of resource being referenced'}
                                            INGRESSSPEC_DEFAULTBACKEND_RESOURCE_name {doc 'Name is the name of resource being referenced'}
                                        optional
                                            INGRESSSPEC_DEFAULTBACKEND_RESOURCE_apiGroup {doc 'APIGroup is the group for the resource being referenced_ If APIGroup is not specified, the specified Kind must be in the core API group_ For any other third-party types, APIGroup is required_'}                                   
                                    INGRESSSPEC_DEFAULTBACKEND_service {doc 'service references a service as a backend_ This is a mutually exclusive setting with "Resource"_'}
                                        mandatory   
                                            INGRESSSPEC_DEFAULTBACKEND_SERVICE_name {doc 'name is the referenced service_ The service must exist in the same namespace as the Ingress object_'}
                                            INGRESSSPEC_DEFAULTBACKEND_port {doc 'port of the referenced service_ A port name or port number is required for a IngressServiceBackend_'}
                                                alternative   
                                                    INGRESSSPEC_DEFAULTBACKEND_SERVICE_PORT_name {doc 'name is the name of the port on the Service_ This is a mutually exclusive setting with "Number"_'}
                                                    INGRESSSPEC_DEFAULTBACKEND_SERVICE_PORT_number {doc 'number is the numerical port number (e_g_ 80) on the Service_ This is a mutually exclusive setting with "Name"_'}
                        optional
                            INGRESSSPEC_rules   {doc 'rules is a list of host rules used to configure the Ingress_ If unspecified, or no rule matches, all traffic is sent to the default backend_'}
                                mandatory   
                                    INGRESSSPEC_RULES_host {doc 'host is the fully qualified domain name of a network host, as defined by RFC 3986_ Note the following deviations from the "host" part of the URI as defined in RFC 3986: 1_ IPs are not allowed_ Currently an IngressRuleValue can only apply to the IP in the Spec of the parent Ingress_ 2_ The `:` delimiter is not respected because ports are not allowed_ Currently the port of an Ingress is implicitly :80 for http and :443 for https_ Both these may change in the future_ Incoming requests are matched against the host before the IngressRuleValue_ If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue_ host can be "precise" which is a domain name without the terminating dot of a network host (e_g_ "foo_bar_com") or "wildcard", which is a domain name prefixed with a single wildcard label (e_g_ "*_foo_com")_ The wildcard character `*` must appear by itself as the first DNS label and matches only a single label_ You cannot have a wildcard label by itself (e_g_ Host == "*")_ Requests will be matched against the Host field in the following way: 1_ If host is precise, the request matches this rule if the http host header is equal to Host_ 2_ If host is a wildcard, then the request matches this rule if the http host header is to equal to the suffix (removing the first label) of the wildcard rule_'}
                                    INGRESSSPEC_RULES_http
                                        mandatory   
                                            INGRESSSPEC_RULES_HTTP_paths   {doc 'paths is a collection of paths that map requests to backends_'} 
                                                mandatory   
                                                    HTTP_PATHS_backend {doc 'backend defines the referenced service endpoint to which the traffic will be forwarded to_'}
                                                        mandatory   
                                                            INGRESSSPEC_RULES_HTTP_PATHS_resource {doc 'resource is an ObjectRef to another Kubernetes resource in the namespace of the Ingress object_ If resource is specified, a service_Name and service_Port must not be specified_ This is a mutually exclusive setting with "Service"_'}
                                                                mandatory   
                                                                    INGRESSSPEC_RULES_HTTP_PATHS_RESOURCE_kind {doc 'Kind is the type of resource being referenced'}
                                                                    INGRESSSPEC_RULES_HTTP_PATHS_RESOURCE_name {doc 'Name is the name of resource being referenced'}
                                                                optional
                                                                    INGRESSSPEC_RULES_HTTP_PATHS_RESOURCE_apiGroup {doc 'APIGroup is the group for the resource being referenced_ If APIGroup is not specified, the specified Kind must be in the core API group_ For any other third-party types, APIGroup is required_'}                                   
                                                            INGRESSSPEC_RULES_HTTP_PATHS_service {doc 'service references a service as a backend_ This is a mutually exclusive setting with "Resource"_'}
                                                                mandatory   
                                                                    INGRESSSPEC_RULES_HTTP_PATHS_SERVICE_name {doc 'name is the referenced service_ The service must exist in the same namespace as the Ingress object_'}
                                                                    INGRESSSPEC_RULES_HTTP_PATHS_port {doc 'port of the referenced service_ A port name or port number is required for a IngressServiceBackend_'}
                                                                        alternative   
                                                                            INGRESSSPEC_RULES_HTTP_PATHS_SERVICE_PORT_name {doc 'name is the name of the port on the Service_ This is a mutually exclusive setting with "Number"_'}
                                                                            INGRESSSPEC_RULES_HTTP_PATHS_SERVICE_PORT_number {doc 'number is the numerical port number (e_g_ 80) on the Service_ This is a mutually exclusive setting with "Name"_'}
                                                    HTTP_PATHS_path {doc 'path is matched against the path of an incoming request_ Currently it can contain characters disallowed from the conventional "path" part of a URL as defined by RFC 3986_ Paths must begin with a "/" and must be present when using PathType with value "Exact" or "Prefix"_'}
                                                    HTTP_PATHS_pathType {doc 'pathType determines the interpretation of the path matching_ PathType can be one of the following values: * Exact: Matches the URL path exactly_ * Prefix: Matches based on a URL path prefix split by "/"_ Matching is done on a path element by element basis_ A path element refers is the list of labels in the path split by the "/" separator_ A request is a match for path p if every p is an element-wise prefix of p of the request path_ Note that if the last element of the path is a substring of the last element in request path, it is not a match (e_g_ /foo/bar matches /foo/bar/baz, but does not match /foo/barbaz)_ * ImplementationSpecific: Interpretation of the Path matching is up to the IngressClass_ Implementations can treat this as a separate PathType or treat it identically to Prefix or Exact path types_ Implementations are required to support all path types_'}
                                                        alternative   
                                                            HTTP_PATHS_PATHTYPE_Exact
                                                            HTTP_PATHS_PATHTYPE_Prefix
                                                            HTTP_PATHS_PATHTYPE_ImplementationSpecific
                            INGRESSSPEC_ingressClassName {doc 'ingressClassName is the name of an IngressClass cluster resource_ Ingress controller implementations use this field to know whether they should be serving this Ingress resource, by a transitive connection (controller -> IngressClass -> Ingress resource)_ Although the `kubernetes_io/ingress_class` annotation (simple constant name) was never formally defined, it was widely supported by Ingress controllers to create a direct binding between Ingress controller and Ingress resources_ Newly created Ingress resources should prefer using the field_ However, even though the annotation is officially deprecated, for backwards compatibility reasons, ingress controllers should still honor that annotation if present_'}
                            INGRESSSPEC_tls    {doc 'tls represents the TLS configuration_ Currently the Ingress only supports a single TLS port, 443_ If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI_'}
                                mandatory   
                                    INGRESSSPEC_TLS_hosts   {doc 'hosts is a list of hosts included in the TLS certificate_ The values in this list must match the name/s used in the tlsSecret_ Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified_'}
                                        mandatory   
                                            INGRESSSPEC_TLS_HOSTS_host
                                    INGRESSSPEC_TLS_secretName {doc 'secretName is the name of the secret used to terminate TLS traffic on port 443_ Field is left optional to allow TLS routing based on SNI hostname alone_ If the SNI host in a listener conflicts with the "Host" header field used by an IngressRule, the SNI host is used for termination and value of the "Host" header is used for routing_'}
                    PersistentVolumeClaimSpec {doc 'spec defines the desired characteristics of a volume requested by a pod author_ More info: https://kubernetes_io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'}
                        mandatory   
                            PRESISTENTVOLUMECLAIMSPEC_accessModes    {doc 'accessModes contains the desired access modes the volume should have_ More info: https://kubernetes_io/docs/concepts/storage/persistent-volumes#access-modes-1'} 
                                mandatory   
                                    PRESISTENTVOLUMECLAIMSPEC_ACCESSMODES_accessMode
                            PRESISTENTVOLUMECLAIMSPEC_resources {doc 'resources represents the minimum resources the volume should have_ If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim_ More info: https://kubernetes_io/docs/concepts/storage/persistent-volumes#resources'}
                                or   
                                    PRESISTENTVOLUMECLAIMSPEC_RESOURCES_limits {doc 'Limits describes the maximum amount of compute resources allowed_ More info: https://kubernetes_io/docs/concepts/configuration/manage-resources-containers/'}
                                        mandatory
                                            PRESISTENTVOLUMECLAIMSPEC_RESOURCES_LIMITS_storage
                                    PRESISTENTVOLUMECLAIMSPEC_RESOURCES_requests {doc 'Requests describes the minimum amount of compute resources required_ If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value_ Requests cannot exceed Limits_ More info: https://kubernetes_io/docs/concepts/configuration/manage-resources-containers/'}
                                        mandatory
                                            PRESISTENTVOLUMECLAIMSPEC_RESOURCES_REQUESTS_storage
                        optional
                            PRESISTENTVOLUMECLAIMSPEC_dataSource {doc 'dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot_storage_k8s_io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source_ When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef_namespace is not specified_ If the namespace is specified, then dataSourceRef will not be copied to dataSource_'}
                                mandatory   
                                    PRESISTENTVOLUMECLAIMSPEC_DATASOURCE_name {doc 'Name is the name of resource being referenced'}
                                    PRESISTENTVOLUMECLAIMSPEC_DATASOURCE_kind {doc 'Kind is the type of resource being referenced'}
                                optional
                                    PRESISTENTVOLUMECLAIMSPEC_DATASOURCE_apigroup {doc 'APIGroup is the group for the resource being referenced_ If APIGroup is not specified, the specified Kind must be in the core API group_ For any other third-party types, APIGroup is required_'}
                            PRESISTENTVOLUMECLAIMSPEC_dataSourceRef {doc 'dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired_ This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object_ When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner_ This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value_ For backwards compatibility, when namespace isn`t specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty_ When namespace is specified in dataSourceRef, dataSource isn`t set to the same value and must be empty_ There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects_ * While dataSource ignores disallowed values (dropping them), dataSourceRef preserves all values, and generates an error if a disallowed value is specified_ * While dataSource only allows local objects, dataSourceRef allows objects in any namespaces_ (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled_ (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled_'}
                                mandatory   
                                    PRESISTENTVOLUMECLAIMSPEC_DATASOURCEREF_name {doc 'Name is the name of resource being referenced'}
                                    PRESISTENTVOLUMECLAIMSPEC_DATASOURCEREF_kind {doc 'Kind is the type of resource being referenced'}
                                optional
                                    PRESISTENTVOLUMECLAIMSPEC_DATASOURCEREF_apigroup {doc 'APIGroup is the group for the resource being referenced_ If APIGroup is not specified, the specified Kind must be in the core API group_ For any other third-party types, APIGroup is required_'}
                                    PRESISTENTVOLUMECLAIMSPEC_DATASOURCEREF_namespace {doc 'Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway_networking_k8s_io/ReferenceGrant object is required in the referent namespace to allow that namespace`s owner to accept the reference_ See the ReferenceGrant documentation for details_ (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled_'}
                            PRESISTENTVOLUMECLAIMSPEC_selector {doc 'selector is a label query over volumes to consider for binding_'}
                                or
                                    PRESISTENTVOLUMECLAIMSPEC_SELECTOR_matchLabels   {doc 'matchExpressions is a list of label selector requirements_ The requirements are ANDed_'}
                                        mandatory 
                                            PRESISTENTVOLUMECLAIMSPEC_SELECTOR_MATCHLABELS_key
                                            PRESISTENTVOLUMECLAIMSPEC_SELECTOR_MATCHLABELS_value
                                    PRESISTENTVOLUMECLAIMSPEC_SELECTOR_matchExpressions   {doc 'matchLabels is a map of {key,value} pairs_ A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value"_ The requirements are ANDed_'}
                                        mandatory   
                                            PRESISTENTVOLUMECLAIMSPEC_SELECTOR_MATCHEXPRESSIONS_key {doc 'key is the label key that the selector applies to_'}
                                            PRESISTENTVOLUMECLAIMSPEC_SELECTOR_MATCHEXPRESSIONS_values   {doc 'values is an array of string values_ If the operator is In or NotIn, the values array must be non-empty_ If the operator is Exists or DoesNotExist, the values array must be empty_ This array is replaced during a strategic merge patch_'}
                                                mandatory
                                                    PRESISTENTVOLUMECLAIMSPEC_SELECTOR_MATCHEXPRESSIONS_value
                                            PRESISTENTVOLUMECLAIMSPEC_SELECTOR_MATCHEXPRESSIONS_operator {doc 'operator represents a keys relationship to a set of values_ Valid operators are In, NotIn, Exists and DoesNotExist_'}
                                                alternative
                                                    PRESISTENTVOLUMECLAIMSPEC_SELECTOR_MATCHEXPRESSIONS_OPERATOR_in
                                                    PRESISTENTVOLUMECLAIMSPEC_SELECTOR_MATCHEXPRESSIONS_OPERATOR_notIn
                                                    PRESISTENTVOLUMECLAIMSPEC_SELECTOR_MATCHEXPRESSIONS_OPERATOR_exist
                                                    PRESISTENTVOLUMECLAIMSPEC_SELECTOR_MATCHEXPRESSIONS_OPERATOR_doesNotExist
                                                    PRESISTENTVOLUMECLAIMSPEC_SELECTOR_MATCHEXPRESSIONS_OPERATOR_gt
                                                    PRESISTENTVOLUMECLAIMSPEC_SELECTOR_MATCHEXPRESSIONS_OPERATOR_lt
                            PRESISTENTVOLUMECLAIMSPEC_storageClassName {doc 'storageClassName is the name of the StorageClass required by the claim_ More info: https://kubernetes_io/docs/concepts/storage/persistent-volumes#class-1'}
                            PRESISTENTVOLUMECLAIMSPEC_volumeAttributesClassName {doc 'volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim_ If specified, the CSI driver will create or update the volume with the attributes defined in the corresponding VolumeAttributesClass_ This has a different purpose than storageClassName, it can be changed after the claim is created_ An empty string value means that no VolumeAttributesClass will be applied to the claim but it`s not allowed to reset this field to empty string once it is set_ If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass will be set by the persistentvolume controller if it exists_ If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource exists_ More info: https://kubernetes_io/docs/concepts/storage/volume-attributes-classes/ (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled_'}
                            PRESISTENTVOLUMECLAIMSPEC_volumeMode {doc 'volumeMode defines what type of volume is required by the claim_ Value of Filesystem is implied when not included in claim spec_'}
                            PRESISTENTVOLUMECLAIMSPEC_volumeName {doc 'volumeName is the binding reference to the PersistentVolume backing this claim_'}
                    PersistentVolumeSpec {doc 'spec defines a specification of a persistent volume owned by the cluster_ Provisioned by an administrator_ More info: https://kubernetes_io/docs/concepts/storage/persistent-volumes#persistent-volumes'}
                        mandatory   
                            PERSISTENTVOLUME_accessModes    {doc 'accessModes contains all ways the volume can be mounted_ More info: https://kubernetes_io/docs/concepts/storage/persistent-volumes#access-modes'}
                                mandatory   
                                    PERSISTENTVOLUME_ACCESSMODES_accessMode
                            PERSISTENTVOLUME_capacity {doc 'capacity is the description of the persistent volume`s resources and capacity_ More info: https://kubernetes_io/docs/concepts/storage/persistent-volumes#capacity'}
                                mandatory   
                                    PERSISTENTVOLUME_CAPACITY_storage
                            PERSISTENTVOLUME_persistentVolumeReclaimPolicy {doc 'persistentVolumeReclaimPolicy defines what happens to a persistent volume when released from its claim_ Valid options are Retain (default for manually created PersistentVolumes), Delete (default for dynamically provisioned PersistentVolumes), and Recycle (deprecated)_ Recycle must be supported by the volume plugin underlying this PersistentVolume_ More info: https://kubernetes_io/docs/concepts/storage/persistent-volumes#reclaiming'}
                                alternative
                                    PERSISTENTVOLUME_RECLAIMPOLICY_Retain
                                    PERSISTENTVOLUME_RECLAIMPOLICY_Delete
                                    PERSISTENTVOLUME_RECLAIMPOLICY_Recycle
                            PERSISTENTVOLUME_storageClassName {doc 'storageClassName is the name of StorageClass to which this persistent volume belongs_ Empty value means that this volume does not belong to any StorageClass_'}
                            PERSISTENTVOLUME_volumeMode {doc 'volumeMode defines if a volume is intended to be used with a formatted filesystem or to remain in raw block state_ Value of Filesystem is implied when not included in spec_'}
                        optional 
                            PERSISTENTVOLUME_volumeAttributesClassName {doc 'Name of VolumeAttributesClass to which this persistent volume belongs_ Empty value is not allowed_ When this field is not set, it indicates that this volume does not belong to any VolumeAttributesClass_ This field is mutable and can be changed by the CSI driver after a volume has been updated successfully to a new class_ For an unbound PersistentVolume, the volumeAttributesClassName will be matched with unbound PersistentVolumeClaims during the binding process_ This is an alpha field and requires enabling VolumeAttributesClass feature_'}  
                            PERSISTENTVOLUME_mountOptions {doc 'mountOptions is the list of mount options, e_g_ ["ro", "soft"]_ Not validated - mount will simply fail if one is invalid_ More info: https://kubernetes_io/docs/concepts/storage/persistent-volumes/#mount-options'}
                                mandatory   
                                    PERSISTENTVOLUME_MOUNTOPTIONS_mountOption
                        or
                            PERSISTENTVOLUME_hostPath {doc 'hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container_ This is generally used for system agents or other privileged things that are allowed to see the host machine_ Most containers will NOT need this_ More info: https://kubernetes_io/docs/concepts/storage/volumes#hostpath'}
                                optional
                                    PERSISTENTVOLUME_HOSTPATH_path {doc 'path of the directory on the host_ If the path is a symlink, it will follow the link to the real path_ More info: https://kubernetes_io/docs/concepts/storage/volumes#hostpath'}
                                    PERSISTENTVOLUME_HOSTPATH_type {default ' ', doc 'type for HostPath Volume Defaults to "" More info: https://kubernetes_io/docs/concepts/storage/volumes#hostpath'}
                            PERSISTENTVOLUME_nfs {doc 'nfs represents an NFS mount on the host that shares a pod`s lifetime More info: https://kubernetes_io/docs/concepts/storage/volumes#nfs'}
                                mandatory   
                                    PERSISTENTVOLUME_NFS_path {doc 'Path that is exported by the NFS server_ More info: https://kubernetes_io/docs/concepts/storage/volumes#nfs'}
                                    PERSISTENTVOLUME_NFS_server {doc 'Server is the hostname or IP address of the NFS server_ More info: https://kubernetes_io/docs/concepts/storage/volumes#nfs'}
                                optional    
                                    PERSISTENTVOLUME_NFS_readOnly {default false, doc 'ReadOnly here will force the NFS export to be mounted with read-only permissions_ Defaults to false_'}
                            PERSISTENTVOLUME_csi {doc 'csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature)_'}
                                mandatory   
                                    PERSISTENTVOLUME_CSI_driver {doc 'Driver is the name of the CSI driver that handles this volume_ Consult with your admin for the correct name as registered in the cluster_'}
                                optional  
                                    PERSISTENTVOLUME_CSI_volumeAttributes {doc 'VolumeAttributes stores driver-specific properties that are passed to the CSI driver_ Consult your driver`s documentation for supported values_'}
                                    PERSISTENTVOLUME_CSI_readOnly {default false, doc 'ReadOnly here will force the ReadOnly setting in VolumeMounts_ Defaults to false_'}  
                                    PERSISTENTVOLUME_CSI_fsType {doc 'fsType to mount_ Ex_ "ext4", "xfs", "ntfs"_ If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply_'}                                      
                                    PERSISTENTVOLUME_CSI_nodePublichSecretRef {doc 'NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls_ This field is optional, and  may be empty if no secret is required_ If the secret is specified, it must be a secret object that is already visible to the Kubelet_'}
                                        mandatory   
                                            PERSISTENTVOLUME_CSI_NODEPUBLISHSECRETREF_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                            PERSISTENTVOLUME_fc {doc 'fc represents a Fibre Channel resource that is attached to a kubelet`s host machine and then exposed to the pod_'}
                                mandatory
                                    PERSISTENTVOLUME_FC_fsType {doc 'fsType is the filesystem type to mount_ Must be a filesystem type supported by the host operating system_ Ex_ "ext4", "xfs", "ntfs"_ Implicitly inferred to be "ext4" if unspecified_'}   
                                optional    
                                    PERSISTENTVOLUME_FC_readOnly {default false, doc 'readOnly is Optional: Defaults to false (read/write)_ ReadOnly here will force the ReadOnly setting in VolumeMounts_'}
                                    PERSISTENTVOLUME_FC_lun {doc 'lun is Optional: FC target lun number'}
                                    PERSISTENTVOLUME_FC_targetWWNs   {doc 'targetWWNs is Optional: FC target worldwide names (WWNs)'}
                                        mandatory   
                                            PERSISTENTVOLUME_FC_TARGETWWNS_targetWWN
                                    PERSISTENTVOLUME_FC_wwids   {doc 'wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously_'}
                                        mandatory   
                                            PERSISTENTVOLUME_FC_WWIDS_wwid
                            PERSISTENTVOLUME_flocker {doc 'flocker represents a Flocker volume attached to a kubelet`s host machine_ This depends on the Flocker control service being running'}
                                mandatory
                                    PERSISTENTVOLUME_FLOCKER_datsetUUID {doc 'datasetUUID is the UUID of the dataset_ This is unique identifier of a Flocker dataset'}
                                    PERSISTENTVOLUME_FLOCKER_datasetName {doc 'Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated'}
                            PERSISTENTVOLUME_iscsi {doc 'iscsi represents an ISCSI Disk resource that is attached to a kubelet`s host machine and then exposed to the pod_ More info: https://examples_k8s_io/volumes/iscsi/README_md'} 
                                mandatory 
                                    PERSISTENTVOLUME_ISCSI_targetPortal {doc 'targetPortal is iSCSI Target Portal_ The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)_'}  
                                    PERSISTENTVOLUME_ISCSI_lun {doc 'lun represents iSCSI Target Lun number_'}
                                    PERSISTENTVOLUME_ISCSI_iqn {doc 'iqn is the target iSCSI Qualified Name_'}
                                optional 
                                    PERSISTENTVOLUME_ISCSI_fsType {doc 'fsType is the filesystem type of the volume that you want to mount_ Tip: Ensure that the filesystem type is supported by the host operating system_ Examples: "ext4", "xfs", "ntfs"_ Implicitly inferred to be "ext4" if unspecified_ More info: https://kubernetes_io/docs/concepts/storage/volumes#iscsi'} 
                                    PERSISTENTVOLUME_ISCSI_chapAuthDiscovery {doc 'chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication'}
                                    PERSISTENTVOLUME_ISCSI_chapAuthSession {doc 'chapAuthSession defines whether support iSCSI Session CHAP authentication'}
                                    PERSISTENTVOLUME_ISCSI_initiatorName {doc 'initiatorName is the custom iSCSI Initiator Name_ If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection_'}
                                    PERSISTENTVOLUME_ISCSI_iscsiInterface {default 'default', doc 'iscsiInterface is the interface Name that uses an iSCSI transport_ Defaults to "default" (tcp)_'}
                                    PERSISTENTVOLUME_ISCSI_portals   {doc 'portals is the iSCSI Target Portal List_ The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)_'}
                                        mandatory   
                                            PERSISTENTVOLUME_ISCSI_PORTALS_portal
                                    PERSISTENTVOLUME_ISCSI_readOnly {default false, doc 'readOnly here will force the ReadOnly setting in VolumeMounts_ Defaults to false_'}
                                    PERSISTENTVOLUME_ISCSI_secretRef {doc 'secretRef is the CHAP Secret for iSCSI target and initiator authentication'}
                                        mandatory   
                                            PERSISTENTVOLUME_ISCSI_SECRETREF_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                            PERSISTENTVOLUME_photonPersistentDisk {doc 'photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine_'}
                                mandatory   
                                    PERSISTENTVOLUME_PHOTONPERSISTENTDISK_pdID {doc 'pdID is the ID that identifies Photon Controller persistent disk_'}
                                optional    
                                    PERSISTENTVOLUME_PHOTONPERSISTENTDISK_fsType {doc 'fsType is the filesystem type to mount_ Must be a filesystem type supported by the host operating system_ Ex_ "ext4", "xfs", "ntfs"_ Implicitly inferred to be "ext4" if unspecified_'}
                            PERSISTENTVOLUME_quobyte {doc 'quobyte represents a Quobyte mount on the host that shares a pod`s lifetime_'}
                                mandatory   
                                    PERSISTENTVOLUME_QUOBYTE_volume {doc 'volume is a string that references an already created Quobyte volume by name_'}
                                    PERSISTENTVOLUME_QUOBYTE_registry {doc 'registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes'}
                                optional
                                    PERSISTENTVOLUME_QUOBYTE_group {doc 'group to map volume access to Default is no group'}
                                    PERSISTENTVOLUME_QUOBYTE_readOnly {default false, doc 'readOnly here will force the Quobyte volume to be mounted with read-only permissions_ Defaults to false_'}
                                    PERSISTENTVOLUME_QUOBYTE_tenant {doc 'tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin'}
                                    PERSISTENTVOLUME_QUOBYTE_user {doc 'user to map volume access to Defaults to serivceaccount user'}
                            PERSISTENTVOLUME_rbd {doc 'rbd represents a Rados Block Device mount on the host that shares a pod`s lifetime_ More info: https://examples_k8s_io/volumes/rbd/README_md'}
                                mandatory    
                                    PERSISTENTVOLUME_RBD_image {doc 'image is the rados image name_ More info: https://examples_k8s_io/volumes/rbd/README_md#how-to-use-it'}
                                    PERSISTENTVOLUME_RBD_monitors   {doc 'monitors is a collection of Ceph monitors_ More info: https://examples_k8s_io/volumes/rbd/README_md#how-to-use-it'}
                                        mandatory   
                                            PERSISTENTVOLUME_RBD_MONITORS_monitor
                                    PERSISTENTVOLUME_RBD_pool {default 'rbd', doc 'pool is the rados pool name_ Default is rbd_ More info: https://examples_k8s_io/volumes/rbd/README_md#how-to-use-it'}                                                
                                optional  
                                    PERSISTENTVOLUME_RBD_fsType {doc 'fsType is the filesystem type of the volume that you want to mount_ Tip: Ensure that the filesystem type is supported by the host operating system_ Examples: "ext4", "xfs", "ntfs"_ Implicitly inferred to be "ext4" if unspecified_ More info: https://kubernetes_io/docs/concepts/storage/volumes#rbd'}  
                                    PERSISTENTVOLUME_RBD_readOnly {default false,doc 'readOnly here will force the ReadOnly setting in VolumeMounts_ Defaults to false_ More info: https://examples_k8s_io/volumes/rbd/README_md#how-to-use-it'}
                                    PERSISTENTVOLUME_RBD_secretRef {default false, doc 'secretRef is name of the authentication secret for RBDUser_ If provided overrides keyring_ Default is nil_ More info: https://examples_k8s_io/volumes/rbd/README_md#how-to-use-it'}
                                        mandatory   
                                            PERSISTENTVOLUME_RBD_SECRETREF_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                                    PERSISTENTVOLUME_RBD_keyring {default '/etc/ceph/keyring', doc 'keyring is the path to key ring for RBDUser_ Default is /etc/ceph/keyring_ More info: https://examples_k8s_io/volumes/rbd/README_md#how-to-use-it'}
                                    PERSISTENTVOLUME_RBD_user {default 'admin', doc 'user is the rados user name_ Default is admin_ More info: https://examples_k8s_io/volumes/rbd/README_md#how-to-use-it'}                                                    
                            PERSISTENTVOLUME_scaleIO {doc 'scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes_'}
                                mandatory   
                                    PERSISTENTVOLUME_SCALEIO_gateway {doc 'gateway is the host address of the ScaleIO API Gateway_'}
                                    PERSISTENTVOLUME_SCALEIO_volumeName {doc 'volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source_'}
                                    PERSISTENTVOLUME_SCALEIO_system {doc 'system is the name of the storage system as configured in ScaleIO_'}
                                    PERSISTENTVOLUME_SCALEIO_protectionDomain {doc 'protectionDomain is the name of the ScaleIO Protection Domain for the configured storage_'}
                                optional  
                                    PERSISTENTVOLUME_SCALEIO_fsType {default 'xfs', doc 'fsType is the filesystem type to mount_ Must be a filesystem type supported by the host operating system_ Ex_ "ext4", "xfs", "ntfs"_ Default is "xfs"_'} 
                                    PERSISTENTVOLUME_SCALEIO_readOnly {default false, doc 'readOnly Defaults to false (read/write)_ ReadOnly here will force the ReadOnly setting in VolumeMounts_'}
                                    PERSISTENTVOLUME_SCALEIO_secretRef {doc 'secretRef references to the secret for ScaleIO user and other sensitive information_ If this is not provided, Login operation will fail_'}
                                        mandatory
                                            PERSISTENTVOLUME_SCALEIO_SECRETREF_name
                                    PERSISTENTVOLUME_SCALEIO_sslEnabled {default false, doc 'sslEnabled Flag enable/disable SSL communication with Gateway, default false'}
                                    PERSISTENTVOLUME_SCALEIO_storageMode {doc 'storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned_ Default is ThinProvisioned_'}
                                        alternative   
                                            PERSISTENTVOLUME_SCALEIO_STORAGEMODE_thickProvisioned
                                            PERSISTENTVOLUME_SCALEIO_STORAGEMODE_thinProvisioned {default}
                                    PERSISTENTVOLUME_SCALEIO_storagePool {doc 'storagePool is the ScaleIO Storage Pool associated with the protection domain_'}
                            PERSISTENTVOLUME_storageos {doc 'storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes_'}
                                mandatory   
                                    PERSISTENTVOLUME_STORAGEOS_volumeName {doc 'volumeName is the human-readable name of the StorageOS volume_ Volume names are only unique within a namespace_'}
                                optional   
                                    PERSISTENTVOLUME_STORAGEOS_fsType {doc 'fsType is the filesystem type to mount_ Must be a filesystem type supported by the host operating system_ Ex_ "ext4", "xfs", "ntfs"_ Implicitly inferred to be "ext4" if unspecified_'}
                                    PERSISTENTVOLUME_STORAGEOS_readOnly {default false, doc 'readOnly defaults to false (read/write)_ ReadOnly here will force the ReadOnly setting in VolumeMounts_'}
                                    PERSISTENTVOLUME_STORAGEOS_secretRef {doc 'secretRef specifies the secret to use for obtaining the StorageOS API credentials_ If not specified, default values will be attempted_'}
                                        mandatory   
                                            PERSISTENTVOLUME_STORAGEOS_SECRETREF_name
                                    PERSISTENTVOLUME_STORAGEOS_volumeNamespace {doc 'volumeNamespace specifies the scope of the volume within StorageOS_ If no namespace is specified then the Pod`s namespace will be used_ This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration_ Set VolumeName to any name to override the default behaviour_ Set to "default" if you are not using namespaces within StorageOS_ Namespaces that do not pre-exist within StorageOS will be created_'}
                            PERSISTENTVOLUME_awsElasticBlockStore {doc 'awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet`s host machine and then exposed to the pod_ More info: https://kubernetes_io/docs/concepts/storage/volumes#awselasticblockstore'}
                                mandatory   
                                    PERSISTENTVOLUME_AWSELASTICBLOCKSTORE_volumeID {doc 'volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume)_ More info: https://kubernetes_io/docs/concepts/storage/volumes#awselasticblockstore'}
                                    PERSISTENTVOLUME_AWSELASTICBLOCKSTORE_fsType { default 'ext4', doc 'fsType is the filesystem type of the volume that you want to mount_ Tip: Ensure that the filesystem type is supported by the host operating system_ Examples: "ext4", "xfs", "ntfs"_ Implicitly inferred to be "ext4" if unspecified_ More info: https://kubernetes_io/docs/concepts/storage/volumes#awselasticblockstore'}
                                optional
                                    PERSISTENTVOLUME_AWSELASTICBLOCKSTORE_partition {doc 'partition is the partition in the volume that you want to mount_ If omitted, the default is to mount by volume name_ Examples: For volume /dev/sda1, you specify the partition as "1"_ Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty)_'}
                                    PERSISTENTVOLUME_AWSELASTICBLOCKSTORE_readOnly {doc 'readOnly value true will force the readOnly setting in VolumeMounts_ More info: https://kubernetes_io/docs/concepts/storage/volumes#awselasticblockstore'}
                            PERSISTENTVOLUME_azureDisk {doc 'azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod_'}
                                mandatory
                                    PERSISTENTVOLUME_AZUREDISTK_diskName {doc 'diskName is the Name of the data disk in the blob storage'}
                                    PERSISTENTVOLUME_AZUREDISTK_diskURI {doc 'diskURI is the URI of data disk in the blob storage'}
                                optional
                                    PERSISTENTVOLUME_AZUREDISTK_cachingMode {doc 'cachingMode is the Host Caching mode: None, Read Only, Read Write_'}
                                        alternative   
                                            PERSISTENTVOLUME_AZUREDISTK_CACHINGMODE_none
                                            PERSISTENTVOLUME_AZUREDISTK_CACHINGMODE_readOnly
                                            PERSISTENTVOLUME_AZUREDISTK_CACHINGMODE_readWrite
                                    PERSISTENTVOLUME_AZUREDISTK_fsType {default 'ext4', doc 'fsType is Filesystem type to mount_ Must be a filesystem type supported by the host operating system_ Ex_ "ext4", "xfs", "ntfs"_ Implicitly inferred to be "ext4" if unspecified_'}
                                    PERSISTENTVOLUME_AZUREDISTK_kind {doc 'kind expected values are Shared: multiple blob disks per storage account Dedicated: single blob disk per storage account Managed: azure managed data disk (only in managed availability set)_ defaults to shared'}
                                        alternative   
                                            PERSISTENTVOLUME_AZUREDISTK_KIND_shared {default}
                                            PERSISTENTVOLUME_AZUREDISTK_KIND_dedicated
                                            PERSISTENTVOLUME_AZUREDISTK_KIND_managed
                                    PERSISTENTVOLUME_AZUREDISTK_readOnly {default false, doc 'readOnly Defaults to false (read/write)_ ReadOnly here will force the ReadOnly setting in VolumeMounts_'}
                            PERSISTENTVOLUME_azureFile {doc 'azureFile represents an Azure File Service mount on the host and bind mount to the pod_'}
                                mandatory
                                    PERSISTENTVOLUME_AZUREFILE_secretName {doc 'secretName is the name of secret that contains Azure Storage Account Name and Key'}
                                    PERSISTENTVOLUME_AZUREFILE_shareName {doc 'shareName is the azure Share Name'}
                                optional
                                    PERSISTENTVOLUME_AZUREFILE_secretNamespace {doc 'secretNamespace is the namespace of the secret that contains Azure Storage Account Name and Key default is the same as the Pod'}
                                    PERSISTENTVOLUME_AZUREFILE_readOnly {doc 'readOnly defaults to false (read/write)_ ReadOnly here will force the ReadOnly setting in VolumeMounts_'}
                            PERSISTENTVOLUME_cephfs {doc 'cephFS represents a Ceph FS mount on the host that shares a pod`s lifetime'}
                                mandatory 
                                    PERSISTENTVOLUME_CEFS_monitors   {doc 'monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples_k8s_io/volumes/cephfs/README_md#how-to-use-it'} 
                                        mandatory   
                                            PERSISTENTVOLUME_CEFS_MONITORS_monitor
                                optional
                                    PERSISTENTVOLUME_CEFS_path {default '/', doc 'path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /'}
                                    PERSISTENTVOLUME_CEFS_readOnly {default false, doc 'readOnly is Optional: Defaults to false (read/write)_ ReadOnly here will force the ReadOnly setting in VolumeMounts_ More info: https://examples_k8s_io/volumes/cephfs/README_md#how-to-use-it'}
                                    PERSISTENTVOLUME_CEFS_secretFile {doc 'secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user_secret More info: https://examples_k8s_io/volumes/cephfs/README_md#how-to-use-it'}
                                    PERSISTENTVOLUME_CEFS_secretRef {doc 'secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty_ More info: https://examples_k8s_io/volumes/cephfs/README_md#how-to-use-it'}
                                        mandatory   
                                            PERSISTENTVOLUME_CEFS_SECRETREF_name {doc 'name is unique within a namespace to reference a secret resource_'}
                                        optional    
                                            PERSISTENTVOLUME_CEFS_SECRETREF_namespace {doc 'namespace defines the space within which the secret name must be unique_'}
                                    PERSISTENTVOLUME_CEFS_user {doc 'user is Optional: User is the rados user name, default is admin More info: https://examples_k8s_io/volumes/cephfs/README_md#how-to-use-it'}
                            PERSISTENTVOLUME_cinder {doc 'cinder represents a cinder volume attached and mounted on kubelets host machine_ More info: https://examples_k8s_io/mysql-cinder-pd/README_md'}
                                mandatory   
                                    PERSISTENTVOLUME_CINDER_fsType {doc 'fsType Filesystem type to mount_ Must be a filesystem type supported by the host operating system_ Examples: "ext4", "xfs", "ntfs"_ Implicitly inferred to be "ext4" if unspecified_ More info: https://examples_k8s_io/mysql-cinder-pd/README_md'}
                                    PERSISTENTVOLUME_CINDER_volumeID {doc 'volumeID used to identify the volume in cinder_ More info: https://examples_k8s_io/mysql-cinder-pd/README_md'}
                                optional        
                                    PERSISTENTVOLUME_CINDER_readOnly {doc 'readOnly is Optional: Defaults to false (read/write)_ ReadOnly here will force the ReadOnly setting in VolumeMounts_ More info: https://examples_k8s_io/mysql-cinder-pd/README_md'}  
                                    PERSISTENTVOLUME_CINDER_secretRef {doc 'secretRef is Optional: points to a secret object containing parameters used to connect to OpenStack_'}   
                                        mandatory   
                                            PERSISTENTVOLUME_CINDER_SECRETREF_name {doc 'name is unique within a namespace to reference a secret resource_'}    
                                        optional    
                                            PERSISTENTVOLUME_CINDER_SECRETREF_namespace {doc 'namespace defines the space within which the secret name must be unique_'}             
                            PERSISTENTVOLUME_claimRef {doc 'claimRef is part of a bi-directional binding between PersistentVolume and PersistentVolumeClaim_ Expected to be non-nil when bound_ claim_VolumeName is the authoritative bind between PV and PVC_ More info: https://kubernetes_io/docs/concepts/storage/persistent-volumes#binding'}
                                mandatory
                                    PERSISTENTVOLUME_CLAIMREF_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'} 
                                optional    
                                    PERSISTENTVOLUME_CLAIMREF_namespace {doc 'Namespace of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/namespaces/'}  
                                optional
                                    PERSISTENTVOLUME_CLAIMREF_apiVersion {doc 'API version of the referent_'}
                                    PERSISTENTVOLUME_CLAIMREF_kind {doc 'Kind of the referent_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#types-kinds'} 
                                    PERSISTENTVOLUME_CLAIMREF_fieldPath {doc 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState_manifest_containers[2]_ For example, if the object reference is to a container within a pod, this would take on a value like: "spec_containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec_containers[2]" (container with index 2 in this pod)_ This syntax is chosen only to have some well-defined way of referencing a part of an object_'} 
                                    PERSISTENTVOLUME_CLAIMREF_resourceVersion {doc 'Specific resourceVersion to which this reference is made, if any_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#concurrency-control-and-consistency'} 
                                    PERSISTENTVOLUME_CLAIMREF_uid {doc 'UID of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#uids'} 
                            PERSISTENTVOLUME_flexVolume {doc 'flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin_'}
                                mandatory 
                                    PERSISTENTVOLUME_FLEXVOLUME_driver {doc 'driver is the name of the driver to use for this volume_'} 
                                    PERSISTENTVOLUME_FLEXVOLUME_fsType {doc 'fsType is the Filesystem type to mount_ Must be a filesystem type supported by the host operating system_ Ex_ "ext4", "xfs", "ntfs"_ The default filesystem depends on FlexVolume script_'} 
                                optional
                                    PERSISTENTVOLUME_FLEXVOLUME_options    {doc 'options is Optional: this field holds extra command options if any_'}
                                        mandatory  
                                            PERSISTENTVOLUME_FLEXVOLUME_OPTIONS_key 
                                            PERSISTENTVOLUME_FLEXVOLUME_OPTIONS_value 
                                    PERSISTENTVOLUME_FLEXVOLUME_readOnly {default false, doc 'readOnly is Optional: defaults to false (read/write)_ ReadOnly here will force the ReadOnly setting in VolumeMounts_'}
                                    PERSISTENTVOLUME_FLEXVOLUME_secretRef {doc 'secretRef is Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts_ This may be empty if no secret object is specified_ If the secret object contains more than one secret, all secrets are passed to the plugin scripts_'}
                                        mandatory
                                            PERSISTENTVOLUME_FLEXVOLUME_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'} 
                                        optional
                                            PERSISTENTVOLUME_FLEXVOLUME_namespace {doc 'Namespace of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/namespaces/'}  
                            PERSISTENTVOLUME_gcePersistentDisk {doc 'gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet`s host machine and then exposed to the pod_ Provisioned by an admin_ More info: https://kubernetes_io/docs/concepts/storage/volumes#gcepersistentdisk'}
                                mandatory  
                                    PERSISTENTVOLUME_GCEPERSISTENTDISK_fsType {default 'ext4', doc 'fsType is filesystem type of the volume that you want to mount_ Tip: Ensure that the filesystem type is supported by the host operating system_ Examples: "ext4", "xfs", "ntfs"_ Implicitly inferred to be "ext4" if unspecified_ More info: https://kubernetes_io/docs/concepts/storage/volumes#gcepersistentdisk'}
                                    PERSISTENTVOLUME_GCEPERSISTENTDISK_pdName {doc 'pdName is unique name of the PD resource in GCE_ Used to identify the disk in GCE_ More info: https://kubernetes_io/docs/concepts/storage/volumes#gcepersistentdisk'}
                                optional
                                    PERSISTENTVOLUME_GCEPERSISTENTDISK_partition {doc 'partition is the partition in the volume that you want to mount_ If omitted, the default is to mount by volume name_ Examples: For volume /dev/sda1, you specify the partition as "1"_ Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty)_ More info: https://kubernetes_io/docs/concepts/storage/volumes#gcepersistentdisk'}
                                    PERSISTENTVOLUME_GCEPERSISTENTDISK_readOnly {doc 'readOnly here will force the ReadOnly setting in VolumeMounts_ Defaults to false_ More info: https://kubernetes_io/docs/concepts/storage/volumes#gcepersistentdisk'}
                            PERSISTENTVOLUME_glusterfs {doc 'glusterfs represents a Glusterfs volume that is attached to a host and exposed to the pod_ Provisioned by an admin_ More info: https://examples_k8s_io/volumes/glusterfs/README_md'}
                                mandatory
                                    PERSISTENTVOLUME_GLUSTERFS_endpoints {doc 'endpoints is the endpoint name that details Glusterfs topology_ More info: https://examples_k8s_io/volumes/glusterfs/README_md#create-a-pod'}
                                    PERSISTENTVOLUME_GLUSTERFS_path {doc 'path is the Glusterfs volume path_ More info: https://examples_k8s_io/volumes/glusterfs/README_md#create-a-pod'}
                                optional 
                                    PERSISTENTVOLUME_GLUSTERFS_endpointsNamespace {doc 'endpointsNamespace is the namespace that contains Glusterfs endpoint_ If this field is empty, the EndpointNamespace defaults to the same namespace as the bound PVC_ More info: https://examples_k8s_io/volumes/glusterfs/README_md#create-a-pod'}
                                    PERSISTENTVOLUME_GLUSTERFS_readOnly {default false, doc 'readOnly here will force the Glusterfs volume to be mounted with read-only permissions_ Defaults to false_ More info: https://examples_k8s_io/volumes/glusterfs/README_md#create-a-pod'}
                            PERSISTENTVOLUME_local {doc 'local represents directly-attached storage with node affinity'}
                                mandatory 
                                    PERSISTENTVOLUME_LOCAL_path {doc 'path of the full path to the volume on the node_ It can be either a directory or block device (disk, partition, ___)_'}
                                optional
                                    PERSISTENTVOLUME_LOCAL_fsType {doc 'fsType is the filesystem type to mount_ It applies only when the Path is a block device_ Must be a filesystem type supported by the host operating system_ Ex_ "ext4", "xfs", "ntfs"_ The default value is to auto-select a filesystem if unspecified_'}
                            PERSISTENTVOLUME_nodeAffinity {doc 'nodeAffinity defines constraints that limit what nodes this volume can be accessed from_ This field influences the scheduling of pods that use this volume_'}
                                mandatory   
                                    PERSISTENTVOLUME_NODEAFFINITY_required {doc 'required specifies hard node constraints that must be met_'}
                                        mandatory  
                                            PERSISTENTVOLUME_NODEAFFINITY_nodeSelectorTerms   {doc 'Required_ A list of node selector terms_ The terms are ORed_'}
                                                or
                                                    PERSISTENTVOLUME_NODEAFFINITY_NODESELECTORTERMS_matchExpressions {doc 'A list of node selector requirements by node`s labels_'}
                                                        mandatory   
                                                            PERSISTENTVOLUME_NODEAFFINITY_NODESELECTORTERMS_MATCHEXPRESSIONS_key {doc 'The label key that the selector applies to_'}
                                                            PERSISTENTVOLUME_NODEAFFINITY_NODESELECTORTERMS_MATCHEXPRESSIONS_operator {doc 'Represents a key`s relationship to a set of values_ Valid operators are In, NotIn, Exists, DoesNotExist_ Gt, and Lt_'}
                                                                alternative
                                                                    PERSISTENTVOLUME_NODEAFFINITY_NODESELECTORTERMS_MATCHEXPRESSIONS_OPERATOR_In
                                                                    PERSISTENTVOLUME_NODEAFFINITY_NODESELECTORTERMS_MATCHEXPRESSIONS_OPERATOR_NotIn
                                                                    PERSISTENTVOLUME_NODEAFFINITY_NODESELECTORTERMS_MATCHEXPRESSIONS_OPERATOR_Exist
                                                                    PERSISTENTVOLUME_NODEAFFINITY_NODESELECTORTERMS_MATCHEXPRESSIONS_OPERATOR_NotExist
                                                                    PERSISTENTVOLUME_NODEAFFINITY_NODESELECTORTERMS_MATCHEXPRESSIONS_OPERATOR_Gt
                                                                    PERSISTENTVOLUME_NODEAFFINITY_NODESELECTORTERMS_MATCHEXPRESSIONS_OPERATOR_Lt
                                                            PERSISTENTVOLUME_NODEAFFINITY_NODESELECTORTERMS_MATCHEXPRESSIONS_values    {doc 'An array of string values_ If the operator is In or NotIn, the values array must be non-empty_ If the operator is Exists or DoesNotExist, the values array must be empty_ If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer_ This array is replaced during a strategic merge patch_'}
                                                                mandatory   
                                                                    PERSISTENTVOLUME_NODEAFFINITY_NODESELECTORTERMS_MATCHEXPRESSIONS_VALUES_value 
                                                    PERSISTENTVOLUME_NODEAFFINITY_NODESELECTORTERMS_matchFields {doc 'A list of node selector requirements by node`s fields_'}
                                                        mandatory   
                                                            PERSISTENTVOLUME_NODEAFFINITY_NODESELECTORTERMS_MATCHFIELDS_key {doc 'The label key that the selector applies to_'}
                                                            PERSISTENTVOLUME_NODEAFFINITY_NODESELECTORTERMS_MATCHFIELDS_operator {doc 'Represents a key`s relationship to a set of values_ Valid operators are In, NotIn, Exists, DoesNotExist_ Gt, and Lt_'}
                                                                alternative
                                                                    PERSISTENTVOLUME_NODEAFFINITY_NODESELECTORTERMS_MATCHFIELDS_OPERATOR_In
                                                                    PERSISTENTVOLUME_NODEAFFINITY_NODESELECTORTERMS_MATCHFIELDS_OPERATOR_NotIn
                                                                    PERSISTENTVOLUME_NODEAFFINITY_NODESELECTORTERMS_MATCHFIELDS_OPERATOR_Exist
                                                                    PERSISTENTVOLUME_NODEAFFINITY_NODESELECTORTERMS_MATCHFIELDS_OPERATOR_NotExist
                                                                    PERSISTENTVOLUME_NODEAFFINITY_NODESELECTORTERMS_MATCHFIELDS_OPERATOR_Gt
                                                                    PERSISTENTVOLUME_NODEAFFINITY_NODESELECTORTERMS_MATCHFIELDS_OPERATOR_Lt
                                                            PERSISTENTVOLUME_NODEAFFINITY_NODESELECTORTERMS_MATCHFIELDS_values    {doc 'An array of string values_ If the operator is In or NotIn, the values array must be non-empty_ If the operator is Exists or DoesNotExist, the values array must be empty_ If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer_ This array is replaced during a strategic merge patch_'}
                                                                mandatory   
                                                                    PERSISTENTVOLUME_NODEAFFINITY_NODESELECTORTERMS_MATCHFIELDS_VALUES_value
                            PERSISTENTVOLUME_portworxVolume {doc 'portworxVolume represents a portworx volume attached and mounted on kubelets host machine'}
                                mandatory   
                                    PERSISTENTVOLUME_PORTWORXVOLUME_volumeID {doc 'volumeID uniquely identifies a Portworx volume'}
                                optional   
                                    PERSISTENTVOLUME_PORTWORXVOLUME_fsType {default 'ext4', doc 'fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system_ Ex_ "ext4", "xfs"_ Implicitly inferred to be "ext4" if unspecified_'}
                                    PERSISTENTVOLUME_PORTWORXVOLUME_readOnly {deafult false, doc 'readOnly defaults to false (read/write)_ ReadOnly here will force the ReadOnly setting in VolumeMounts_'}
                            PERSISTENTVOLUME_vsphereVolume {doc 'vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine'}
                                mandatory
                                    PERSISTENTVOLUME_VSPHEREVOLUME_volumePath {doc 'volumePath is the path that identifies vSphere volume vmdk'} 
                                optional   
                                    PERSISTENTVOLUME_VSPHEREVOLUME_fsType {default 'ext4', doc 'fsType is filesystem type to mount_ Must be a filesystem type supported by the host operating system_ Ex_ "ext4", "xfs", "ntfs"_ Implicitly inferred to be "ext4" if unspecified_'}
                                    PERSISTENTVOLUME_VSPHEREVOLUME_storagePolicyID {doc 'storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName_'}
                                    PERSISTENTVOLUME_VSPHEREVOLUME_storagePolicyName {doc 'storagePolicyName is the storage Policy Based Management (SPBM) profile name_'}  
                    StatefulSetSpec {doc 'Spec defines the desired identities of pods in this set_'}
                        mandatory
                            STATEFULSETSPEC_selector {doc 'selector is a label query over pods that should match the replica count_ It must match the pod template`s labels_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/labels/#label-selectors'}
                                or   
                                    STATEFULSETSPEC_SELECTOR_matchExpressions    {doc 'matchExpressions is a list of label selector requirements_ The requirements are ANDed_'}
                                        mandatory   
                                            STATEFULSETSPEC_SELECTOR_MATCHEXPRESSIONS_key {doc 'key is the label key that the selector applies to_'}
                                            STATEFULSETSPEC_SELECTOR_MATCHEXPRESSIONS_operator {doc 'operator represents a key`s relationship to a set of values_ Valid operators are In, NotIn, Exists and DoesNotExist_'}
                                                alternative
                                                    STATEFULSETSPEC_SELECTOR_MATCHEXPRESSIONS_OPERATOR_In
                                                    STATEFULSETSPEC_SELECTOR_MATCHEXPRESSIONS_OPERATOR_NotIn
                                                    STATEFULSETSPEC_SELECTOR_MATCHEXPRESSIONS_OPERATOR_Exist
                                                    STATEFULSETSPEC_SELECTOR_MATCHEXPRESSIONS_OPERATOR_NotExist
                                            STATEFULSETSPEC_SELECTOR_MATCHEXPRESSIONS_values   {doc 'values is an array of string values_ If the operator is In or NotIn, the values array must be non-empty_ If the operator is Exists or DoesNotExist, the values array must be empty_ This array is replaced during a strategic merge patch_'}
                                                mandatory   
                                                    STATEFULSETSPEC_SELECTOR_MATCHEXPRESSIONS_VALUES_value
                                    STATEFULSETSPEC_SELECTOR_matchLabels   {doc 'matchLabels is a map of {key,value} pairs_ A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value"_ The requirements are ANDed_'}
                                        mandatory   
                                            STATEFULSETSPEC_SELECTOR_MATCHLABELS_key
                                            STATEFULSETSPEC_SELECTOR_MATCHLABELS_value
                            STATEFULSETSPEC_serviceName {doc 'serviceName is the name of the service that governs this StatefulSet_ This service must exist before the StatefulSet, and is responsible for the network identity of the set_ Pods get DNS/hostnames that follow the pattern: pod-specific-string_serviceName_default_svc_cluster_local where "pod-specific-string" is managed by the StatefulSet controller_'}
                            STATEFULSETSPEC_template {doc 'template is the object that describes the pod that will be created if insufficient replicas are detected_ Each pod stamped out by the StatefulSet will fulfill this Template, but have a unique identity from the rest of the StatefulSet_ Each pod will be named with the format <statefulsetname>-<podindex>_ For example, a pod in a StatefulSet named "web" with index number "3" would be named "web-3"_ The only allowed template_spec_restartPolicy value is "Always"_'}
                                mandatory   
                                    STATEFULSETSPEC_TEMPLATE_metadataReference {doc 'Reference to metadata object to not duplicate it'}
                                    STATEFULSETSPEC_TEMPLATE_podSpecReference {doc 'Reference to Pod spec object to not duplicate it'}
                        optional
                            STATEFULSETSPEC_replicas {default 1, doc 'replicas is the desired number of replicas of the given Template_ These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity_ If unspecified, defaults to 1_'}
                            STATEFULSETSPEC_revisionHistoryLimit {default 10, doc 'revisionHistoryLimit is the maximum number of revisions that will be maintained in the StatefulSet`s revision history_ The revision history consists of all revisions not represented by a currently applied StatefulSetSpec version_ The default value is 10_'}
                            STATEFULSETSPEC_updateStrategy {doc 'updateStrategy indicates the StatefulSetUpdateStrategy that will be employed to update Pods in the StatefulSet when a revision is made to Template_'}
                                mandatory   
                                    STATEFULSETSPEC_UPDATESTRATEGY_type { default 'RollingUpdate', doc 'Type indicates the type of the StatefulSetUpdateStrategy_ Default is RollingUpdate_'}
                                    STATEFULSETSPEC_UPDATESTRATEGY_rollingUpdate {doc 'rollingUpdate is used to communicate parameters when Type is RollingUpdateStatefulSetStrategyType_'}
                                        mandatory   
                                            STATEFULSETSPEC_UPDATESTRATEGY_ROLLINGUPDATE_partition {default 0, doc 'Partition indicates the ordinal at which the StatefulSet should be partitioned for updates_ During a rolling update, all pods from ordinal Replicas-1 to Partition are updated_ All pods from ordinal Partition-1 to 0 remain untouched_ This is helpful in being able to do a canary based deployment_ The default value is 0_'}
                                        optional    
                                            STATEFULSETSPEC_UPDATESTRATEGY_ROLLINGUPDATE_maxUnavailable {default '1', doc 'The maximum number of pods that can be unavailable during the update_ Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%)_ Absolute number is calculated from percentage by rounding up_ This can not be 0_ Defaults to 1_ This field is alpha-level and is only honored by servers that enable the MaxUnavailableStatefulSet feature_ The field applies to all pods in the range 0 to Replicas-1_ That means if there is any unavailable pod in the range 0 to Replicas-1, it will be counted towards MaxUnavailable_'}
                            STATEFULSETSPEC_volumeClaimTemplates    {doc 'volumeClaimTemplates is a list of claims that pods are allowed to reference_ The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod_ Every claim in this list must have at least one matching (by name) volumeMount in one container in the template_ A claim in this list takes precedence over any volumes in the template, with the same name_'}
                                mandatory   
                                    STATEFULSETSPEC_VOLUMECLAIMTEMPLATES_persistentVolumeClaimReference {doc 'Reference to PersistenVolumeClaim object to not duplicate it'}
                                    STATEFULSETSPEC_VOLUMECLAIMTEMPLATES_metadataReference {doc 'Reference to metadata object to not duplicate it'}
                            STATEFULSETSPEC_minReadySeconds {default 0, doc 'Minimum number of seconds for which a newly created pod should be ready without any of its container crashing for it to be considered available_ Defaults to 0 (pod will be considered available as soon as it is ready)'}
                            STATEFULSETSPEC_ordinals {doc 'ordinals controls the numbering of replica indices in a StatefulSet_ The default ordinals behavior assigns a "0" index to the first replica and increments the index by one for each additional replica requested_ Using the ordinals field requires the StatefulSetStartOrdinal feature gate to be enabled, which is beta_'}
                                mandatory   
                                    STATEFULSETSPEC_ORDINALS_start {doc 'start is the number representing the first replica`s index_ It may be used to number replicas from an alternate index (eg: 1-indexed) over the default 0-indexed names, or to orchestrate progressive movement of replicas from one StatefulSet to another_ If set, replica indices will be in the range: [_spec_ordinals_start, _spec_ordinals_start + _spec_replicas)_ If unset, defaults to 0_ Replica indices will be in the range: [0, _spec_replicas)_'}
                            STATEFULSETSPEC_persistentVolumeClaimRetentionPolicy {doc 'persistentVolumeClaimRetentionPolicy describes the lifecycle of persistent volume claims created from volumeClaimTemplates_ By default, all persistent volume claims are created as needed and retained until manually deleted_ This policy allows the lifecycle to be altered, for example by deleting persistent volume claims when their stateful set is deleted, or when their pod is scaled down_ This requires the StatefulSetAutoDeletePVC feature gate to be enabled, which is alpha_ +optional'}
                                or   
                                    STATEFULSETSPEC_PERSISTENTVOLUMECLAIMRETENTIONPOLICY_whenDeleted {doc 'WhenDeleted specifies what happens to PVCs created from StatefulSet VolumeClaimTemplates when the StatefulSet is deleted_ The default policy of `Retain` causes PVCs to not be affected by StatefulSet deletion_ The `Delete` policy causes those PVCs to be deleted_'}
                                    STATEFULSETSPEC_PERSISTENTVOLUMECLAIMRETENTIONPOLICY_whenScaled {doc 'WhenScaled specifies what happens to PVCs created from StatefulSet VolumeClaimTemplates when the StatefulSet is scaled down_ The default policy of `Retain` causes PVCs to not be affected by a scaledown_ The `Delete` policy causes the associated PVCs for any excess pods above the replica count to be deleted_'}
                            STATEFULSETSPEC_podManagementPolicy {doc 'podManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down_ The default policy is `OrderedReady`, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing_ When scaling down, the pods are removed in the opposite order_ The alternative policy is `Parallel` which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once_'}
                    NetworkPolicySpec {doc 'NetworkPolicySpec represents the specification of the desired behavior for this NetworkPolicy_'}
                        mandatory
                            NETWORKPOLICYSPEC_podSelector {doc 'podSelector selects the pods to which this NetworkPolicy object applies_ The array of ingress rules is applied to any pods selected by this field_ Multiple network policies can select the same set of pods_ In this case, the ingress rules for each are combined additively_ This field is NOT optional and follows standard label selector semantics_ An empty podSelector matches all pods in this namespace_'}
                                or   
                                    NETWORKPOLICYSPEC_PODSELECTOR_matchExpressions   {doc 'matchExpressions is a list of label selector requirements_ The requirements are ANDed_'}
                                        mandatory   
                                            NETWORKPOLICYSPEC_PODSELECTOR_MATCHEXPRESSIONS_key
                                            NETWORKPOLICYSPEC_PODSELECTOR_MATCHEXPRESSIONS_operator
                                                alternative
                                                    NETWORKPOLICYSPEC_PODSELECTOR_MATCHEXPRESSIONS_OPERATOR_In
                                                    NETWORKPOLICYSPEC_PODSELECTOR_MATCHEXPRESSIONS_OPERATOR_NotIn
                                                    NETWORKPOLICYSPEC_PODSELECTOR_MATCHEXPRESSIONS_OPERATOR_Exist
                                                    NETWORKPOLICYSPEC_PODSELECTOR_MATCHEXPRESSIONS_OPERATOR_NotExist
                                            NETWORKPOLICYSPEC_PODSELECTOR_MATCHEXPRESSIONS_values   {doc 'values is an array of string values_ If the operator is In or NotIn, the values array must be non-empty_ If the operator is Exists or DoesNotExist, the values array must be empty_ This array is replaced during a strategic merge patch_'}
                                                mandatory   
                                                    NETWORKPOLICYSPEC_PODSELECTOR_MATCHEXPRESSIONS_VALUES_value
                                    NETWORKPOLICYSPEC_PODSELECTOR_matchLabels   {doc 'matchLabels is a map of {key,value} pairs_ A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value"_ The requirements are ANDed_'}
                                        mandatory   
                                            NETWORKPOLICYSPEC_PODSELECTOR_MATCHLABELS_key
                                            NETWORKPOLICYSPEC_PODSELECTOR_MATCHLABELS_value
                        optional   
                            NETWORKPOLICYSPEC {doc 'policyTypes is a list of rule types that the NetworkPolicy relates to_ Valid options are ["Ingress"], ["Egress"], or ["Ingress", "Egress"]_ If this field is not specified, it will default based on the existence of ingress or egress rules; policies that contain an egress section are assumed to affect egress, and all policies (whether or not they contain an ingress section) are assumed to affect ingress_ If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ]_ Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include "Egress" (since such a policy would not include an egress section and would otherwise default to just [ "Ingress" ])_ This field is beta-level in 1_8'}
                                or             
                                    NETWORKPOLICYSPEC_POLICYTYPES_Egress
                                    NETWORKPOLICYSPEC_POLICYTYPES_Ingress
                                    NETWORKPOLICYSPEC_POLICYTYPES_IngressAndEgress
                            NETWORKPOLICYSPEC_egress   {doc 'egress is a list of egress rules to be applied to the selected pods_ Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod_ If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default)_ This field is beta-level in 1_8'} 
                                or 
                                    NETWORKPOLICYSPEC_EGRESS_ports   {doc 'ports is a list of destination ports for outgoing traffic_ Each item in this list is combined using a logical OR_ If this field is empty or missing, this rule matches all ports (traffic not restricted by port)_ If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list_'}
                                        mandatory  
                                            NETWORKPOLICYSPEC_EGRESS_PORTS_port {doc 'port represents the port on the given protocol_ This can either be a numerical or named port on a pod_ If this field is not provided, this matches all port names and numbers_ If present, only traffic on the specified protocol AND port will be matched_'}
                                            NETWORKPOLICYSPEC_EGRESS_PORTS_protocol {doc 'protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match_ If not specified, this field defaults to TCP_'} 
                                                alternative   
                                                    NETWORKPOLICYSPEC_EGRESS_PORTS_PROTOCOL_TCP {default}
                                                    NETWORKPOLICYSPEC_EGRESS_PORTS_PROTOCOL_UDP
                                                    NETWORKPOLICYSPEC_EGRESS_PORTS_PROTOCOL_SCTP
                                        optional
                                            NETWORKPOLICYSPEC_EGRESS_PORTS_endPort {doc 'endPort indicates that the range of ports from port to endPort if set, inclusive, should be allowed by the policy_ This field cannot be defined if the port field is not defined or if the port field is defined as a named (string) port_ The endPort must be equal or greater than port_'}
                                    NETWORKPOLICYSPEC_EGRESS_to   {doc 'to is a list of destinations for outgoing traffic of pods selected for this rule_ Items in this list are combined using a logical OR operation_ If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination)_ If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list_'} 
                                        or   
                                            NETWORKPOLICYSPEC_EGRESS_TO_ipBlock {doc 'ipBlock defines policy on a particular IPBlock_ If this field is set then neither of the other fields can be_'}
                                                mandatory   
                                                    NETWORKPOLICYSPEC_EGRESS_TO_IPBLOCK_cidr {doc 'cidr is a string representing the IPBlock Valid examples are "192_168_1_0/24" or "2001:db8::/64"'}
                                                optional   
                                                    NETWORKPOLICYSPEC_EGRESS_TO_IPBLOCK_except   {doc 'except is a slice of CIDRs that should not be included within an IPBlock Valid examples are "192_168_1_0/24" or "2001:db8::/64" Except values will be rejected if they are outside the cidr range'}
                                                        mandatory   
                                                            NETWORKPOLICYSPEC_EGRESS_TO_IPBLOCK_EXCEPT_value
                                            NETWORKPOLICYSPEC_EGRESS_TO_namespaceSelector {doc 'namespaceSelector selects namespaces using cluster-scoped labels_ This field follows standard label selector semantics; if present but empty, it selects all namespaces_ If podSelector is also set, then the NetworkPolicyPeer as a whole selects the pods matching podSelector in the namespaces selected by namespaceSelector_ Otherwise it selects all pods in the namespaces selected by namespaceSelector_'}
                                                or   
                                                    NETWORKPOLICYSPEC_EGRESS_TO_NAMESPACESELECTOR_matchExpressions   {doc 'matchExpressions is a list of label selector requirements_ The requirements are ANDed_'}
                                                        mandatory   
                                                            NETWORKPOLICYSPEC_EGRESS_TO_NAMESPACESELECTOR_MATCHEXPRESSIONS_key {doc 'key is the label key that the selector applies to_'}
                                                            NETWORKPOLICYSPEC_EGRESS_TO_NAMESPACESELECTOR_MATCHEXPRESSIONS_operator {doc 'operator represents a key`s relationship to a set of values_ Valid operators are In, NotIn, Exists and DoesNotExist_'}
                                                                alternative
                                                                    NETWORKPOLICYSPEC_EGRESS_TO_NAMESPACESELECTOR_MATCHEXPRESSIONS_OPERATOR_In
                                                                    NETWORKPOLICYSPEC_EGRESS_TO_NAMESPACESELECTOR_MATCHEXPRESSIONS_OPERATOR_NotIn
                                                                    NETWORKPOLICYSPEC_EGRESS_TO_NAMESPACESELECTOR_MATCHEXPRESSIONS_OPERATOR_Exist
                                                                    NETWORKPOLICYSPEC_EGRESS_TO_NAMESPACESELECTOR_MATCHEXPRESSIONS_OPERATOR_NotExist
                                                            NETWORKPOLICYSPEC_EGRESS_TO_NAMESPACESELECTOR_MATCHEXPRESSIONS_values   {doc 'values is an array of string values_ If the operator is In or NotIn, the values array must be non-empty_ If the operator is Exists or DoesNotExist, the values array must be empty_ This array is replaced during a strategic merge patch_'}
                                                                mandatory   
                                                                    NETWORKPOLICYSPEC_EGRESS_TO_NAMESPACESELECTOR_MATCHEXPRESSIONS_VALUES_value
                                                    NETWORKPOLICYSPEC_EGRESS_TO_NAMESPACESELECTOR_matchLabels   {doc 'matchLabels is a map of {key,value} pairs_ A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value"_ The requirements are ANDed_'}
                                                        mandatory   
                                                            NETWORKPOLICYSPEC_EGRESS_TO_NAMESPACESELECTOR_MATCHLABELS_key
                                                            NETWORKPOLICYSPEC_EGRESS_TO_NAMESPACESELECTOR_MATCHLABELS_value
                                            NETWORKPOLICYSPEC_EGRESS_TO_podSelector {doc 'podSelector is a label selector which selects pods_ This field follows standard label selector semantics; if present but empty, it selects all pods_ If namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the pods matching podSelector in the Namespaces selected by NamespaceSelector_ Otherwise it selects the pods matching podSelector in the policy`s own namespace_'}
                                                or   
                                                    NETWORKPOLICYSPEC_EGRESS_TO_PODSELECTOR_matchExpressions   {doc 'matchExpressions is a list of label selector requirements_ The requirements are ANDed_'}
                                                        mandatory   
                                                            NETWORKPOLICYSPEC_EGRESS_TO_PODSELECTOR_MATCHEXPRESSIONS_key {doc 'key is the label key that the selector applies to_'}
                                                            NETWORKPOLICYSPEC_EGRESS_TO_PODSELECTOR_MATCHEXPRESSIONS_operator {doc 'operator represents a key`s relationship to a set of values_ Valid operators are In, NotIn, Exists and DoesNotExist_'}
                                                                alternative
                                                                    NETWORKPOLICYSPEC_EGRESS_TO_PODSELECTOR_MATCHEXPRESSIONS_OPERATOR_In
                                                                    NETWORKPOLICYSPEC_EGRESS_TO_PODSELECTOR_MATCHEXPRESSIONS_OPERATOR_NotIn
                                                                    NETWORKPOLICYSPEC_EGRESS_TO_PODSELECTOR_MATCHEXPRESSIONS_OPERATOR_Exist
                                                                    NETWORKPOLICYSPEC_EGRESS_TO_PODSELECTOR_MATCHEXPRESSIONS_OPERATOR_NotExist
                                                            NETWORKPOLICYSPEC_EGRESS_TO_PODSELECTOR_MATCHEXPRESSIONS_values   {doc 'values is an array of string values_ If the operator is In or NotIn, the values array must be non-empty_ If the operator is Exists or DoesNotExist, the values array must be empty_ This array is replaced during a strategic merge patch_'}
                                                                mandatory   
                                                                    NETWORKPOLICYSPEC_EGRESS_TO_PODSELECTOR_MATCHEXPRESSIONS_VALUES_value
                                                    NETWORKPOLICYSPEC_EGRESS_TO_PODSELECTOR_matchLabels   {doc 'matchLabels is a map of {key,value} pairs_ A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value"_ The requirements are ANDed_'}
                                                        mandatory   
                                                            NETWORKPOLICYSPEC_EGRESS_TO_PODSELECTOR_MATCHLABELS_key
                                                            NETWORKPOLICYSPEC_EGRESS_TO_PODSELECTOR_MATCHLABELS_value
                            NETWORKPOLICYSPEC_ingress   {doc 'ingress is a list of ingress rules to be applied to the selected pods_ Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic source is the pod`s local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod_ If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default)'}
                                optional   
                                    NETWORKPOLICYSPEC_INGRESS_from   {doc 'from is a list of sources which should be able to access the pods selected for this rule_ Items in this list are combined using a logical OR operation_ If this field is empty or missing, this rule matches all sources (traffic not restricted by source)_ If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the from list_'} 
                                        or   
                                            NETWORKPOLICYSPEC_INGRESS_FROM_ipBlock {doc 'ipBlock defines policy on a particular IPBlock_ If this field is set then neither of the other fields can be_'}
                                                    mandatory   
                                                        NETWORKPOLICYSPEC_INGRESS_FROM_IPBLOCK_cidr {doc 'cidr is a string representing the IPBlock Valid examples are "192_168_1_0/24" or "2001:db8::/64"'}
                                                    optional   
                                                        NETWORKPOLICYSPEC_INGRESS_FROM_IPBLOCK_except   {doc 'except is a slice of CIDRs that should not be included within an IPBlock Valid examples are "192_168_1_0/24" or "2001:db8::/64" Except values will be rejected if they are outside the cidr range'}
                                                            mandatory   
                                                                NETWORKPOLICYSPEC_INGRESS_FROM_IPBLOCK_EXCEPT_value
                                            NETWORKPOLICYSPEC_INGRESS_FROM_namespaceSelector {doc 'namespaceSelector selects namespaces using cluster-scoped labels_ This field follows standard label selector semantics; if present but empty, it selects all namespaces_ If podSelector is also set, then the NetworkPolicyPeer as a whole selects the pods matching podSelector in the namespaces selected by namespaceSelector_ Otherwise it selects all pods in the namespaces selected by namespaceSelector_'}
                                                or   
                                                    NETWORKPOLICYSPEC_INGRESS_FROM_NAMESPACESELECTOR_matchExpressions   {doc 'matchExpressions is a list of label selector requirements_ The requirements are ANDed_'}
                                                        mandatory   
                                                            NETWORKPOLICYSPEC_INGRESS_FROM_NAMESPACESELECTOR_MATCHEXPRESSIONS_key {doc 'key is the label key that the selector applies to_'}
                                                            NETWORKPOLICYSPEC_INGRESS_FROM_NAMESPACESELECTOR_MATCHEXPRESSIONS_operator {doc 'operator represents a key`s relationship to a set of values_ Valid operators are In, NotIn, Exists and DoesNotExist_'}
                                                                alternative
                                                                    NETWORKPOLICYSPEC_INGRESS_FROM_NAMESPACESELECTOR_MATCHEXPRESSIONS_OPERATOR_In
                                                                    NETWORKPOLICYSPEC_INGRESS_FROM_NAMESPACESELECTOR_MATCHEXPRESSIONS_OPERATOR_NotIn
                                                                    NETWORKPOLICYSPEC_INGRESS_FROM_NAMESPACESELECTOR_MATCHEXPRESSIONS_OPERATOR_Exist
                                                                    NETWORKPOLICYSPEC_INGRESS_FROM_NAMESPACESELECTOR_MATCHEXPRESSIONS_OPERATOR_NotExist
                                                            NETWORKPOLICYSPEC_INGRESS_FROM_NAMESPACESELECTOR_MATCHEXPRESSIONS_values   {doc 'values is an array of string values_ If the operator is In or NotIn, the values array must be non-empty_ If the operator is Exists or DoesNotExist, the values array must be empty_ This array is replaced during a strategic merge patch_'}
                                                                mandatory   
                                                                    NETWORKPOLICYSPEC_INGRESS_FROM_NAMESPACESELECTOR_MATCHEXPRESSIONS_VALUES_value
                                                    NETWORKPOLICYSPEC_INGRESS_FROM_NAMESPACESELECTOR_matchLabels   {doc 'matchLabels is a map of {key,value} pairs_ A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value"_ The requirements are ANDed_'}
                                                        mandatory   
                                                            NETWORKPOLICYSPEC_INGRESS_FROM_NAMESPACESELECTOR_MATCHLABELS_key
                                                            NETWORKPOLICYSPEC_INGRESS_FROM_NAMESPACESELECTOR_MATCHLABELS_value
                                            NETWORKPOLICYSPEC_INGRESS_FROM_podSelector {doc 'podSelector is a label selector which selects pods_ This field follows standard label selector semantics; if present but empty, it selects all pods_ If namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the pods matching podSelector in the Namespaces selected by NamespaceSelector_ Otherwise it selects the pods matching podSelector in the policy`s own namespace_'}
                                                or   
                                                    NETWORKPOLICYSPEC_INGRESS_FROM_PODSELECTOR_matchExpressions   {doc 'matchExpressions is a list of label selector requirements_ The requirements are ANDed_'}
                                                        mandatory   
                                                            NETWORKPOLICYSPEC_INGRESS_FROM_PODSELECTOR_MATCHEXPRESSIONS_key {doc 'key is the label key that the selector applies to_'}
                                                            NETWORKPOLICYSPEC_INGRESS_FROM_PODSELECTOR_MATCHEXPRESSIONS_operator {doc 'operator represents a key`s relationship to a set of values_ Valid operators are In, NotIn, Exists and DoesNotExist_'}
                                                                alternative
                                                                    NETWORKPOLICYSPEC_INGRESS_FROM_PODSELECTOR_MATCHEXPRESSIONS_OPERATOR_In
                                                                    NETWORKPOLICYSPEC_INGRESS_FROM_PODSELECTOR_MATCHEXPRESSIONS_OPERATOR_NotIn
                                                                    NETWORKPOLICYSPEC_INGRESS_FROM_PODSELECTOR_MATCHEXPRESSIONS_OPERATOR_Exist
                                                                    NETWORKPOLICYSPEC_INGRESS_FROM_PODSELECTOR_MATCHEXPRESSIONS_OPERATOR_NotExist
                                                            NETWORKPOLICYSPEC_INGRESS_FROM_PODSELECTOR_MATCHEXPRESSIONS_values   {doc 'values is an array of string values_ If the operator is In or NotIn, the values array must be non-empty_ If the operator is Exists or DoesNotExist, the values array must be empty_ This array is replaced during a strategic merge patch_'}
                                                                mandatory   
                                                                    NETWORKPOLICYSPEC_INGRESS_FROM_PODSELECTOR_MATCHEXPRESSIONS_VALUES_value
                                                    NETWORKPOLICYSPEC_INGRESS_FROM_PODSELECTOR_matchLabels   {doc 'matchLabels is a map of {key,value} pairs_ A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value"_ The requirements are ANDed_'}
                                                        mandatory   
                                                            NETWORKPOLICYSPEC_INGRESS_FROM_PODSELECTOR_MATCHLABELS_key
                                                            NETWORKPOLICYSPEC_INGRESS_FROM_PODSELECTOR_MATCHLABELS_value
                                    NETWORKPOLICYSPEC_INGRESS_ports   {doc 'ports is a list of ports which should be made accessible on the pods selected for this rule_ Each item in this list is combined using a logical OR_ If this field is empty or missing, this rule matches all ports (traffic not restricted by port)_ If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list_'}
                                        mandatory  
                                            NETWORKPOLICYSPEC_INGRESS_PORTS_port {doc 'port represents the port on the given protocol_ This can either be a numerical or named port on a pod_ If this field is not provided, this matches all port names and numbers_ If present, only traffic on the specified protocol AND port will be matched_'}
                                            NETWORKPOLICYSPEC_INGRESS_PORTS_protocol {doc 'protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match_ If not specified, this field defaults to TCP_'} 
                                                alternative   
                                                    NETWORKPOLICYSPEC_INGRESS_PORTS_PROTOCOL_TCP {default}
                                                    NETWORKPOLICYSPEC_INGRESS_PORTS_PROTOCOL_UDP
                                                    NETWORKPOLICYSPEC_INGRESS_PORTS_PROTOCOL_SCTP
                                        optional
                                            NETWORKPOLICYSPEC_INGRESS_PORTS_endPort {doc 'endPort indicates that the range of ports from port to endPort if set, inclusive, should be allowed by the policy_ This field cannot be defined if the port field is not defined or if the port field is defined as a named (string) port_ The endPort must be equal or greater than port_'}
                    DaemonSetSpec {doc 'The desired behavior of this daemon set_'}
                        mandatory
                            DAEMONSETSPEC_selector {doc 'A label query over pods that are managed by the daemon set_ Must match in order to be controlled_ It must match the pod template`s labels_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/labels/#label-selectors'}
                                or 
                                    DAEMONSETSPEC_SELECTOR_matchExpressions   {doc 'matchExpressions is a list of label selector requirements_ The requirements are ANDed_'}
                                        mandatory   
                                            DAEMONSETSPEC_SELECTOR_MATCHEXPRESSIONS_key
                                            DAEMONSETSPEC_SELECTOR_MATCHEXPRESSIONS_operator
                                                alternative
                                                    DAEMONSETSPEC_SELECTOR_MATCHEXPRESSIONS_OPERATOR_In
                                                    DAEMONSETSPEC_SELECTOR_MATCHEXPRESSIONS_OPERATOR_NotIn
                                                    DAEMONSETSPEC_SELECTOR_MATCHEXPRESSIONS_OPERATOR_Exist
                                                    DAEMONSETSPEC_SELECTOR_MATCHEXPRESSIONS_OPERATOR_NotExist
                                            DAEMONSETSPEC_SELECTOR_MATCHEXPRESSIONS_values   {doc 'values is an array of string values_ If the operator is In or NotIn, the values array must be non-empty_ If the operator is Exists or DoesNotExist, the values array must be empty_ This array is replaced during a strategic merge patch_'}
                                                mandatory   
                                                    DAEMONSETSPEC_SELECTOR_MATCHEXPRESSIONS_VALUES_value
                                    DAEMONSETSPEC_SELECTOR_matchLabels   {doc 'matchLabels is a map of {key,value} pairs_ A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value"_ The requirements are ANDed_'}
                                        mandatory   
                                            DAEMONSETSPEC_SELECTOR_MATCHLABELS_key
                                            DAEMONSETSPEC_SELECTOR_MATCHLABELS_value
                            DAEMONSETSPEC_template {doc 'An object that describes the pod that will be created_ The DaemonSet will create exactly one copy of this pod on every node that matches the template`s node selector (or on every node if no node selector is specified)_ The only allowed template_spec_restartPolicy value is "Always"_ More info: https://kubernetes_io/docs/concepts/workloads/controllers/replicationcontroller#pod-template'}
                                mandatory   
                                    DAEMONSETSPEC_TEMPLATE_metadataReference {doc 'Reference to metadata object to not duplicate it'}
                                    DAEMONSETSPEC_TEMPLATE_podSpecReference {doc 'Reference to Pod spec object to not duplicate it'}
                        optional
                            DAEMONSETSPEC_minReadySeconds {default 0, doc 'The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available_ Defaults to 0 (pod will be considered available as soon as it is ready)_'}
                            DAEMONSETSPEC_revisionHistoryLimit {default 10, doc 'The number of old history to retain to allow rollback_ This is a pointer to distinguish between explicit zero and not specified_ Defaults to 10_'}
                            DAEMONSETSPEC_updateStrategy {doc 'An update strategy to replace existing DaemonSet pods with new pods_'}
                                mandatory   
                                    DAEMONSETSPEC_UPDATESTRATEGY_type { default 'RollingUpdate', doc 'Type of daemon set update_ Can be "RollingUpdate" or "OnDelete"_ Default is RollingUpdate_'}
                                optional
                                    DAEMONSETSPEC_UPDATESTRATEGY_rollingUpdate {doc 'Rolling update config params_ Present if and only if type is RollingUpdate_'}
                                        mandatory   
                                            DAEMONSETSPEC_UPDATESTRATEGY_ROLLINGUPDATE_maxUnavailable {default 1, doc 'The maximum number of DaemonSet pods that can be unavailable during the update_ Value can be an absolute number (ex: 5) or a percentage of total number of DaemonSet pods at the start of the update (ex: 10%)_ This can not be 0 if MaxSurge is 0_ Defaults to 1_'}
                                            DAEMONSETSPEC_UPDATESTRATEGY_ROLLINGUPDATE_maxSurge {default '0', doc 'he maximum number of nodes with an existing available DaemonSet pod that can have an updated DaemonSet pod during during an update_ Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%)_ This can not be 0 if MaxUnavailable is 0_ Absolute number is calculated from percentage by rounding up to a minimum of 1_ Default value is 0_ Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i_e_ status_desiredNumberScheduled) can have their a new pod created before the old pod is marked as deleted_ The update starts by launching new pods on 30% of nodes_ Once an updated pod is available (Ready for at least minReadySeconds) the old DaemonSet pod on that node is marked deleted_ If the old pod becomes unavailable for any reason (Ready transitions to false, is evicted, or is drained) an updated pod is immediatedly created on that node without considering surge limits_ Allowing surge implies the possibility that the resources consumed by the daemonset on any given node can double if the readiness check fails, and so resource intensive daemonsets should take into account that they may cause evictions during disruption_'}
                    ReplicationControllerSpec {doc 'Spec defines the specification of the desired behavior of the replication controller_'}
                        mandatory  
                            REPLICATIONCONTROLLERSPEC_selector {doc 'Selector is a label query over pods that should match the Replicas count_ If Selector is empty, it is defaulted to the labels present on the Pod template_ Label keys and values that must match in order to be controlled by this replication controller, if empty defaulted to labels on Pod template_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/labels/#label-selectors'} 
                                mandatory
                                    REPLICATIONCONTROLLERSPEC_SELECTOR_matchLabels   {doc 'matchLabels is a map of {key,value} pairs_ A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value"_ The requirements are ANDed_'}
                                        mandatory   
                                            REPLICATIONCONTROLLERSPEC_SELECTOR_MATCHLABELS_key
                                            REPLICATIONCONTROLLERSPEC_SELECTOR_MATCHLABELS_value
                            REPLICATIONCONTROLLERSPEC_template {doc 'Template is the object that describes the pod that will be created if insufficient replicas are detected_ This takes precedence over a TemplateRef_ The only allowed template_spec_restartPolicy value is "Always"_ More info: https://kubernetes_io/docs/concepts/workloads/controllers/replicationcontroller#pod-template'} 
                                mandatory   
                                    REPLICATIONCONTROLLERSPEC_TEMPLATE_metadataReference {doc 'Reference to metadata object to not duplicate it'}
                                    REPLICATIONCONTROLLERSPEC_TEMPLATE_podSpecReference {doc 'Reference to Pod spec object to not duplicate it'}
                        optional
                            REPLICATIONCONTROLLERSPEC_minReadySeconds {default 0, doc 'Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available_ Defaults to 0 (pod will be considered available as soon as it is ready)'} 
                            REPLICATIONCONTROLLERSPEC_replicas {default 1, doc 'Replicas is the number of desired replicas_ This is a pointer to distinguish between explicit zero and unspecified_ Defaults to 1_ More info: https://kubernetes_io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller'} 
                    HorizontalPodAutoscalerSpec {doc 'HorizontalPodAutoscalerSpec is the specification for the behaviour of the autoscaler_'}
                        mandatory 
                            HORIZONTALPODAUTOSCALERSPEC_scaleTargetRef {doc 'scaleTargetRef points to the target resource to scale, and is used to the pods for which metrics should be collected, as well as to actually change the replica count_'}
                                mandatory   
                                    HORIZONTALPODAUTOSCALERSPEC_SCALETARGETREF_apiVersion {doc 'apiVersion is the API version of the referent_'}
                                    HORIZONTALPODAUTOSCALERSPEC_SCALETARGETREF_kind {doc 'kind is the kind of the referent; More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#types-kinds'}
                                    HORIZONTALPODAUTOSCALERSPEC_SCALETARGETREF_name {doc 'name is the name of the referent; More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                            HORIZONTALPODAUTOSCALERSPEC_maxReplicas {doc 'maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up_ It cannot be less that minReplicas_'}
                            HORIZONTALPODAUTOSCALERSPEC_minReplicas {default 1, doc 'minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down_ It defaults to 1 pod_ minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured_ Scaling is active as long as at least one metric value is available_'}
                        optional
                            HORIZONTALPODAUTOSCALERSPEC_metrics    {doc 'metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used)_ The desired replica count is calculated multiplying the ratio between the target value and the current value by the current number of pods_ Ergo, metrics used must decrease as the pod count is increased, and vice-versa_ See the individual metric source types for more information about how each type of metric must respond_ If not set, the default metric will be set to 80% average CPU utilization_'}
                                mandatory   
                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_type {doc 'type is the type of metric source_ It should be one of "ContainerResource", "External", "Object", "Pods" or "Resource", each mapping to a matching field in the object_ Note: "ContainerResource" type is available on when the feature-gate HPAContainerMetrics is enabled'}
                                        alternative   
                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_TYPE_containerResource {doc 'containerResource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing a single container in each pod of the current scale target (e_g_ CPU or memory)_ Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source_ This is an alpha feature and can be enabled by the HPAContainerMetrics feature flag_'}
                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_TYPE_external {doc 'external refers to a global metric that is not associated with any Kubernetes object_ It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster)_'}
                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_TYPE_object {doc 'object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object)_'}
                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_TYPE_pods {doc 'pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second)_ The values will be averaged together before being compared to the target value_'}
                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_TYPE_resource {doc 'resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e_g_ CPU or memory)_ Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source_'}
                                alternative
                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_containerResource {doc 'containerResource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing a single container in each pod of the current scale target (e_g_ CPU or memory)_ Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source_ This is an alpha feature and can be enabled by the HPAContainerMetrics feature flag_'}
                                        mandatory   
                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_CONTAINERRESOURCE_container {doc 'container is the name of the container in the pods of the scaling target'}
                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_CONTAINERRESOURCE_name {doc 'name is the name of the resource in question_'}
                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_CONTAINERRESOURCE_target {doc 'target specifies the target value for the given metric'}
                                                mandatory   
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_CONTAINERRESOURCE_TARGET_type {doc 'ype represents whether the metric type is Utilization, Value, or AverageValue'}
                                                        alternative
                                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_CONTAINERRESOURCE_TARGET_TYPE_AverageValue
                                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_CONTAINERRESOURCE_TARGET_TYPE_Utilization
                                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_CONTAINERRESOURCE_TARGET_TYPE_Value
                                                optional   
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_CONTAINERRESOURCE_TARGET_averageUtilization {doc 'averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods_ Currently only valid for Resource metric source type'}
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_CONTAINERRESOURCE_TARGET_averageValue {doc 'averageValue is the target value of the average of the metric across all relevant pods (as a quantity)'}
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_CONTAINERRESOURCE_TARGET_value {doc 'value is the target value of the metric (as a quantity)_'}
                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_external {doc 'external refers to a global metric that is not associated with any Kubernetes object_ It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster)_'}
                                        mandatory   
                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_EXTERNAL_metric {doc 'metric identifies the target metric by name and selector'}
                                                mandatory   
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_EXTERNAL_name {doc 'name is the name of the given metric'}
                                                optional    
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_EXTERNAL_selector {doc 'selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping_ When unset, just the metricName will be used to gather metrics_'}
                                                        mandatory
                                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_EXTERNAL_SELECTOR_matchlabels    {doc 'matchLabels is a map of {key,value} pairs_ A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value"_ The requirements are ANDed_'}
                                                                mandatory   
                                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_EXTERNAL_SELECTOR_MATCHLABELS_key
                                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_EXTERNAL_SELECTOR_MATCHLABELS_value
                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_EXTERNAL_target {doc 'target specifies the target value for the given metric'}
                                                mandatory   
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_EXTERNAL_TARGET_type {doc 'ype represents whether the metric type is Utilization, Value, or AverageValue'}
                                                        alternative
                                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_EXTERNAL_TARGET_TYPE_AverageValue
                                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_EXTERNAL_TARGET_TYPE_Utilization
                                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_EXTERNAL_TARGET_TYPE_Value
                                                optional   
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_EXTERNAL_TARGET_averageUtilization {doc 'averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods_ Currently only valid for Resource metric source type'}
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_EXTERNAL_TARGET_averageValue {doc 'averageValue is the target value of the average of the metric across all relevant pods (as a quantity)'}
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_EXTERNAL_TARGET_value {doc 'value is the target value of the metric (as a quantity)_'}
                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_object {doc 'object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object)_'}
                                        mandatory   
                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_OBJECT_describedObject {doc 'describedObject specifies the descriptions of a object,such as kind,name apiVersion'}
                                                mandatory   
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_OBJECT_DESCRIBEDOBJECT_kind {doc 'kind is the kind of the referent; More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#types-kinds'}
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_OBJECT_DESCRIBEDOBJECT_name {doc 'name is the name of the referent; More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                                                optional
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_OBJECT_DESCRIBEDOBJECT_apiVersion {doc 'apiVersion is the API version of the referent'}
                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_OBJECT_metric {doc 'metric identifies the target metric by name and selector'}
                                                mandatory   
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_OBJECT_name {doc 'name is the name of the given metric'}
                                                optional    
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_OBJECT_selector {doc 'selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping_ When unset, just the metricName will be used to gather metrics_'}
                                                        mandatory
                                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_OBJECT_SELECTOR_matchlabels   {doc 'matchLabels is a map of {key,value} pairs_ A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value"_ The requirements are ANDed_'}
                                                                mandatory   
                                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_OBJECT_SELECTOR_MATCHLABELS_key
                                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_OBJECT_SELECTOR_MATCHLABELS_value
                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_OBJECT_target {doc 'target specifies the target value for the given metric'}
                                                mandatory   
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_OBJECT_TARGET_type {doc 'ype represents whether the metric type is Utilization, Value, or AverageValue'}
                                                        alternative
                                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_OBJECT_TARGET_TYPE_AverageValue
                                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_OBJECT_TARGET_TYPE_Utilization
                                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_OBJECT_TARGET_TYPE_Value
                                                optional   
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_OBJECT_TARGET_averageUtilization {doc 'averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods_ Currently only valid for Resource metric source type'}
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_OBJECT_TARGET_averageValue {doc 'averageValue is the target value of the average of the metric across all relevant pods (as a quantity)'}
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_OBJECT_TARGET_value {doc 'value is the target value of the metric (as a quantity)_'}
                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_pods {doc 'pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second)_ The values will be averaged together before being compared to the target value_'}
                                        mandatory   
                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_PODS_metric {doc 'metric identifies the target metric by name and selector'}
                                                mandatory   
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_PODS_name {doc 'name is the name of the given metric'}
                                                optional    
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_PODS_selector {doc 'selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping_ When unset, just the metricName will be used to gather metrics_'}
                                                        mandatory
                                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_PODS_SELECTOR_matchlabels   {doc 'matchLabels is a map of {key,value} pairs_ A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value"_ The requirements are ANDed_'}
                                                                mandatory   
                                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_PODS_SELECTOR_MATCHLABELS_key
                                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_PODS_SELECTOR_MATCHLABELS_value
                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_PODS_target {doc 'target specifies the target value for the given metric'}
                                                mandatory   
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_PODS_TARGET_type {doc 'ype represents whether the metric type is Utilization, Value, or AverageValue'}
                                                        alternative
                                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_PODS_TARGET_TYPE_AverageValue
                                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_PODS_TARGET_TYPE_Utilization
                                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_PODS_TARGET_TYPE_Value
                                                optional   
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_PODS_TARGET_averageUtilization {doc 'averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods_ Currently only valid for Resource metric source type'}
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_PODS_TARGET_averageValue {doc 'averageValue is the target value of the average of the metric across all relevant pods (as a quantity)'}
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_PODS_TARGET_value {doc 'value is the target value of the metric (as a quantity)_'}
                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_resource {doc 'resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e_g_ CPU or memory)_ Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source_'}
                                        mandatory
                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_RESOURCE_name {doc 'name is the name of the resource in question_'}
                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_RESOURCE_target {doc 'target specifies the target value for the given metric'}
                                                mandatory   
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_RESOURCE_TARGET_type {doc 'type represents whether the metric type is Utilization, Value, or AverageValue'}
                                                        alternative
                                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_RESOURCE_TARGET_TYPE_AverageValue
                                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_RESOURCE_TARGET_TYPE_Utilization
                                                            HORIZONTALPODAUTOSCALERSPEC_METRICS_RESOURCE_TARGET_TYPE_Value
                                                optional   
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_RESOURCE_TARGET_averageUtilization {doc 'averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods_ Currently only valid for Resource metric source type'}
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_RESOURCE_TARGET_averageValue {doc 'averageValue is the target value of the average of the metric across all relevant pods (as a quantity)'}
                                                    HORIZONTALPODAUTOSCALERSPEC_METRICS_RESOURCE_TARGET_value {doc 'value is the target value of the metric (as a quantity)_'}
                            HORIZONTALPODAUTOSCALERSPEC_behavior {doc 'behavior configures the scaling behavior of the target in both Up and Down directions (scaleUp and scaleDown fields respectively)_ If not set, the default HPAScalingRules for scale up and scale down are used_'}
                                or   
                                    HORIZONTALPODAUTOSCALERSPEC_BEHAVIOR_scaleDown {doc 'scaleDown is scaling policy for scaling Down_ If not set, the default value is to allow to scale down to minReplicas pods, with a 300 second stabilization window (i_e_, the highest recommendation for the last 300sec is used)_'}
                                        mandatory 
                                            HORIZONTALPODAUTOSCALERSPEC_BEHAVIOR_SCALEDOWN_policies   {doc 'policies is a list of potential scaling polices which can be used during scaling_ At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid'}
                                                mandatory   
                                                    HORIZONTALPODAUTOSCALERSPEC_BEHAVIOR_SCALEDOWN_POLICIES_periodSeconds {doc 'periodSeconds specifies the window of time for which the policy should hold true_ PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min)_'}
                                                    HORIZONTALPODAUTOSCALERSPEC_BEHAVIOR_SCALEDOWN_POLICIES_type {doc 'type is used to specify the scaling policy_'}
                                                    HORIZONTALPODAUTOSCALERSPEC_BEHAVIOR_SCALEDOWN_POLICIES_value {doc 'value contains the amount of change which is permitted by the policy_ It must be greater than zero'}
                                        optional   
                                            HORIZONTALPODAUTOSCALERSPEC_BEHAVIOR_SCALEDOWN_selectPolicy {doc 'selectPolicy is used to specify which policy should be used_ If not set, the default value Max is used_'}
                                            HORIZONTALPODAUTOSCALERSPEC_BEHAVIOR_SCALEDOWN_stabilizationWindowSeconds {default 300, doc 'stabilizationWindowSeconds is the number of seconds for which past recommendations should be considered while scaling up or scaling down_ StabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour)_ If not set, use the default values: - For scale up: 0 (i_e_ no stabilization is done)_ - For scale down: 300 (i_e_ the stabilization window is 300 seconds long)_'}
                                    HORIZONTALPODAUTOSCALERSPEC_BEHAVIOR_scaleUp {doc 'scaleUp is scaling policy for scaling Up_ If not set, the default value is the higher of: * increase no more than 4 pods per 60 seconds * double the number of pods per 60 seconds No stabilization is used_'}
                                        mandatory 
                                            HORIZONTALPODAUTOSCALERSPEC_BEHAVIOR_SCALEUP_policies   {doc 'policies is a list of potential scaling polices which can be used during scaling_ At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid'}
                                                mandatory   
                                                    HORIZONTALPODAUTOSCALERSPEC_BEHAVIOR_SCALEUP_POLICIES_periodSeconds {doc 'periodSeconds specifies the window of time for which the policy should hold true_ PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min)_'}
                                                    HORIZONTALPODAUTOSCALERSPEC_BEHAVIOR_SCALEUP_POLICIES_type {doc 'type is used to specify the scaling policy_'}
                                                    HORIZONTALPODAUTOSCALERSPEC_BEHAVIOR_SCALEUP_POLICIES_value {doc 'value contains the amount of change which is permitted by the policy_ It must be greater than zero'}
                                        optional   
                                            HORIZONTALPODAUTOSCALERSPEC_BEHAVIOR_SCALEUP_selectPolicy {doc 'selectPolicy is used to specify which policy should be used_ If not set, the default value Max is used_'}
                                            HORIZONTALPODAUTOSCALERSPEC_BEHAVIOR_SCALEUP_stabilizationWindowSeconds {default 0, doc 'stabilizationWindowSeconds is the number of seconds for which past recommendations should be considered while scaling up or scaling down_ StabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour)_ If not set, use the default values: - For scale up: 0 (i_e_ no stabilization is done)_ - For scale down: 300 (i_e_ the stabilization window is 300 seconds long)_'}
                    ReplicaSetSpec {doc 'Spec defines the specification of the desired behavior of the ReplicaSet_'}
                        mandatory
                            REPLICASETSPEC_replicas {default 1, doc 'Replicas is the number of desired replicas_ This is a pointer to distinguish between explicit zero and unspecified_ Defaults to 1_ More info: https://kubernetes_io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller'}
                            REPLICASETSPEC_selector {doc 'Selector is a label query over pods that should match the replica count_ Label keys and values that must match in order to be controlled by this replica set_ It must match the pod template`s labels_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/labels/#label-selectors'}
                                or   
                                    REPLICASETSPEC_SELECTOR_matchExpressions    {doc 'matchExpressions is a list of label selector requirements_ The requirements are ANDed_'}
                                        mandatory   
                                            REPLICASETSPEC_SELECTOR_MATCHEXPRESSIONS_key {doc 'key is the label key that the selector applies to_'}
                                            REPLICASETSPEC_SELECTOR_MATCHEXPRESSIONS_operator {doc 'operator represents a key`s relationship to a set of values_ Valid operators are In, NotIn, Exists and DoesNotExist_'}
                                                alternative
                                                    REPLICASETSPEC_SELECTOR_MATCHEXPRESSIONS_OPERATOR_In
                                                    REPLICASETSPEC_SELECTOR_MATCHEXPRESSIONS_OPERATOR_NotIn
                                                    REPLICASETSPEC_SELECTOR_MATCHEXPRESSIONS_OPERATOR_Exist
                                                    REPLICASETSPEC_SELECTOR_MATCHEXPRESSIONS_OPERATOR_NotExist
                                            REPLICASETSPEC_SELECTOR_MATCHEXPRESSIONS_values   {doc 'values is an array of string values_ If the operator is In or NotIn, the values array must be non-empty_ If the operator is Exists or DoesNotExist, the values array must be empty_ This array is replaced during a strategic merge patch_'}
                                                mandatory   
                                                    REPLICASETSPEC_SELECTOR_MATCHEXPRESSIONS_VALUES_value
                                    REPLICASETSPEC_SELECTOR_matchLabels    {doc 'matchLabels is a map of {key,value} pairs_ A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value"_ The requirements are ANDed_'}
                                        mandatory   
                                            REPLICASETSPEC_SELECTOR_MATCHLABELS_key
                                            REPLICASETSPEC_SELECTOR_MATCHLABELS_value
                        optional   
                            REPLICASETSPEC_minReadySeconds {default 0, doc 'Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available_ Defaults to 0 (pod will be considered available as soon as it is ready)'}
                            REPLICASETSPEC_template {doc 'Template is the object that describes the pod that will be created if insufficient replicas are detected_ More info: https://kubernetes_io/docs/concepts/workloads/controllers/replicationcontroller#pod-template'}
                                mandatory   
                                    REPLICASETSPEC_TEMPLATE_metadataReference {doc 'Reference to metadata object to not duplicate it'}
                                    REPLICASETSPEC_TEMPLATE_podSpecReference {doc 'Reference to Pod spec object to not duplicate it'}
                    PodDisruptionBudgetSpec {doc 'Specification of the desired behavior of the PodDisruptionBudget_'}
                        mandatory   
                            PODDISRUPTIONBUDGETSPEC_unhealthyPodEvictionPolicy {doc 'UnhealthyPodEvictionPolicy defines the criteria for when unhealthy pods should be considered for eviction_ Current implementation considers healthy pods, as pods that have status_conditions item with type="Ready",status="True"_ Valid policies are IfHealthyBudget and AlwaysAllow_ If no policy is specified, the default behavior will be used, which corresponds to the IfHealthyBudget policy_ IfHealthyBudget policy means that running pods (status_phase="Running"), but not yet healthy can be evicted only if the guarded application is not disrupted (status_currentHealthy is at least equal to status_desiredHealthy)_ Healthy pods will be subject to the PDB for eviction_ AlwaysAllow policy means that all running pods (status_phase="Running"), but not yet healthy are considered disrupted and can be evicted regardless of whether the criteria in a PDB is met_ This means perspective running pods of a disrupted application might not get a chance to become healthy_ Healthy pods will be subject to the PDB for eviction_ Additional policies may be added in the future_ Clients making eviction decisions should disallow eviction of unhealthy pods if they encounter an unrecognized policy in this field_ This field is beta-level_ The eviction API uses this field when the feature gate PDBUnhealthyPodEvictionPolicy is enabled (enabled by default)_'}
                                alternative
                                    PODDISRUPTIONBUDGETSPEC_UNHEALTHYPODEVICTIONPOLICY_IfHealthyBudget 
                                    PODDISRUPTIONBUDGETSPEC_UNHEALTHYPODEVICTIONPOLICY_AlwaysAllow 
                        alternative   
                            PODDISRUPTIONBUDGETSPEC_maxUnavailable {doc 'An eviction is allowed if at most "maxUnavailable" pods selected by "selector" are unavailable after the eviction, i_e_ even in absence of the evicted pod_ For example, one can prevent all voluntary evictions by specifying 0_ This is a mutually exclusive setting with "minAvailable"_'}
                            PODDISRUPTIONBUDGETSPEC_minAvailable {doc 'An eviction is allowed if at least "minAvailable" pods selected by "selector" will still be available after the eviction, i_e_ even in the absence of the evicted pod_ So for example you can prevent all voluntary evictions by specifying "100%"_'}
                        optional
                            PODDISRUPTIONBUDGETSPEC_selector {doc 'Label query over pods whose evictions are managed by the disruption budget_ A null selector will match no pods, while an empty selector will select all pods within the namespace_'}
                                or
                                    PODDISRUPTIONBUDGETSPEC_SELECTOR_matchExpressions    {doc 'matchExpressions is a list of label selector requirements_ The requirements are ANDed_'}
                                        mandatory   
                                            PODDISRUPTIONBUDGETSPEC_SELECTOR_MATCHEXPRESSIONS_key {doc 'key is the label key that the selector applies to_'}
                                            PODDISRUPTIONBUDGETSPEC_SELECTOR_MATCHEXPRESSIONS_operator {doc 'operator represents a key`s relationship to a set of values_ Valid operators are In, NotIn, Exists and DoesNotExist_'}
                                                alternative
                                                    PODDISRUPTIONBUDGETSPEC_SELECTOR_MATCHEXPRESSIONS_OPERATOR_In
                                                    PODDISRUPTIONBUDGETSPEC_SELECTOR_MATCHEXPRESSIONS_OPERATOR_NotIn
                                                    PODDISRUPTIONBUDGETSPEC_SELECTOR_MATCHEXPRESSIONS_OPERATOR_Exist
                                                    PODDISRUPTIONBUDGETSPEC_SELECTOR_MATCHEXPRESSIONS_OPERATOR_DoesNotExist
                                            PODDISRUPTIONBUDGETSPEC_SELECTOR_MATCHEXPRESSIONS_values   {doc 'values is an array of string values_ If the operator is In or NotIn, the values array must be non-empty_ If the operator is Exists or DoesNotExist, the values array must be empty_ This array is replaced during a strategic merge patch_'}
                                                mandatory   
                                                    PODDISRUPTIONBUDGETSPEC_SELECTOR_MATCHEXPRESSIONS_VALUES_value   
                                    PODDISRUPTIONBUDGETSPEC_SELECTOR_matchLabels   {doc 'matchLabels is a map of {key,value} pairs_ A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value"_ The requirements are ANDed_'}
                                        mandatory   
                                            PODDISRUPTIONBUDGETSPEC_SELECTOR_MATCHLABELS_key
                                            PODDISRUPTIONBUDGETSPEC_SELECTOR_MATCHLABELS_value
                    ResourceQuotaSpec {doc 'Spec defines the desired quota_'}
                        mandatory  
                            RESOURCEQUOTASPEC_hard  {doc 'hard is the set of desired hard limits for each named resource_ More info: https://kubernetes_io/docs/concepts/policy/resource-quotas/'}
                                or   
                                    RESOURCEQUOTASPEC_HARD_cpu 
                                    RESOURCEQUOTASPEC_HARD_memory 
                                    RESOURCEQUOTASPEC_HARD_pods     
                        optional
                            RESOURCEQUOTASPEC_scopeSelector {doc 'scopeSelector is also a collection of filters like scopes that must match each object tracked by a quota but expressed using ScopeSelectorOperator in combination with possible values_ For a resource to match, both scopes AND scopeSelector (if specified in spec), must be matched_'}
                                mandatory   
                                    RESOURCEQUOTASPEC_SCOPESELECTOR_matchExpressions   {doc 'matchExpressions is a list of scope selector requirements_ The requirements are ANDed_'}
                                        mandatory   
                                            RESOURCEQUOTASPEC_SCOPESELECTOR_MATCHEXPRESSIONS_scopeName {doc 'The name of the scope that the selector applies to_'}
                                            RESOURCEQUOTASPEC_SCOPESELECTOR_MATCHEXPRESSIONS_operator {doc 'Represents a scope`s relationship to a set of values_ Valid operators are In, NotIn, Exists, DoesNotExist_'}
                                                alternative
                                                    RESOURCEQUOTASPEC_SCOPESELECTOR_MATCHEXPRESSIONS_OPERATOR_In
                                                    RESOURCEQUOTASPEC_SCOPESELECTOR_MATCHEXPRESSIONS_OPERATOR_NotIn
                                                    RESOURCEQUOTASPEC_SCOPESELECTOR_MATCHEXPRESSIONS_OPERATOR_Exist
                                                    RESOURCEQUOTASPEC_SCOPESELECTOR_MATCHEXPRESSIONS_OPERATOR_DoesNotExist
                                            RESOURCEQUOTASPEC_SCOPESELECTOR_MATCHEXPRESSIONS_values   {doc 'An array of string values_ If the operator is In or NotIn, the values array must be non-empty_ If the operator is Exists or DoesNotExist, the values array must be empty_ This array is replaced during a strategic merge patch_'}
                                                mandatory   
                                                    RESOURCEQUOTASPEC_SCOPESELECTOR_MATCHEXPRESSIONS_VALUES_value
                            RESOURCEQUOTASPEC_scopes   {doc 'A collection of filters that must match each object tracked by a quota_ If not specified, the quota matches all objects_'}
                                mandatory   
                                    RESOURCEQUOTASPEC_SCOPES_scope
                    IngressClassSpec {doc 'spec is the desired state of the IngressClass_'}
                        mandatory   
                            INGRESSCLASSSPEC_controller {doc 'controller refers to the name of the controller that should handle this class_ This allows for different "flavors" that are controlled by the same controller_ For example, you may have different parameters for the same implementing controller_ This should be specified as a domain-prefixed path no more than 250 characters in length, e_g_ "acme_io/ingress-controller"_ This field is immutable_'}
                        optional
                            INGRESSCLASSSPEC_parameters {doc 'parameters is a link to a custom resource containing additional configuration for the controller_ This is optional if the controller does not require extra parameters_'}
                                mandatory   
                                    INGRESSCLASSSPEC_PARAMETERS_kind {doc 'kind is the type of resource being referenced_'}
                                    INGRESSCLASSSPEC_PARAMETERS_name {doc 'name is the name of resource being referenced_'}
                                    INGRESSCLASSSPEC_PARAMETERS_scope {doc 'scope represents if this refers to a cluster or namespace scoped resource_ This may be set to "Cluster" (default) or "Namespace"_'}
                                        alternative   
                                            INGRESSCLASSSPEC_PARAMETERS_SCOPE_Cluster {default}
                                            INGRESSCLASSSPEC_PARAMETERS_SCOPE_Namespace
                                optional   
                                    INGRESSCLASSSPEC_PARAMETERS_namespace {doc 'namespace is the namespace of the resource being referenced_ This field is required when scope is set to "Namespace" and must be unset when scope is set to "Cluster"_'}
                                    INGRESSCLASSSPEC_PARAMETERS_apiGroup {doc 'apiGroup is the group for the resource being referenced_ If APIGroup is not specified, the specified Kind must be in the core API group_ For any other third-party types, APIGroup is required_'}
                    APIServiceSpec {doc 'Spec contains information for locating and communicating with a server'}
                        mandatory 
                            APISERVICESPEC_groupPriorityMinimum {doc 'GroupPriorityMinimum is the priority this group should have at least_ Higher priority means that the group is preferred by clients over lower priority ones_ Note that other versions of this group might specify even higher GroupPriorityMinimum values such that the whole group gets a higher priority_ The primary sort is based on GroupPriorityMinimum, ordered highest number to lowest (20 before 10)_ The secondary sort is based on the alphabetical comparison of the name of the object_ (v1_bar before v1_foo) We`d recommend something like: *_k8s_io (except extensions) at 18000 and PaaSes (OpenShift, Deis) are recommended to be in the 2000s'}
                            APISERVICESPEC_versionPriority {doc 'VersionPriority controls the ordering of this API version inside of its group_ Must be greater than zero_ The primary sort is based on VersionPriority, ordered highest to lowest (20 before 10)_ Since it`s inside of a group, the number can be small, probably in the 10s_ In case of equal version priorities, the version string will be used to compute the order inside a group_ If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered lexicographically_ "Kube-like" versions start with a "v", then are followed by a number (the major version), then optionally the string "alpha" or "beta" and another number (the minor version)_ These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version_ An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10_'}
                        optional   
                            APISERVICESPEC_caBundle {doc 'CABundle is a PEM encoded CA bundle which will be used to validate an API server`s serving certificate_ If unspecified, system trust roots on the apiserver are used_'}
                            APISERVICESPEC_group {doc 'Group is the API group name this server hosts'}
                            APISERVICESPEC_insecureSkipTLSVerify {doc 'InsecureSkipTLSVerify disables TLS certificate verification when communicating with this server_ This is strongly discouraged_ You should use the CABundle instead_'}
                            APISERVICESPEC_service {doc 'Service is a reference to the service for this API server_ It must communicate on port 443_ If the Service is nil, that means the handling for the API groupversion is handled locally on this server_ The call will simply delegate to the normal handler chain to be fulfilled_'}
                                mandatory
                                    APISERVICESPEC_SERVICE_name {doc 'Name is the name of the service'}
                                    APISERVICESPEC_SERVICE_namespace {doc 'Namespace is the namespace of the service'} 
                                    APISERVICESPEC_SERVICE_port {default 443, doc 'If specified, the port on the service that hosting webhook_ Default to 443 for backward compatibility_ `port` should be a valid port number (1-65535, inclusive)_'}   
                            APISERVICESPEC_version {doc 'Version is the API version this server hosts_ For example, "v1"'}
            binaryData   {doc 'BinaryData contains the binary data_ Each key must consist of alphanumeric characters, "-", "_" or "_"_ BinaryData can contain byte sequences that are not in the UTF-8 range_ The keys stored in BinaryData must not overlap with the ones in the Data field, this is enforced during validation process_ Using this field will require 1_10+ apiserver and kubelet_'}
                mandatory
                    BINARYDATA_binaryFile_name
                    BINARYDATA_binaryFile_value
            data   {doc 'Data contains the configuration data_ Each key must consist of alphanumeric characters, "-", "_" or "_"_ Values with non-UTF-8 byte sequences must use the BinaryData field_ The keys stored in Data must not overlap with the keys in the BinaryData field, this is enforced during validation process_'}
                optional   
                    DATA_confSimple {abstract}
                        mandatory
                            CONFSIMPLE_key
                            CONFSIMPLE_value
                    DATA_confFile {abstract}
                        mandatory   
                            CONFFILE_name {doc 'name of configuration file'}
                            CONFFILE_value {doc 'content of the file'}
            immutable {doc 'Immutable, if set to true, ensures that data stored in the ConfigMap cannot be updated (only object metadata can be modified)_ If not set to true, the field can be modified at any time_ Defaulted to nil_'}
                mandatory   
                    IMMUTABLE_boolean
            subsets {doc 'The set of all endpoints is the union of all subsets_ Addresses are placed into subsets according to the IPs they share_ A single address with multiple ports, some of which are ready and some of which are not (because they come from different containers) will result in the address being displayed in different subsets for the different ports_ No address will appear in both Addresses and NotReadyAddresses in the same subset_ Sets of addresses and ports that comprise a service_'}
                optional
                    SUBSETS_addresses {doc 'IP addresses which offer the related ports that are marked as ready_ These endpoints should be considered safe for load balancers and clients to utilize_'}
                        mandatory
                            ADDRESSES_ip {doc 'The IP of this endpoint_ May not be loopback (127_0_0_0/8 or ::1), link-local (169_254_0_0/16 or fe80::/10), or link-local multicast (224_0_0_0/24 or ff02::/16)_'}
                        optional
                            ADDRESSES_hostname {doc 'The Hostname of this endpoint'}
                            ADDRESSES_nodename {doc 'Optional: Node hosting this endpoint_ This can be used to determine endpoints local to a node_'}
                            ADDRESSES_targetRef {doc 'Reference to object providing the endpoint_'}
                                optional
                                    ADDRESSES_TARGETREF_apiVersion {doc 'API version of the referent_'}
                                    ADDRESSES_TARGETREF_fieldPath {doc 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState_manifest_containers[2]_ For example, if the object reference is to a container within a pod, this would take on a value like: "spec_containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec_containers[2]" (container with index 2 in this pod)_ This syntax is chosen only to have some well-defined way of referencing a part of an object_'}
                                    ADDRESSES_TARGETREF_kind {doc 'Kind of the referent_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#types-kinds'}
                                    ADDRESSES_TARGETREF_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                                    ADDRESSES_TARGETREF_namespace {doc 'Namespace of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/namespaces/'}
                                    ADDRESSES_TARGETREF_resourceVersion {doc 'Specific resourceVersion to which this reference is made, if any_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#concurrency-control-and-consistency'}
                                    ADDRESSES_TARGETREF_uid {doc 'UID of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#uids'}
                    SUBSETS_notReadyAddresses {doc 'IP addresses which offer the related ports but are not currently marked as ready because they have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check_'}
                        mandatory
                                NOTREADYADDRESSES_ip {doc 'The IP of this endpoint_ May not be loopback (127_0_0_0/8 or ::1), link-local (169_254_0_0/16 or fe80::/10), or link-local multicast (224_0_0_0/24 or ff02::/16)_'}
                            optional
                                NOTREADYADDRESSES_hostname {doc 'The Hostname of this endpoint'}
                                NOTREADYADDRESSES_nodename {doc 'Optional: Node hosting this endpoint_ This can be used to determine endpoints local to a node_'}
                                NOTREADYADDRESSES_targetRef {doc 'Reference to object providing the endpoint_'}
                                    optional
                                        NOTREADYADDRESSES_TARGETREF_apiVersion {doc 'API version of the referent_'}
                                        NOTREADYADDRESSES_TARGETREF_fieldPath {doc 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState_manifest_containers[2]_ For example, if the object reference is to a container within a pod, this would take on a value like: "spec_containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec_containers[2]" (container with index 2 in this pod)_ This syntax is chosen only to have some well-defined way of referencing a part of an object_'}
                                        NOTREADYADDRESSES_TARGETREF_kind {doc 'Kind of the referent_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#types-kinds'}
                                        NOTREADYADDRESSES_TARGETREF_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                                        NOTREADYADDRESSES_TARGETREF_namespace {doc 'Namespace of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/namespaces/'}
                                        NOTREADYADDRESSES_TARGETREF_resourceVersion {doc 'Specific resourceVersion to which this reference is made, if any_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#concurrency-control-and-consistency'}
                                        NOTREADYADDRESSES_TARGETREF_uid {doc 'UID of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#uids'}
                    SUBSETS_ports {doc 'Port numbers available on the related IP addresses_'}
                        mandatory   
                            SUBSETS_PORTS_port {doc 'The port number of the endpoint_'}
                        optional   
                            SUBSETS_PORTS_appProtocol {doc 'The application protocol for this port_ This is used as a hint for implementations to offer richer behavior for protocols that they understand_ This field follows standard Kubernetes label syntax_ Valid values are either: * Un-prefixed protocol names - reserved for IANA standard service names (as per RFC-6335 and https://www_iana_org/assignments/service-names)_ * Kubernetes-defined prefixed names: * "kubernetes_io/h2c" - HTTP/2 prior knowledge over cleartext as described in https://www_rfc-editor_org/rfc/rfc9113_html#name-starting-http-2-with-prior- * "kubernetes_io/ws" - WebSocket over cleartext as described in https://www_rfc-editor_org/rfc/rfc6455 * "kubernetes_io/wss" - WebSocket over TLS as described in https://www_rfc-editor_org/rfc/rfc6455 * Other protocols should use implementation-defined prefixed names such as mycompany_com/my-custom-protocol_'}
                            SUBSETS_PORTS_name {doc 'The name of this port_ This must match the "name" field in the corresponding ServicePort_ Must be a DNS_LABEL_ Optional only if one port is defined_'}
                            SUBSETS_PORTS_protocol {doc 'The IP protocol for this port_ Must be UDP, TCP, or SCTP_ Default is TCP_'}
                                alternative  
                                    SUBSETS_PORTS_UDP 
                                    SUBSETS_PORTS_TCP {default}
                                    SUBSETS_PORTS_SCTP
            rules   {doc 'Rules holds all the PolicyRules for this Role'} 
                mandatory
                    RULES_apiGroups   {doc 'APIGroups is the name of the APIGroup that contains the resources_ If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed_ "" represents the core API group and "*" represents all API groups_'}
                        mandatory
                            RULES_APIGROUPS_value
                optional   
                    RULES_nonResourceURLs   {doc 'NonResourceURLs is a set of partial urls that a user should have access to_ *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding_ Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"), but not both_'}
                        mandatory
                            RULES_NONRESOURCEURLS_value
                    RULES_resourceNames   {doc 'ResourceNames is an optional white list of names that the rule applies to_ An empty set means that everything is allowed_'}
                        mandatory
                            RULES_RESOURCENAMES_value
                    RULES_resources   {doc 'Resources is a list of resources this rule applies to_'}
                        mandatory
                            RULES_RESOURCES_value
                    RULES_verbs   {doc 'Verbs is a list of Verbs that apply to ALL the ResourceKinds contained in this rule_'}
                        mandatory
                            RULES_VERBS_value
            type {doc 'Used to facilitate programmatic handling of secret data_ More info: https://kubernetes_io/docs/concepts/configuration/secret/#secret-types'}
            stringData    {doc 'stringData allows specifying non-binary secret data in string form_ It is provided as a write-only input field for convenience_ All keys and values are merged into the data field on write, overwriting any existing values_ The stringData field is never output when reading from the API_'}
                mandatory   
                    STRINGDATA_key
                    STRINGDATA_value
            aggregationRule {doc 'AggregationRule is an optional field that describes how to build the Rules for this ClusterRole_ If AggregationRule is set, then the Rules are controller managed and direct changes to Rules will be stomped by the controller_'}
                mandatory 
                    AGGREGATIONRULE_clusterRoleSelectors {doc 'ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules_ If any of the selectors match, then the ClusterRole`s permissions will be added'}
                        alternative
                            CLUSTERROLESELECTORS_matchExpressions   {doc 'matchExpressions is a list of label selector requirements_ The requirements are ANDed_'}
                                mandatory
                                    CLUSTERROLESELECTORS_MATCHEXPRESSIONS_key {doc 'key is the label key that the selector applies to_'}
                                    CLUSTERROLESELECTORS_MATCHEXPRESSIONS_operator {doc 'operator represents a key`s relationship to a set of values_ Valid operators are In, NotIn, Exists and DoesNotExist_'}
                                        alternative   
                                            CLUSTERROLESELECTORS_MATCHEXPRESSIONS_In
                                            CLUSTERROLESELECTORS_MATCHEXPRESSIONS_NotIn
                                            CLUSTERROLESELECTORS_MATCHEXPRESSIONS_Exists
                                            CLUSTERROLESELECTORS_MATCHEXPRESSIONS_DoesNotExist
                                    CLUSTERROLESELECTORS_MATCHEXPRESSIONS_values   {doc 'values is an array of string values_ If the operator is In or NotIn, the values array must be non-empty_ If the operator is Exists or DoesNotExist, the values array must be empty_ This array is replaced during a strategic merge patch_'}
                                        mandatory
                                            CLUSTERROLESELECTORS_MATCHEXPRESSIONS_VALUES_value
                            CLUSTERROLESELECTORS_matchLabels   {doc 'matchLabels is a map of {key,value} pairs_ A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value"_ The requirements are ANDed_'}
                                mandatory
                                    CLUSTERROLESELECTORS_MATCHLABELS_key
                                    CLUSTERROLESELECTORS_MATCHLABELS_value
            subjects   {doc 'Subjects holds references to the objects the role applies to_'}
                mandatory   
                    SUBJECTS_kind {doc 'Kind of object being referenced_ Values defined by this API group are "User", "Group", and "ServiceAccount"_ If the Authorizer does not recognized the kind value, the Authorizer should report an error_'}
                        alternative
                            SUBJECTS_KIND_User
                            SUBJECTS_KIND_Group
                            SUBJECTS_KIND_ServiceAccount
                    SUBJECTS_name {doc 'Name of the object being referenced_'}
                optional   
                    SUBJECTS_apiGroup {doc 'APIGroup holds the API group of the referenced subject_ Defaults to "" for ServiceAccount subjects_ Defaults to "rbac_authorization_k8s_io" for User and Group subjects_'}
                    SUBJECTS_namespace {doc 'Namespace of the referenced object_ If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error_'}
            roleRef {doc 'RoleRef can only reference a ClusterRole in the global namespace_ If the RoleRef cannot be resolved, the Authorizer must return an error_ This field is immutable_'}
                mandatory   
                    ROLEREF_apiGroup {doc 'APIGroup is the group for the resource being referenced'}
                    ROLEREF_kind {doc 'Kind is the type of resource being referenced'}
                    ROLEREF_name {doc 'Name is the name of resource being referenced'}
            automountServiceAccountToken {doc 'AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted_ Can be overridden at the pod level_'}
            imagePullSecrets   {doc 'ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount_ ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet_ More info: https://kubernetes_io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod'}
                mandatory   
                    IMAGEPULLSECRETS_name {doc 'Name of the referent_ '}
            secrets   {doc 'Secrets is a list of the secrets in the same namespace that pods running using this ServiceAccount are allowed to use_ Pods are only limited to this list if this service account has a "kubernetes_io/enforce-mountable-secrets" annotation set to "true"_ This field should not be used to find auto-generated service account token secrets for use outside of pods_ Instead, tokens can be requested directly using the TokenRequest API, or service account token secrets can be manually created_ More info: https://kubernetes_io/docs/concepts/configuration/secret'} 
                mandatory
                    SECRETS_name {doc 'Name of the referent_ '}
            allowVolumeExpansion {doc 'allowVolumeExpansion shows whether the storage class allow volume expand_'}
            allowedTopologies   {doc 'allowedTopologies restrict the node topologies where volumes can be dynamically provisioned_ Each volume plugin defines its own supported topology specifications_ An empty TopologySelectorTerm list means there is no topology restriction_ This field is only honored by servers that enable the VolumeScheduling feature_'}
                mandatory   
                    ALLOWEDTOPOLOGIES_matchLabelExpressions   {doc 'A list of topology selector requirements by labels_'}
                        mandatory   
                            ALLOWEDTOPOLOGIES_MATCHLABELEXPRESSIONS_key {doc 'The label key that the selector applies to_'}
                            ALLOWEDTOPOLOGIES_MATCHLABELEXPRESSIONS_values    {doc 'An array of string values_ One value must match the label to be selected_ Each entry in Values is ORed_'}
                                mandatory   
                                    ALLOWEDTOPOLOGIES_MATCHLABELEXPRESSIONS_VALUES_value
            mountOptions   {doc 'mountOptions controls the mountOptions for dynamically provisioned PersistentVolumes of this storage class_ e_g_ ["ro", "soft"]_ Not validated - mount of the PVs will simply fail if one is invalid_'}
                mandatory   
                    MOUNTOPTIONS_value
            parameters    {doc 'parameters holds the parameters for the provisioner that should create volumes of this storage class_'}
                mandatory   
                    PARAMETERS_key
                    PARAMETERS_value
            provisioner {doc 'provisioner indicates the type of the provisioner_'}
            reclaimPolicy {default 'Delete', doc 'reclaimPolicy controls the reclaimPolicy for dynamically provisioned PersistentVolumes of this storage class_ Defaults to Delete_'}
            volumeBindingMode {doc 'volumeBindingMode indicates how PersistentVolumeClaims should be provisioned and bound_ When unset, VolumeBindingImmediate is used_ This field is only honored by servers that enable the VolumeScheduling feature_'}
            webhooks   {doc 'Webhooks is a list of webhooks and the affected resources and operations_'}
                mandatory   
                    WEBHOOKS_name {doc 'The name of the admission webhook_ Name should be fully qualified, e_g_, imagepolicy_kubernetes_io, where "imagepolicy" is the name of the webhook, and kubernetes_io is the name of the organization_ Required_'}
                    WEBHOOKS_clientConfig {doc 'ClientConfig defines how to communicate with the hook_ Required'}
                        alternative   
                            WEBHOOKS_CLIENTCONFIG_service {doc '`service` is a reference to the service for this webhook_ Either `service` or `url` must be specified_ If the webhook is running within the cluster, then you should use `service`_'} 
                                mandatory   
                                    WEBHOOKS_CLIENTCONFIG_SERVICE_name {doc '`name` is the name of the service_ Required'}
                                    WEBHOOKS_CLIENTCONFIG_SERVICE_namespace {doc '`namespace` is the namespace of the service_ Required'}
                                optional
                                    WEBHOOKS_CLIENTCONFIG_SERVICE_path {doc '`path` is an optional URL path which will be sent in any request to this service_'}
                                    WEBHOOKS_CLIENTCONFIG_SERVICE_port {default 443, doc 'If specified, the port on the service that hosting webhook_ Default to 443 for backward compatibility_ `port` should be a valid port number (1-65535, inclusive)_'}
                            WEBHOOKS_CLIENTCONFIG_url {doc '`url` gives the location of the webhook, in standard URL form (`scheme://host:port/path`)_ Exactly one of `url` or `service` must be specified_ The `host` should not refer to a service running in the cluster; use the `service` field instead_ The host might be resolved via external DNS in some apiservers (e_g_, `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation)_ `host` may also be an IP address_ Please note that using `localhost` or `127_0_0_1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook_ Such installs are likely to be non-portable, i_e_, not easy to turn up in a new cluster_ The scheme must be "https"; the URL must begin with "https://"_ A path is optional, and if present may be any string permissible in a URL_ You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier_ Attempting to use a user or basic auth e_g_ "user:password@" is not allowed_ Fragments ("#___") and query parameters ("?___") are not allowed, either_'}
                        optional
                            WEBHOOKS_CLIENTCONFIG_caBundle {doc '`caBundle` is a PEM encoded CA bundle which will be used to validate the webhook`s server certificate_ If unspecified, system trust roots on the apiserver are used_'}
                    WEBHOOKS_admissionReviewVersions    {doc 'AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects_ API server will try to use first version in the list which it supports_ If none of the versions specified in this list supported by API server, validation will fail for this object_ If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy_'}
                        mandatory   
                            WEBHOOKS_ADMISSIONREVIEWVERSIONS_value
                    WEBHOOKS_sideEffects {doc 'SideEffects states whether this webhook has side effects_ Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown)_ Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission chain and the side effects therefore need to be undone_ Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some_'}
                        alternative
                            WEBHOOKS_SIDEEFFECTS_None {default}
                            WEBHOOKS_SIDEEFFECTS_NoneOnDryRun
                            WEBHOOKS_SIDEEFFECTS_Some
                            WEBHOOKS_SIDEEFFECTS_Unknown
                optional
                    WEBHOOKS_failurePolicy {doc 'FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail_ Defaults to Fail_'}
                        alternative   
                            WEBHOOKS_FAILUREPOLICY_Ignore
                            WEBHOOKS_FAILUREPOLICY_Fail {default}
                    WEBHOOKS_rules    {doc 'Rules describes what operations on what resources/subresources the webhook cares about_ The webhook cares about an operation if it matches _any_ Rule_ However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects_'}
                        mandatory   
                            WEBHOOKS_RULES_apigroups   {doc 'APIGroups is the API groups the resources belong to_ `*` is all groups_ If `*` is present, the length of the slice must be one_ Required_'}
                                mandatory   
                                    WEBHOOKS_RULES_APIGROUPS_value 
                            WEBHOOKS_RULES_apiVersions   {doc 'APIVersions is the API versions the resources belong to_ `*` is all versions_ If `*` is present, the length of the slice must be one_ Required_'}
                                mandatory   
                                    WEBHOOKS_RULES_APIVERSIONS_value
                            WEBHOOKS_RULES_operations   {doc 'Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations and any future admission operations that are added_ If `*` is present, the length of the slice must be one_ Required_'}
                                mandatory   
                                    WEBHOOKS_RULES_OPERATIONS_value
                            WEBHOOKS_RULES_resources   {doc  'Resources is a list of resources this rule applies to_ For example: `pods` means pods_ `pods/log` means the log subresource of pods_ `*` means all resources, but not subresources_ `pods/*` means all subresources of pods_ `*/scale` means all scale subresources_ `*/*` means all resources and their subresources_ If wildcard is present, the validation rule will ensure resources do not overlap with each other_ Depending on the enclosing object, subresources might not be allowed_ Required_'}
                                mandatory   
                                    WEBHOOKS_RULES_RESOURCES_value
                        optional
                            WEBHOOKS_RULES_scope {doc 'scope specifies the scope of this rule_ Valid values are "Cluster", "Namespaced", and "*" "Cluster" means that only cluster-scoped resources will match this rule_ Namespace API objects are cluster-scoped_ "Namespaced" means that only namespaced resources will match this rule_ "*" means that there are no scope restrictions_ Subresources match the scope of their parent resource_ Default is "*"_'}
                                alternative   
                                    WEBHOOKS_RULES_SCOPE_Cluster
                                    WEBHOOKS_RULES_SCOPE_Namespaced
                                    WEBHOOKS_RULES_SCOPE_NoRestrictions {default}
                    WEBHOOKS_matchConditions    {doc 'MatchConditions is a list of conditions that must be met for a request to be sent to this webhook_ Match conditions filter requests that have already been matched by the rules, namespaceSelector, and objectSelector_ An empty list of matchConditions matches all requests_ There are a maximum of 64 match conditions allowed_ The exact matching logic is (in order): 1_ If ANY matchCondition evaluates to FALSE, the webhook is skipped_ 2_ If ALL matchConditions evaluate to TRUE, the webhook is called_ 3_ If any matchCondition evaluates to an error (but none are FALSE): - If failurePolicy=Fail, reject the request - If failurePolicy=Ignore, the error is ignored and the webhook is skipped'}
                        mandatory  
                            WEBHOOKS_MATCHCONDITIONS_expression {doc 'Expression represents the expression which will be evaluated by CEL_ Must evaluate to bool_ CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables: `object` - The object from the incoming request_ The value is null for DELETE requests_ `oldObject` - The existing object_ The value is null for CREATE requests_ `request` - Attributes of the admission request(/pkg/apis/admission/types_go#AdmissionRequest)_ `authorizer` - A CEL Authorizer_ May be used to perform authorization checks for the principal (user or service account) of the request_ See https://pkg_go_dev/k8s_io/apiserver/pkg/cel/library#Authz `authorizer_requestResource` - A CEL ResourceCheck constructed from the `authorizer` and configured with the request resource_ Documentation on CEL: https://kubernetes_io/docs/reference/using-api/cel/ Required'}
                            WEBHOOKS_MATCHCONDITIONS_name {doc 'Name is an identifier for this match condition, used for strategic merging of MatchConditions, as well as providing an identifier for logging purposes_ A good name should be descriptive of the associated expression_ Name must be a qualified name consisting of alphanumeric characters, `-`, `_` or `_`, and must start and end with an alphanumeric character (e_g_ `MyName`, or `my_name`, or `123-abc`, regex used for validation is `([A-Za-z0-9][-A-Za-z0-9__]*)?[A-Za-z0-9]`) with an optional DNS subdomain prefix and `/` (e_g_ `example_com/MyName`) Required_'}
                    WEBHOOKS_matchPolicy {doc 'matchPolicy defines how the "rules" list is used to match incoming requests_ Allowed values are "Exact" or "Equivalent"_ - Exact: match a request only if it exactly matches a specified rule_ For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook_ - Equivalent: match a request if modifies a resource listed in rules, even via another API group or version_ For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook_ Defaults to "Equivalent"'}
                        alternative
                            WEBHOOKS_MATCHPOLICY_Exact
                            WEBHOOKS_MATCHPOLICY_Equivalent {default}
                    WEBHOOKS_namespaceSelector {doc 'NamespaceSelector decides whether to run the webhook on an object based on whether the namespace for that object matches the selector_ If the object itself is a namespace, the matching is performed on object_metadata_labels_ If the object is another cluster scoped resource, it never skips the webhook_ For example, to run the webhook on any objects whose namespace is not associated with "runlevel" of "0" or "1"; you will set the selector as follows: "namespaceSelector": { "matchExpressions": [ { "key": "runlevel", "operator": "NotIn", "values": [ "0", "1" ] } ] } If instead you want to only run the webhook on any objects whose namespace is associated with the "environment" of "prod" or "staging"; you will set the selector as follows: "namespaceSelector": { "matchExpressions": [ { "key": "environment", "operator": "In", "values": [ "prod", "staging" ] } ] } See https://kubernetes_io/docs/concepts/overview/working-with-objects/labels for more examples of label selectors_ Default to the empty LabelSelector, which matches everything_'}
                        alternative   
                            WEBHOOKS_NAMESPACESELECTOR_matchExpressions   {doc 'matchExpressions is a list of label selector requirements_ The requirements are ANDed_'}
                                mandatory   
                                    WEBHOOKS_NAMESPACESELECTOR_MATCHEXPRESSIONS_key {doc 'key is the label key that the selector applies to_'}
                                    WEBHOOKS_NAMESPACESELECTOR_MATCHEXPRESSIONS_operator {doc 'operator represents a key`s relationship to a set of values_ Valid operators are In, NotIn, Exists and DoesNotExist_'}
                                        alternative
                                            WEBHOOKS_NAMESPACESELECTOR_MATCHEXPRESSIONS_OPERATOR_In
                                            WEBHOOKS_NAMESPACESELECTOR_MATCHEXPRESSIONS_OPERATOR_NotIn
                                            WEBHOOKS_NAMESPACESELECTOR_MATCHEXPRESSIONS_OPERATOR_Exists
                                            WEBHOOKS_NAMESPACESELECTOR_MATCHEXPRESSIONS_OPERATOR_DoesNotExist
                                    WEBHOOKS_NAMESPACESELECTOR_MATCHEXPRESSIONS_values   {doc 'values is an array of string values_ If the operator is In or NotIn, the values array must be non-empty_ If the operator is Exists or DoesNotExist, the values array must be empty_ This array is replaced during a strategic merge patch_'}
                                        mandatory   
                                            WEBHOOKS_NAMESPACESELECTOR_MATCHEXPRESSIONS_VALUES_value
                            WEBHOOKS_NAMESPACESELECTOR_matchLabels   {doc 'matchLabels is a map of {key,value} pairs_ A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value"_ The requirements are ANDed_'}
                                mandatory   
                                    WEBHOOKS_NAMESPACESELECTOR_MATCHLABELS_key
                                    WEBHOOKS_NAMESPACESELECTOR_MATCHLABELS_value
                    WEBHOOKS_objectSelector {doc 'ObjectSelector decides whether to run the webhook based on if the object has matching labels_ objectSelector is evaluated against both the oldObject and newObject that would be sent to the webhook, and is considered to match if either object matches the selector_ A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match_ Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels_ Default to the empty LabelSelector, which matches everything_'}
                        alternative   
                            WEBHOOKS_OBJECTSELECTOR_matchExpressions   {doc 'matchExpressions is a list of label selector requirements_ The requirements are ANDed_'}
                                mandatory   
                                    WEBHOOKS_OBJECTSELECTOR_MATCHEXPRESSIONS_key {doc 'key is the label key that the selector applies to_'}
                                    WEBHOOKS_OBJECTSELECTOR_MATCHEXPRESSIONS_operator {doc 'operator represents a key`s relationship to a set of values_ Valid operators are In, NotIn, Exists and DoesNotExist_'}
                                        alternative
                                            WEBHOOKS_OBJECTSELECTOR_MATCHEXPRESSIONS_OPERATOR_In
                                            WEBHOOKS_OBJECTSELECTOR_MATCHEXPRESSIONS_OPERATOR_NotIn
                                            WEBHOOKS_OBJECTSELECTOR_MATCHEXPRESSIONS_OPERATOR_Exists
                                            WEBHOOKS_OBJECTSELECTOR_MATCHEXPRESSIONS_OPERATOR_DoesNotExist
                                    WEBHOOKS_OBJECTSELECTOR_MATCHEXPRESSIONS_values   {doc 'values is an array of string values_ If the operator is In or NotIn, the values array must be non-empty_ If the operator is Exists or DoesNotExist, the values array must be empty_ This array is replaced during a strategic merge patch_'}
                                        mandatory   
                                            WEBHOOKS_OBJECTSELECTOR_MATCHEXPRESSIONS_VALUES_value
                            WEBHOOKS_OBJECTSELECTOR_matchLabels   {doc 'matchLabels is a map of {key,value} pairs_ A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value"_ The requirements are ANDed_'}
                                mandatory   
                                    WEBHOOKS_OBJECTSELECTOR_MATCHLABELS_key
                                    WEBHOOKS_OBJECTSELECTOR_MATCHLABELS_value
                    WEBHOOKS_timeoutSeconds {default 10, doc 'TimeoutSeconds specifies the timeout for this webhook_ After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy_ The timeout value must be between 1 and 30 seconds_ Default to 10 seconds_'}
constraints
    (GROUP_apiextensions | GROUP_apiregistration | GROUP_apps | GROUP_authorization | GROUP_batch | GROUP_coordination | GROUP_core | GROUP_discovery | GROUP_events | GROUP_node | GROUP_policy | GROUP_rbac | GROUP_scheduling) => VERSION_v1
    (GROUP_admissionregistration | GROUP_authentication) => VERSION_v1 | VERSION_v1beta1 | VERSION_v1alpha1
    (GROUP_certificates | GROUP_internal | GROUP_networking | GROUP_storage) => VERSION_v1 | VERSION_v1alpha1 
    GROUP_autoscaling => VERSION_v2 | VERSION_v1 
    GROUP_flowcontrol => VERSION_v1beta3 | VERSION_v1
    GROUP_resource => VERSION_v1alpha2 | VERSION_v1
    (KIND_DaemonSet | KIND_Deployment | KIND_ReplicaSet | KIND_StatefulSet | KIND_ControllerRevision) => GROUP_apps
    (KIND_Container | KIND_Pod | KIND_ReplicationController | KIND_Service | KIND_Endpoints | KIND_ConfigMap | KIND_Secret | KIND_PersistentVolumeClaim | KIND_Volume | KIND_LimitRange | KIND_PodTemplate | KIND_Binding | KIND_ComponentStatus | KIND_Namespace | KIND_Node | KIND_PersistentVolume | KIND_ResourceQuota | KIND_ServiceAccount) => GROUP_core
    (KIND_CronJob | KIND_Job) => GROUP_batch
    KIND_EndpointSlice => GROUP_discovery
    (KIND_Ingress | KIND_IngressClass | KIND_IPAddress | KIND_ServiceCIDR | KIND_NetworkPolicy) => GROUP_networking
    (KIND_CSIDriver | KIND_CSINode | KIND_StorageClass | KIND_CSIStorageCapacity | KIND_VolumeAttachment | KIND_VolumeAttributesClass) => GROUP_storage
    (KIND_ClusterTrustBundle | KIND_CertificateSigningRequest) => GROUP_certificates
    KIND_CustomResourceDefinition => GROUP_apiextensions
    KIND_Event => GROUP_events
    KIND_HorizontalPodAutoscaler => GROUP_autoscaling
    (KIND_MutatingWebhookConfiguration | KIND_ValidatingWebhookConfiguration | KIND_ValidatingAdmissionPolicy | KIND_ValidatingAdmissionPolicyBinding) => GROUP_admissionregistration
    (KIND_PodSchedulingContext | KIND_ResourceClaim | KIND_ResourceClaimTemplate | KIND_ResourceClass | KIND_ResourceClaimParameters | KIND_ResourceSlice) => GROUP_resource
    KIND_PodDisruptionBudget => GROUP_policy
    KIND_PriorityClass => GROUP_scheduling
    KIND_APIService => GROUP_apiregistration
    (KIND_LocalSubjectAccessReview | KIND_SelfSubjectAccessReview | KIND_SelfSubjectRulesReview | KIND_SubjectAccessReview) => GROUP_authorization
    (KIND_FlowSchema | KIND_PriorityLevelConfiguration) => GROUP_flowcontrol
    KIND_Lease => GROUP_coordination
    KIND_RuntimeClass => GROUP_node
    (KIND_SelfSubjectReview | KIND_TokenRequest | KIND_TokenReview) => GROUP_authentication
    KIND_StorageVersion => GROUP_internal
    (KIND_ClusterRole | KIND_ClusterRoleBinding | KIND_Role | KIND_RoleBinding)=> GROUP_rbac
    DeploymentSpec & PodSpec & ServiceSpec & CronJobSpec & JobSpec & CustomResourceDefinitionSpec & IngressSpec & PersistentVolumeClaimSpec & PersistentVolumeSpec & StatefulSetSpec & NetworkPolicySpec & DaemonSetSpec & ReplicationControllerSpec & HorizontalPodAutoscalerSpec & ReplicaSetSpec & PodDisruptionBudgetSpec & ResourceQuotaSpec & APIServiceSpec => spec
    KIND_ConfigMap => binaryData | data 
    KIND_Endpoints => subsets
    KIND_Role => rules
    KIND_ClusterRole => rules
    KIND_ClusterRoleBinding => subjects & roleRef
    KIND_RoleBinding => subjects & roleRef
    KIND_CronJob => CronJobSpec 
    KIND_Job => JobSpec
    KIND_Namespace => NamespaceSpec
    KIND_Ingress => IngressSpec
    KIND_PersistentVolumeClaim => PersistentVolumeClaimSpec
    KIND_ServiceAccount => automountServiceAccountToken & imagePullSecrets & secrets
    KIND_PersistentVolume => PersistentVolumeSpec
    KIND_StatefulSet => StatefulSetSpec
    KIND_NetworkPolicy => NetworkPolicySpec
    KIND_DaemonSet => DaemonSetSpec
    KIND_ReplicationController => ReplicationControllerSpec
    KIND_HorizontalPodAutoscaler => HorizontalPodAutoscalerSpec
    KIND_ReplicaSet => ReplicaSetSpec
    KIND_ValidatingWebhookConfiguration => webhooks
    KIND_MutatingWebhookConfiguration => webhooks
    KIND_PodDisruptionBudget => PodDisruptionBudgetSpec
    KIND_ResourceQuota => ResourceQuotaSpec
    KIND_APIService => APIServiceSpec
    immutable => KIND_ConfigMap | KIND_Secret
    stringData => KIND_Secret
    KIND_CustomResourceDefinition => CustomResourceDefinitionSpec
    data => KIND_ConfigMap | KIND_Secret
    binaryData => KIND_ConfigMap
    PodSpec => KIND_Pod | KIND_Deployment
    rules => KIND_Role | KIND_ClusterRole
    DeploymentSpec => KIND_Deployment
    SERVICESPEC_clusterIP => !SERVICESPEC_clusterIPs
    SERVICESPEC_clusterIPs => !SERVICESPEC_clusterIP
    SERVICESPEC_clusterIP => !TYPE_ExternalName
    SERVICESPEC_ipFamilyPolicy => !TYPE_ExternalName
    SERVICESPEC_ipFamilies => TYPE_ClusterIP | TYPE_NodePort | TYPE_LoadBalancer
    DEPLOYMENTSPEC_TEMPLATE_podspec => PodSpec
    STATEFULSETSPEC_TEMPLATE_podSpecReference => PodSpec
    JOBSPEC_TEMPLATE_podSpecReference => PodSpec
    DAEMONSETSPEC_TEMPLATE_podSpecReference => PodSpec
    REPLICATIONCONTROLLERSPEC_TEMPLATE_podSpecReference => PodSpec
    REPLICASETSPEC_TEMPLATE_podSpecReference => PodSpec
    JOBTEMPLATE_jobSpecReference => JobSpec
    CONTAINERS_tty => CONTAINERS_stdin
    SERVICESPEC_allocateLoadBalancerNodePorts => TYPE_LoadBalancer
    ServiceSpec => KIND_Service
    CONTAINERS_WINDOWSOPTIONS_hostProcess => PODSPEC_hostNetwork
    RULES_apiGroups => RULES_verbs
    CONVERSION_STRATEGY_Webhook => CONVERSION_webhook
    aggregationRule => KIND_ClusterRole
    subjects & roleRef => KIND_ClusterRoleBinding | KIND_RoleBinding
    JOBSPEC_backoffLimitPerIndex => COMPLETIONMODE_Indexed
    RESOURCEQUOTASPEC_SCOPESELECTOR_MATCHEXPRESSIONS_OPERATOR_In | RESOURCEQUOTASPEC_SCOPESELECTOR_MATCHEXPRESSIONS_OPERATOR_NotIn => RESOURCEQUOTASPEC_SCOPESELECTOR_MATCHEXPRESSIONS_values
    RESOURCEQUOTASPEC_SCOPESELECTOR_MATCHEXPRESSIONS_OPERATOR_Exist | RESOURCEQUOTASPEC_SCOPESELECTOR_MATCHEXPRESSIONS_OPERATOR_DoesNotExist => !RESOURCEQUOTASPEC_SCOPESELECTOR_MATCHEXPRESSIONS_values