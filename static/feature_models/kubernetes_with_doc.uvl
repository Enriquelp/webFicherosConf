features 
    Kubernetes_manifest
        mandatory
            apiVersion {doc 'APIVersion defines the versioned schema of this representation of an object_ Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#resources'}
                mandatory
                    Group {doc 'refers to the API group that organizes related resources_ Kubernetes divides its API into logical groups to make it easier to manage, extend, and evolve different types of resources_ These groups are essentially namespaces for related API objects_'} 
                        alternative
                            GROUP_admission_registration
                            GROUP_apiextensions
                            GROUP_apiregistration
                            GROUP_apps
                            GROUP_authentication
                            GROUP_authorization
                            GROUP_autoscaling
                            GROUP_batch
                            GROUP_certificates
                            GROUP_coordination
                            GROUP_core
                            GROUP_discovery
                            GROUP_events
                            GROUP_flowcontrol_apiserver
                            GROUP_internal_apiserver
                            GROUP_networking
                            GROUP_node
                            GROUP_policy
                            GROUP_rbac_authorization
                            GROUP_resource
                            GROUP_scheduling
                            GROUP_storage
                    Version {doc 'specifies the version of the API group that the resource should use and  indicates which stage of development the resource is in and helps ensure compatibility with the Kubernetes cluster_'}
                        alternative
                            VERSION_v1
                            VERSION_v1beta1
                            VERSION_v1beta3
                            VERSION_v1alpha1
                            VERSION_v1alpha2
                            VERSION_v2
            kind {doc 'Kind is a string value representing the REST resource this object represents_ Servers may infer this from the endpoint the client submits requests to_ Cannot be updated_ In CamelCase_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#types-kinds'}
                alternative
                    Workloads_APIs {doc 'Refer to the set of API resources that manage and run application workloads, such as containers and jobs_ These resources are responsible for defining how applications are deployed, scaled, and managed across a cluster_'}
                        alternative
                            KIND_Container
                            KIND_CronJob
                            KIND_DaemonSet
                            KIND_Deployment
                            KIND_Job
                            KIND_Pod
                            KIND_ReplicaSet
                            KIND_ReplicationController
                            KIND_StatefullSet
                    Service_APIs {doc 'Refer to the set of resources used to expose and manage access to applications running in a cluster_ These resources define how applications are accessed both internally (within the cluster) and externally (from outside the cluster)_'}
                        alternative
                            KIND_Endpoints
                            KIND_EndpointSlice
                            KIND_Ingress
                            KIND_IngressClass
                            KIND_Service
                    Confing_and_storage_APIs {doc 'Are used to manage configurations, secrets, and storage for applications running in a cluster_ These APIs handle configuration data, sensitive information (like passwords and API keys), and persistent storage to ensure applications have the necessary resources to function properly_'}
                        alternative
                            KIND_ConfigMap
                            KIND_CSIDriver
                            KIND_CSINode
                            KIND_Secret
                            KIND_PersistentVolumeClaim
                            KIND_StorageClass
                            KIND_CSIStorageCapacity
                            KIND_Volume
                            KIND_VolumeAttachment
                            KIND_VolumeAttributesClass
                    Metadata_APIs {doc 'are used to manage and manipulate the metadata associated with various Kubernetes resources_ Metadata typically includes information such as names, labels, annotations, and namespaces, which helps identify and organize resources within the cluster_'}
                        alternative
                            KIND_ClusterTrustBundle
                            KIND_ControllerRevision
                            KIND_CustomResourceDefinition
                            KIND_Event
                            KIND_LimitRange
                            KIND_HorizontalPodAutoscaler
                            KIND_MutatingWebhookConfiguration
                            KIND_ValidatingWebhookConfiguration
                            KIND_PodSchedulingContext
                            KIND_PodTemplate
                            KIND_PodDisruptionBudget
                            KIND_PriorityClass
                            KIND_ResourceClaim
                            KIND_ResourceClaimParameters
                            KIND_ResourceSlice
                            KIND_ResourceClaimTemplate
                            KIND_ResourceClass
                            KIND_ValidatingAdmissionPolicy
                            KIND_ValidatingAdmissionPolicyBinding
                    Cluster_APIs {doc 'Are used to manage the overall configuration, state, and resources of the Kubernetes cluster itself_ These APIs help in the management of cluster-wide resources and configurations, such as nodes, clusters, and certain system-level components_'}
                        alternative
                            KIND_APIService
                            KIND_Binding
                            KIND_CertificateSigningRequest
                            KIND_ClusterRole
                            KIND_ClusterRoleBinding
                            KIND_ComponentStatus
                            KIND_FlowSchema
                            KIND_IPAddress
                            KIND_Lease
                            KIND_LocalSubjectAccessReview
                            KIND_Namespace
                            KIND_Node
                            KIND_PersistentVolume
                            KIND_PriorityLevelConfiguration
                            KIND_ResourceQuota
                            KIND_Role
                            KIND_RoleBinding
                            KIND_RuntimeClass
                            KIND_SelfSubjectAccessReview
                            KIND_SelfSubjectReview
                            KIND_SelfSubjectRulesReview
                            KIND_ServiceAccount
                            KIND_ServiceCIDR
                            KIND_StorageVersion
                            KIND_SubjectAccessReview
                            KIND_TokenRequest
                            KIND_TokenReview
                            KIND_NetworkPolicy
        optional
            metadata {doc 'Standard object`s metadata_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#metadata'}
                mandatory
                    METADATA_name {doc 'Name must be unique within a namespace_ Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically_ Name is primarily intended for creation idempotence and configuration definition_ Cannot be updated_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names#names'}
                optional
                    METADATA_deletionGracePeriodSeconds {doc 'Number of seconds allowed for this object to gracefully terminate before it will be removed from the system_ Only set when deletionTimestamp is also set_ May only be shortened_ Read-only_'}
                    METADATA_namespace {doc 'Namespace defines the space within which each name must be unique_ An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation_ Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty_ Must be a DNS_LABEL_ Cannot be updated_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/namespaces'}
                    METADATA_labels {doc 'Map of string keys and values that can be used to organize and categorize (scope and select) objects_ May match selectors of replication controllers and services_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/labels'}
                        mandatory
                            LABELS_key
                            LABELS_value
                    METADATA_annotations {doc 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata_ They are not queryable and should be preserved when modifying objects_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/annotations'}
                        mandatory
                            ANNOTATIONS_key
                            ANNOTATIONS_value
            spec {doc 'Specification of the desired behavior of the object_'}
                optional 
                    DeploymentSpec {doc 'Specification of the desired behavior of the Deployment_'}
                        optional   
                            DEPLOYMENTSPEC_minReadySeconds {doc 'Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available_ Defaults to 0 (pod will be considered available as soon as it is ready)'}
                            DEPLOYMENTSPEC_paused {doc 'Indicates that the deployment is paused_'}
                            DEPLOYMENTSPEC_progressDeadlineSeconds {doc 'The maximum time in seconds for a deployment to make progress before it is considered to be failed_ The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status_ Note that progress will not be estimated during the time a deployment is paused_ Defaults to 600s_'}
                            DEPLOYMENTSPEC_replicas {doc 'Number of desired pods_ This is a pointer to distinguish between explicit zero and not specified_ Defaults to 1_'}
                            DEPLOYMENTSPEC_revisionHistoryLimit {doc 'The number of old ReplicaSets to retain to allow rollback_ This is a pointer to distinguish between explicit zero and not specified_ Defaults to 10_'}
                            DEPLOYMENTSPEC_selector {doc 'Label selector for pods_ Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment_ It must match the pod templates labels_'}
                                or 
                                    SELECTOR_matchLabels {doc 'matchExpressions is a list of label selector requirements_ The requirements are ANDed_'}
                                        mandatory 
                                            MATCHLABELS_key
                                            MATCHLABELS_value
                                    SELECTOR_matchExpressions {doc 'matchLabels is a map of {key,value} pairs_ A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value"_ The requirements are ANDed_'}
                                        mandatory   
                                            MATCHEXPRESSIONS_key {doc 'key is the label key that the selector applies to_'}
                                            MATCHEXPRESSIONS_values {doc 'values is an array of string values_ If the operator is In or NotIn, the values array must be non-empty_ If the operator is Exists or DoesNotExist, the values array must be empty_ This array is replaced during a strategic merge patch_'}
                                                mandatory
                                                    MATCHEXPRESSIONS_value
                                            MATCHEXPRESSIONS_operator {doc 'operator represents a keys relationship to a set of values_ Valid operators are In, NotIn, Exists and DoesNotExist_'}
                                                alternative
                                                    OPERATOR_in
                                                    OPERATOR_notIn
                                                    OPERATOR_exist
                                                    OPERATOR_doesNotExist
                                                    OPERATOR_gt
                                                    OPERATOR_lt
                            DEPLOYMENTSPEC_strategy {doc 'The deployment strategy to use to replace existing pods with new ones_'}
                                mandatory
                                    STRATEGY_type {doc 'Type of deployment_ Can be "Recreate" or "RollingUpdate"_ Default is RollingUpdate_'}
                                        or
                                            STRATEGY_TYPE_Recreate
                                            STRATEGY_TYPE_RollingUpdate
                                                mandatory
                                                    maxUnavailable {doc 'The maximum number of pods that can be unavailable during the update_ Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%)_ Absolute number is calculated from percentage by rounding down_ This can not be 0 if MaxSurge is 0_ Defaults to 25%_ Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods immediately when the rolling update starts_ Once new pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods_'}
                                                optional
                                                    maxSurge {doc 'The maximum number of pods that can be scheduled above the desired number of pods_ Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%)_ This can not be 0 if MaxUnavailable is 0_ Absolute number is calculated from percentage by rounding up_ Defaults to 25%_ Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods_ Once old pods have been killed, new ReplicaSet can be scaled up further, ensuring that total number of pods running at any time during the update is at most 130% of desired pods_'}
                            DEPLOYMENTSPEC_template {doc 'Template describes the pods that will be created_ The only allowed template_spec_restartPolicy value is "Always"_'}
                                mandatory
                                    DEPLOYMENTSPEC_TEMPLATE_metadata {doc 'Standard object`s metadata_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#metadata'}
                                        optional
                                            TEMPLATE_METADATA_name {doc 'Name must be unique within a namespace_ Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically_ Name is primarily intended for creation idempotence and configuration definition_ Cannot be updated_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names#names'}
                                            TEMPLATE_METADATA_namespace {doc 'Namespace defines the space within which each name must be unique_ An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation_ Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty_ Must be a DNS_LABEL_ Cannot be updated_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/namespaces'}
                                            TEMPLATE_METADATA_deletionGracePeriodSeconds {doc 'Number of seconds allowed for this object to gracefully terminate before it will be removed from the system_ Only set when deletionTimestamp is also set_ May only be shortened_ Read-only_'}
                                            TEMPLATE_METADATA_labels {doc 'Map of string keys and values that can be used to organize and categorize (scope and select) objects_ May match selectors of replication controllers and services_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/labels'}
                                                mandatory
                                                    TEMPLATE_METADATA_LABELS_key
                                                    TEMPLATE_METADATA_LABELS_value
                                            TEMPLATE_METADATA_annotations {doc 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata_ They are not queryable and should be preserved when modifying objects_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/annotations'}
                                                mandatory
                                                    TEMPLATE__METADATA_ANNOTATIONS_key
                                                    TEMPLATE__METADATA_ANNOTATIONS_value
                                    DEPLOYMENTSPEC_TEMPLATE_podspec {doc 'If true, PodSpec must be defined'}
                    PodSpec {doc 'Specification of the desired behavior of the Pod_'} 
                        mandatory
                            PODSPEC_containers {doc 'List of containers belonging to the pod_ Containers cannot currently be added or removed_ There must be at least one container in a Pod_ Cannot be updated_'}
                                mandatory   
                                    CONTAINERS_name {doc 'Name of the container specified as a DNS_LABEL_ Each container in a pod must have a unique name (DNS_LABEL)_ Cannot be updated_'}
                                optional     
                                    CONTAINERS_args {doc 'Arguments to the entrypoint_ The container image`s CMD is used if this is not provided_ Variable references $(VAR_NAME) are expanded using the container`s environment_ If a variable cannot be resolved, the reference in the input string will be unchanged_ Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i_e_ "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)"_ Escaped references will never be expanded, regardless of whether the variable exists or not_ Cannot be updated_ More info: https://kubernetes_io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'}
                                        mandatory   
                                            CONTAINERS_ARGS_value 
                                    CONTAINERS_command {doc 'Entrypoint array_ Not executed within a shell_ The container image`s ENTRYPOINT is used if this is not provided_ Variable references $(VAR_NAME) are expanded using the container`s environment_ If a variable cannot be resolved, the reference in the input string will be unchanged_ Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i_e_ "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)"_ Escaped references will never be expanded, regardless of whether the variable exists or not_ Cannot be updated_ More info: https://kubernetes_io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'}
                                        mandatory   
                                            CONTAINERS_COMMAND_value 
                                    CONTAINERS_env {doc 'List of environment variables to set in the container_ Cannot be updated_'}
                                        mandatory
                                            CONTAINERS_ENV_name {doc 'Name of the environment variable_ Must be a C_IDENTIFIER_'}
                                            CONTAINERS_ENV_value {doc 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables_ If a variable cannot be resolved, the reference in the input string will be unchanged_ Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i_e_ "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)"_ Escaped references will never be expanded, regardless of whether the variable exists or not_ Defaults to ""_'}
                                        optional    
                                            CONTAINERS_ENV_valueFrom {doc 'Source for the environment variable`s value_ Cannot be used if value is not empty_'}
                                                alternative   
                                                    configMapKeyRef {doc 'Selects a key of a ConfigMap_'}
                                                        mandatory
                                                            CONFIGMAPKEYREF_key {doc 'The key to select_'}
                                                            CONFIGMAPKEYREF_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                                                        optional
                                                            CONFIGMAPKEYREF_optional {doc 'Specify whether the ConfigMap or its key must be defined'}
                                                    fieldRef {doc 'Selects a field of the pod: supports metadata_name, metadata_namespace, `metadata_labels[<KEY>]`, `metadata_annotations[<KEY>]`, spec_nodeName, spec_serviceAccountName, status_hostIP, status_podIP, status_podIPs_'}
                                                        mandatory
                                                            FIELDREF_fieldPath {doc 'Version of the schema the FieldPath is written in terms of, defaults to "v1"_'}
                                                        optional   
                                                            FIELDREF_apiversion {doc 'Path of the field to select in the specified API version_'}
                                                    resourceFieldRef {doc 'Selects a resource of the container: only resources limits and requests (limits_cpu, limits_memory, limits_ephemeral-storage, requests_cpu, requests_memory and requests_ephemeral-storage) are currently supported_'}
                                                        mandatory
                                                            RESOURCEFIELDREF_containerName {doc 'Container name: required for volumes, optional for env vars'}
                                                            RESOURCEFIELDREF_resource {doc 'Required: resource to select'}
                                                        optional   
                                                            RESOURCEFIELDREF_divisor {doc 'Specifies the output format of the exposed resources, defaults to "1"'}
                                                    secretKeyRef {doc 'Selects a key of a secret in the pod`s namespace'}
                                                        mandatory
                                                            SECRETKEYREF_key {doc 'The key of the secret to select from_ Must be a valid secret key_'}
                                                            SECRETKEYREF_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                                                        optional
                                                            SECRETKEYREF_optional {doc 'Specify whether the Secret or its key must be defined'}
                                    CONTAINERS_envFrom {doc 'List of sources to populate environment variables in the container_ The keys defined within a source must be a C_IDENTIFIER_ All invalid keys will be reported as an event when the container is starting_ When a key exists in multiple sources, the value associated with the last source will take precedence_ Values defined by an Env with a duplicate key will take precedence_ Cannot be updated_'}
                                        alternative  
                                            ENVFROM_configMapRef {doc 'The ConfigMap to select from'}
                                                mandatory   
                                                    CONFIGMAPREF_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                                                    CONFIGMAPREF_optional {doc 'Specify whether the ConfigMap must be defined'}
                                            ENVFROM_prefix {doc 'An optional identifier to prepend to each key in the ConfigMap_ Must be a C_IDENTIFIER_'}
                                            ENVFROM_secretRef {doc 'The Secret to select from'}
                                                mandatory   
                                                    SECRETREF_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                                                    SECRETREF_optional {doc 'Specify whether the Secret must be defined'}
                                    CONTAINERS_image {doc 'Container image name_ More info: https://kubernetes_io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets_'}
                                    CONTAINERS_imagePullPolicy {doc 'Image pull policy_ One of Always, Never, IfNotPresent_ Defaults to Always if :latest tag is specified, or IfNotPresent otherwise_ Cannot be updated_ More info: https://kubernetes_io/docs/concepts/containers/images#updating-images'}
                                        alternative   
                                            IMAGEPULLPOLICY_always
                                            IMAGEPULLPOLICY_never
                                            IMAGEPULLPOLICY_ifNotPresent
                                    CONTAINERS_lifecycle {doc 'Actions that the management system should take in response to container lifecycle events_ Cannot be updated_'}
                                        optional
                                            LIFECYCLE_postStart {doc 'PostStart is called immediately after a container is created_ If the handler fails, the container is terminated and restarted according to its restart policy_ Other management of the container blocks until the hook completes_ More info: https://kubernetes_io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'}
                                                optional   
                                                    POSTSTART_exec {doc 'Exec specifies the action to take_'}
                                                        mandatory   
                                                            POSTSTART_EXEC_command {doc 'Command is the command line to execute inside the container, the working directory for the command is root ("/") in the container`s filesystem_ The command is simply exec`d, it is not run inside a shell, so traditional shell instructions ("|", etc) won`t work_ To use a shell, you need to explicitly call out to that shell_ Exit status of 0 is treated as live/healthy and non-zero is unhealthy_'}
                                                    POSTSTART_httpGet {doc 'HTTPGet specifies the http request to perform_'}
                                                        mandatory   
                                                            POSTSTART_HTTPGET_host {doc 'Host name to connect to, defaults to the pod IP_ You probably want to set "Host" in httpHeaders instead_'}
                                                            POSTSTART_HTTPGET_httpHeaders {doc 'Custom headers to set in the request_ HTTP allows repeated headers_'}
                                                                mandatory
                                                                    POSTSTART_HTTPHEADERS_name {doc 'The header field name_ This will be canonicalized upon output, so case-variant names will be understood as the same header_'}       
                                                                    POSTSTART_HTTPHEADERS_value {doc 'The header field value'}
                                                            POSTSTART_HTTPGET_port {doc 'Name or number of the port to access on the container_ Number must be in the range 1 to 65535_ Name must be an IANA_SVC_NAME_'}
                                                        optional
                                                            POSTSTART_HTTPGET_path {doc 'Path to access on the HTTP server_'}
                                                            POSTSTART_HTTPGET_scheme {doc 'Scheme to use for connecting to the host_ Defaults to HTTP_'}
                                                    POSTSTART_sleep {doc 'Sleep represents the duration that the container should sleep before being terminated_'}
                                                        mandatory
                                                            POSTSTART_SLEEP_seconds {doc 'Seconds is the number of seconds to sleep_'}
                                            LIFECYCLE_preStop {doc 'PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc_ The handler is not called if the container crashes or exits_ The Pod`s termination grace period countdown begins before the PreStop hook is executed_ Regardless of the outcome of the handler, the container will eventually terminate within the Pod`s termination grace period (unless delayed by finalizers)_ Other management of the container blocks until the hook completes or until the termination grace period is reached_ More info: https://kubernetes_io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'}
                                                optional   
                                                    PRESTOP_exec {doc 'Exec specifies the action to take_'}
                                                        mandatory   
                                                            PRESTOP_EXEC_command {doc 'Command is the command line to execute inside the container, the working directory for the command is root ("/") in the container`s filesystem_ The command is simply exec`d, it is not run inside a shell, so traditional shell instructions ("|", etc) won`t work_ To use a shell, you need to explicitly call out to that shell_ Exit status of 0 is treated as live/healthy and non-zero is unhealthy_'}
                                                    PRESTOP_httpGet {doc 'HTTPGet specifies the http request to perform_'}
                                                        mandatory   
                                                            PRESTOP_HTTPGET_host {doc 'Host name to connect to, defaults to the pod IP_ You probably want to set "Host" in httpHeaders instead_'}
                                                            PRESTOP_HTTPGET_httpHeaders {doc 'Custom headers to set in the request_ HTTP allows repeated headers_'}
                                                                mandatory
                                                                    PRESTOP_HTTPHEADERS_name {doc 'The header field name_ This will be canonicalized upon output, so case-variant names will be understood as the same header_'}        
                                                                    PRESTOP_HTTPHEADERS_value {doc 'The header field value'}
                                                            PRESTOP_HTTPGET_port {doc 'Name or number of the port to access on the container_ Number must be in the range 1 to 65535_ Name must be an IANA_SVC_NAME_'}
                                                        optional
                                                            PRESTOP_HTTPGET_path {doc 'Path to access on the HTTP server_'}
                                                            PRESTOP_HTTPGET_scheme {doc 'Scheme to use for connecting to the host_ Defaults to HTTP_'}
                                                    PRESTOP_sleep {doc 'Sleep represents the duration that the container should sleep before being terminated_'}
                                                        mandatory
                                                            PRESTOP_SLEEP_seconds {doc 'Seconds is the number of seconds to sleep_'}
                                    CONTAINERS_livenessProbe {doc 'Periodic probe of container liveness_ Container will be restarted if the probe fails_ Cannot be updated_ More info: https://kubernetes_io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'}
                                        mandatory
                                            LIVENESSPROBE_exec {doc 'Exec specifies the action to take_'}
                                                mandatory
                                                    LIVENESSPROBE_EXEC_command {doc 'Command is the command line to execute inside the container, the working directory for the command is root ("/") in the container`s filesystem_ The command is simply exec`d, it is not run inside a shell, so traditional shell instructions ("|", etc) won`t work_ To use a shell, you need to explicitly call out to that shell_ Exit status of 0 is treated as live/healthy and non-zero is unhealthy_'}
                                            LIVENESSPROBE_failureThreshold {doc 'Minimum consecutive failures for the probe to be considered failed after having succeeded_ Defaults to 3_ Minimum value is 1_'}
                                            LIVENESSPROBE_grpc {doc 'GRPC specifies an action involving a GRPC port_'}
                                                mandatory   
                                                    LIVENESSPROBE_GRPC_port {doc 'Port number of the gRPC service_ Number must be in the range 1 to 65535_'}
                                                optional
                                                    LIVENESSPROBE_GRPC_service {doc 'Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github_com/grpc/grpc/blob/master/doc/health-checking_md)_ If this is not specified, the default behavior is defined by gRPC_'}
                                            LIVENESSPROBE_httpGet {doc 'HTTPGet specifies the http request to perform_'}
                                                optional   
                                                    LIVENESSPROBE_HTTPGET_host {doc 'Host name to connect to, defaults to the pod IP_ You probably want to set "Host" in httpHeaders instead_'}
                                                    LIVENESSPROBE_HTTPGET_httpHeaders {doc 'Custom headers to set in the request_ HTTP allows repeated headers_'}
                                                        mandatory   
                                                            LIVENESSPROBE_HTTPHEADERS_name {doc 'The header field name_ This will be canonicalized upon output, so case-variant names will be understood as the same header_'}
                                                            LIVENESSPROBE_HTTPHEADERS_value {doc 'The header field value'}
                                                    LIVENESSPROBE_HTTPGET_path {doc 'Path to access on the HTTP server_'}
                                                    LIVENESSPROBE_HTTPGET_port {doc 'Name or number of the port to access on the container_ Number must be in the range 1 to 65535_ Name must be an IANA_SVC_NAME_'}
                                                    LIVENESSPROBE_HTTPGET_scheme {doc 'Scheme to use for connecting to the host_ Defaults to HTTP_'}
                                            LIVENESSPROBE_initialDelaySeconds {doc 'Number of seconds after the container has started before liveness probes are initiated_ More info: https://kubernetes_io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'}
                                            LIVENESSPROBE_periodSeconds {doc 'How often (in seconds) to perform the probe_ Default to 10 seconds_ Minimum value is 1_'}
                                            LIVENESSPROBE_successThreshold {doc 'Minimum consecutive successes for the probe to be considered successful after having failed_ Defaults to 1_ Must be 1 for liveness and startup_ Minimum value is 1_'}
                                            LIVENESSPROBE_tcpSocket {doc 'TCPSocket specifies an action involving a TCP port_'}
                                                mandatory   
                                                    LIVENESSPROBE_TCPSOCKET_port {doc 'Number or name of the port to access on the container_ Number must be in the range 1 to 65535_ Name must be an IANA_SVC_NAME_'}
                                                optional   
                                                    LIVENESSPROBE_TCPSOCKET_host {doc 'Optional: Host name to connect to, defaults to the pod IP_'}
                                            LIVENESSPROBE_timeoutSeconds {doc 'Number of seconds after which the probe times out_ Defaults to 1 second_ Minimum value is 1_ More info: https://kubernetes_io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'}
                                        optional
                                            LIVENESSPROBE_terminationGracePeriodSeconds {doc 'Optional duration in seconds the pod needs to terminate gracefully upon probe failure_ The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal_ Set this value longer than the expected cleanup time for your process_ If this value is nil, the pod`s terminationGracePeriodSeconds will be used_ Otherwise, this value overrides the value provided by the pod spec_ Value must be non-negative integer_ The value zero indicates stop immediately via the kill signal (no opportunity to shut down)_ This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate_ Minimum value is 1_ spec_terminationGracePeriodSeconds is used if unset_'}
                                    CONTAINERS_ports {doc 'List of ports to expose from the container_ Not specifying a port here DOES NOT prevent that port from being exposed_ Any port which is listening on the default "0_0_0_0" address inside a container will be accessible from the network_ Modifying this array with strategic merge patch may corrupt the data_ For more information See https://github_com/kubernetes/kubernetes/issues/108255_ Cannot be updated_'}
                                        mandatory   
                                            CONTAINERS_PORTS_containerPort {doc 'Number of port to expose on the pod`s IP address_ This must be a valid port number, 0 < x < 65536_'}
                                        optional 
                                            CONTAINERS_PORTS_hostIP {doc 'What host IP to bind the external port to_'}
                                            CONTAINERS_PORTS_hostPort {doc 'Number of port to expose on the host_ If specified, this must be a valid port number, 0 < x < 65536_ If HostNetwork is specified, this must match ContainerPort_ Most containers do not need this_'}
                                            CONTAINERS_PORTS_name {doc 'If specified, this must be an IANA_SVC_NAME and unique within the pod_ Each named port in a pod must have a unique name_ Name for the port that can be referred to by services_'}
                                            CONTAINERS_PORTS_protocol {doc 'Protocol for port_ Must be UDP, TCP, or SCTP_ Defaults to "TCP"_'}
                                                alternative   
                                                    PROTOCOL_UDP
                                                    PROTOCOL_TCP
                                                    PROTOCOL_SCTP
                                    CONTAINERS_readinessProbe {doc 'Periodic probe of container service readiness_ Container will be removed from service endpoints if the probe fails_ Cannot be updated_ More info: https://kubernetes_io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'}
                                        mandatory
                                            READINESSPROBE_exec {doc 'Exec specifies the action to take_'}
                                                mandatory
                                                    READINESSPROBE_EXEC_command {doc 'Command is the command line to execute inside the container, the working directory for the command is root ("/") in the container`s filesystem_ The command is simply exec`d, it is not run inside a shell, so traditional shell instructions ("|", etc) won`t work_ To use a shell, you need to explicitly call out to that shell_ Exit status of 0 is treated as live/healthy and non-zero is unhealthy_'}
                                            READINESSPROBE_failureThreshold {doc 'Minimum consecutive failures for the probe to be considered failed after having succeeded_ Defaults to 3_ Minimum value is 1_'}
                                            READINESSPROBE_grpc {doc 'GRPC specifies an action involving a GRPC port_'}
                                                mandatory   
                                                    READINESSPROBE_GRPC_port {doc 'Port number of the gRPC service_ Number must be in the range 1 to 65535_'}
                                                optional
                                                    READINESSPROBE_GRPC_service {doc 'Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github_com/grpc/grpc/blob/master/doc/health-checking_md)_ If this is not specified, the default behavior is defined by gRPC_'}
                                            READINESSPROBE_httpGet {doc 'HTTPGet specifies the http request to perform_'}
                                                optional   
                                                    READINESSPROBE_HTTPGET_host {doc 'Host name to connect to, defaults to the pod IP_ You probably want to set "Host" in httpHeaders instead_'}
                                                    READINESSPROBE_HTTPGET_httpHeaders {doc 'Custom headers to set in the request_ HTTP allows repeated headers_'}
                                                        mandatory   
                                                            READINESSPROBE_HTTPHEADERS_name {doc 'The header field name_ This will be canonicalized upon output, so case-variant names will be understood as the same header_'}
                                                            READINESSPROBE_HTTPHEADERS_value {doc 'The header field value'}
                                                    READINESSPROBE_HTTPGET_path {doc 'Path to access on the HTTP server_'}
                                                    READINESSPROBE_HTTPGET_port {doc '	Name or number of the port to access on the container_ Number must be in the range 1 to 65535_ Name must be an IANA_SVC_NAME_'}
                                                    READINESSPROBE_HTTPGET_scheme {doc 'Scheme to use for connecting to the host_ Defaults to HTTP_'}
                                            READINESSPROBE_initialDelaySeconds {doc 'Number of seconds after the container has started before liveness probes are initiated_ More info: https://kubernetes_io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'}
                                            READINESSPROBE_periodSeconds {doc 'How often (in seconds) to perform the probe_ Default to 10 seconds_ Minimum value is 1_'}
                                            READINESSPROBE_successThreshold {doc 'Minimum consecutive successes for the probe to be considered successful after having failed_ Defaults to 1_ Must be 1 for liveness and startup_ Minimum value is 1_'}
                                            READINESSPROBE_tcpSocket {doc 'TCPSocket specifies an action involving a TCP port_'}
                                                mandatory   
                                                    READINESSPROBE_TCPSOCKET_port {doc 'Number or name of the port to access on the container_ Number must be in the range 1 to 65535_ Name must be an IANA_SVC_NAME_'}
                                                optional   
                                                    READINESSPROBE_TCPSOCKET_host {doc 'Optional: Host name to connect to, defaults to the pod IP_'}                                     
                                            READINESSPROBE_timeoutSeconds {doc 'Number of seconds after which the probe times out_ Defaults to 1 second_ Minimum value is 1_ More info: https://kubernetes_io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'}
                                        optional   
                                            READINESSPROBE_terminationGracePeriodSeconds {doc 'Optional duration in seconds the pod needs to terminate gracefully upon probe failure_ The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal_ Set this value longer than the expected cleanup time for your process_ If this value is nil, the pod`s terminationGracePeriodSeconds will be used_ Otherwise, this value overrides the value provided by the pod spec_ Value must be non-negative integer_ The value zero indicates stop immediately via the kill signal (no opportunity to shut down)_ This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate_ Minimum value is 1_ spec_terminationGracePeriodSeconds is used if unset_'}
                                    CONTAINERS_resizePolicy {doc 'Resources resize policy for the container_'}
                                        mandatory   
                                            RESIZEPOLICY_resourceName {doc 'Name of the resource to which this resource resize policy applies_ Supported values: cpu, memory_'}
                                                alternative   
                                                    CONTAINERS_RESIZEPOLICY_RESTARTPOLICY_cpu
                                                    CONTAINERS_RESIZEPOLICY_RESTARTPOLICY_memory
                                            RESIZEPOLICY_restartPolicy {doc 'Restart policy to apply when specified resource is resized_ If not specified, it defaults to NotRequired_'}
                                    CONTAINERS_restartPolicy {doc 'RestartPolicy defines the restart behavior of individual containers in a pod_ This field may only be set for init containers, and the only allowed value is "Always"_ For non-init containers or when this field is not specified, the restart behavior is defined by the Pod`s restart policy and the container type_ Setting the RestartPolicy as "Always" for the init container will have the following effect: this init container will be continually restarted on exit until all regular containers have terminated_ Once all regular containers have completed, all init containers with restartPolicy "Always" will be shut down_ This lifecycle differs from normal init containers and is often referred to as a "sidecar" container_ Although this init container still starts in the init container sequence, it does not wait for the container to complete before proceeding to the next init container_ Instead, the next init container starts immediately after this init container is started, or after any startupProbe has successfully completed_'}
                                    CONTAINERS_resources {doc 'Compute Resources required by this container_ Cannot be updated_ More info: https://kubernetes_io/docs/concepts/configuration/manage-resources-containers/'}
                                        or
                                            RESOURCES_request {doc 'Requests describes the minimum amount of compute resources required_ If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value_ Requests cannot exceed Limits_ More info: https://kubernetes_io/docs/concepts/configuration/manage-resources-containers/'}
                                                mandatory
                                                    REQUEST_cpu
                                                    REQUEST_memory
                                            RESOURCES_limits {doc 'Limits describes the maximum amount of compute resources allowed_ More info: https://kubernetes_io/docs/concepts/configuration/manage-resources-containers/'}
                                                mandatory
                                                    LIMITS_cpu
                                                    LIMITS_memory
                                            RESOURCES_claims {doc 'Claims lists the names of resources, defined in spec_resourceClaims, that are used by this container_ This is an alpha field and requires enabling the DynamicResourceAllocation feature gate_ This field is immutable_ It can only be set for containers_'}
                                                mandatory
                                                    RESOURCES_CLAIMS_name {doc 'Name must match the name of one entry in pod_spec_resourceClaims of the Pod where this field is used_ It makes that resource available inside a container_'}
                                    CONTAINERS_securityContext {doc 'SecurityContext defines the security options the container should be run with_ If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext_ More info: https://kubernetes_io/docs/tasks/configure-pod-container/security-context/'}
                                        optional   
                                            CONTAINERS_SECURITYCONTEXT_allowPrivilegeEscalation {doc 'AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process_ This bool directly controls if the no_new_privs flag will be set on the container process_ AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec_os_name is windows_'}
                                            CONTAINERS_SECURITYCONTEXT_privileged {doc 'Run container in privileged mode_ Processes in privileged containers are essentially equivalent to root on the host_ Defaults to false_ Note that this field cannot be set when spec_os_name is windows_'}
                                            CONTAINERS_SECURITYCONTEXT_procMount {doc 'procMount denotes the type of proc mount to use for the containers_ The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths_ This requires the ProcMountType feature flag to be enabled_ Note that this field cannot be set when spec_os_name is windows_'}
                                            CONTAINERS_SECURITYCONTEXT_readOnlyRootFilesystem {doc 'Whether this container has a read-only root filesystem_ Default is false_ Note that this field cannot be set when spec_os_name is windows_'}
                                            CONTAINERS_SECURITYCONTEXT_runAsGroup {doc 'The GID to run the entrypoint of the container process_ Uses runtime default if unset_ May also be set in PodSecurityContext_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_ Note that this field cannot be set when spec_os_name is windows_'}
                                            CONTAINERS_SECURITYCONTEXT_runAsNonRoot {doc 'Indicates that the container must run as a non-root user_ If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does_ If unset or false, no such validation will be performed_ May also be set in PodSecurityContext_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_'}
                                            CONTAINERS_SECURITYCONTEXT_runAsUser {doc 'The UID to run the entrypoint of the container process_ Defaults to user specified in image metadata if unspecified_ May also be set in PodSecurityContext_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_ Note that this field cannot be set when spec_os_name is windows_'}
                                            CONTAINERS_SECURITYCONTEXT_appArmorProfile {doc 'appArmorProfile is the AppArmor options to use by this container_ If set, this profile overrides the pod`s appArmorProfile_ Note that this field cannot be set when spec_os_name is windows_'}
                                                optional   
                                                    CONTAINERS_APPARMORPROFILE_localhostProfile {doc 'localhostProfile indicates a profile loaded on the node that should be used_ The profile must be preconfigured on the node to work_ Must match the loaded name of the profile_ Must be set if and only if type is "Localhost"_'}
                                                    CONTAINERS_APPARMORPROFILE_type {doc 'type indicates which kind of AppArmor profile will be applied_ Valid options are: Localhost - a profile pre-loaded on the node_ RuntimeDefault - the container runtime`s default profile_ Unconfined - no AppArmor enforcement_'}
                                                        alternative   
                                                            CONTAINERS_APPARMORPROFILE_TYPE_LocalHost
                                                            CONTAINERS_APPARMORPROFILE_TYPE_RuntimeDefault 
                                                            CONTAINERS_APPARMORPROFILE_TYPE_Unconfined 
                                            CONTAINERS_SECURITYCONTEXT_capabilities {doc 'The capabilities to add/drop when running containers_ Defaults to the default set of capabilities granted by the container runtime_ Note that this field cannot be set when spec_os_name is windows_'}
                                                optional   
                                                    CONTAINERS_CAPABILITIES_add {doc 'Added capabilities'}
                                                        mandatory   
                                                            CONTAINERS_addedCapabilities
                                                    CONTAINERS_CAPABILITIES_drop {doc 'Removed capabilities'}
                                                        mandatory   
                                                                CONTAINERS_removedCapabilities
                                            CONTAINERS_SECURITYCONTEXT_seLinuxOptions {doc 'The SELinux context to be applied to the container_ If unspecified, the container runtime will allocate a random SELinux context for each container_ May also be set in PodSecurityContext_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_ Note that this field cannot be set when spec_os_name is windows_'}
                                                optional   
                                                    CONTAINERS_SELINUXOPTIONS_level {doc 'Level is SELinux level label that applies to the container_'}
                                                    CONTAINERS_SELINUXOPTIONS_role {doc 'Role is a SELinux role label that applies to the container_'}
                                                    CONTAINERS_SELINUXOPTIONS_type {doc 'Type is a SELinux type label that applies to the container_'}
                                                    CONTAINERS_SELINUXOPTIONS_user {doc 'User is a SELinux user label that applies to the container_'}
                                            CONTAINERS_SECURITYCONTEXT_seccompProfile {doc 'The seccomp options to use by this container_ If seccomp options are provided at both the pod & container level, the container options override the pod options_ Note that this field cannot be set when spec_os_name is windows_'}
                                                optional   
                                                    CONTAINERS_SECCOMPROFILE_localhostProfile {doc 'localhostProfile indicates a profile defined in a file on the node should be used_ The profile must be preconfigured on the node to work_ Must be a descending path, relative to the kubelet`s configured seccomp profile location_ Must be set if type is "Localhost"_ Must NOT be set for any other type_'}
                                                    CONTAINERS_SECCOMPROFILE_type {doc 'type indicates which kind of seccomp profile will be applied_ Valid options are: Localhost - a profile defined in a file on the node should be used_ RuntimeDefault - the container runtime default profile should be used_ Unconfined - no profile should be applied_'}
                                                        alternative   
                                                            CONTAINERS_SECCOMPROFILE_Type_LocalHost
                                                            CONTAINERS_SECCOMPROFILE_Type_RuntimeDefault 
                                                            CONTAINERS_SECCOMPROFILE_Type_Unconfined
                                            CONTAINERS_SECURITYCONTEXT_windowsOptions {doc 'The Windows specific settings applied to all containers_ If unspecified, the options from the PodSecurityContext will be used_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_ Note that this field cannot be set when spec_os_name is linux_'}
                                                optional   
                                                    CONTAINERS_WINDOWSOPTIONS_gmsaCredentialSpec {doc 'GMSACredentialSpec is where the GMSA admission webhook (https://github_com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field_'}
                                                    CONTAINERS_WINDOWSOPTIONS_gmsaCredentialSpecName {doc 'GMSACredentialSpecName is the name of the GMSA credential spec to use_'}
                                                    CONTAINERS_WINDOWSOPTIONS_hostProcess {doc 'HostProcess determines if a container should be run as a "Host Process" container_ All of a Pod`s containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers)_ In addition, if HostProcess is true then HostNetwork must also be set to true_'}
                                                    CONTAINERS_WINDOWSOPTIONS_runAsUserName {doc 'The UserName in Windows to run the entrypoint of the container process_ Defaults to the user specified in image metadata if unspecified_ May also be set in PodSecurityContext_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_'}
                                    CONTAINERS_startupProbe {doc 'StartupProbe indicates that the Pod has successfully initialized_ If specified, no other probes are executed until this completes successfully_ If this probe fails, the Pod will be restarted, just as if the livenessProbe failed_ This can be used to provide different probe parameters at the beginning of a Pod`s lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation_ This cannot be updated_ More info: https://kubernetes_io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'}
                                        mandatory
                                            STARTUPPROBE_exec {doc 'Exec specifies the action to take_'}
                                                mandatory
                                                    STARTUPPROBE_EXEC_command {doc 'Command is the command line to execute inside the container, the working directory for the command is root ("/") in the container`s filesystem_ The command is simply exec`d, it is not run inside a shell, so traditional shell instructions ("|", etc) won`t work_ To use a shell, you need to explicitly call out to that shell_ Exit status of 0 is treated as live/healthy and non-zero is unhealthy_'}
                                            STARTUPPROBE_failureThreshold {doc 'Minimum consecutive failures for the probe to be considered failed after having succeeded_ Defaults to 3_ Minimum value is 1_'}
                                            STARTUPPROBE_grpc {doc 'GRPC specifies an action involving a GRPC port_'}
                                                mandatory   
                                                    STARTUPPROBE_GRPC_port {doc 'Port number of the gRPC service_ Number must be in the range 1 to 65535_'}
                                                optional
                                                    STARTUPPROBE_GRPC_service {doc 'Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github_com/grpc/grpc/blob/master/doc/health-checking_md)_ If this is not specified, the default behavior is defined by gRPC_'}
                                            STARTUPPROBE_httpGet {doc 'HTTPGet specifies the http request to perform_'}
                                                optional   
                                                    STARTUPPROBE_HTTPGET_host {doc 'Host name to connect to, defaults to the pod IP_ You probably want to set "Host" in httpHeaders instead_'}
                                                    STARTUPPROBE_HTTPGET_httpHeaders {doc 'Custom headers to set in the request_ HTTP allows repeated headers_'}
                                                        mandatory   
                                                            STARTUPPROBE_HTTPHEADERS_name {doc 'The header field name_ This will be canonicalized upon output, so case-variant names will be understood as the same header_'}
                                                            STARTUPPROBE_HTTPHEADERS_value {doc 'The header field value'}
                                                    STARTUPPROBE_HTTPGET_path {doc 'Path to access on the HTTP server_'}
                                                    STARTUPPROBE_HTTPGET_port {doc 'Name or number of the port to access on the container_ Number must be in the range 1 to 65535_ Name must be an IANA_SVC_NAME_'}
                                                    STARTUPPROBE_HTTPGET_scheme {doc 'Scheme to use for connecting to the host_ Defaults to HTTP_'}
                                            STARTUPPROBE_initialDelaySeconds {doc 'Number of seconds after the container has started before liveness probes are initiated_ More info: https://kubernetes_io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'}
                                            STARTUPPROBE_periodSeconds {doc 'How often (in seconds) to perform the probe_ Default to 10 seconds_ Minimum value is 1_'}
                                            STARTUPPROBE_successThreshold {doc 'Minimum consecutive successes for the probe to be considered successful after having failed_ Defaults to 1_ Must be 1 for liveness and startup_ Minimum value is 1_'}
                                            STARTUPPROBE_tcpSocket {doc 'TCPSocket specifies an action involving a TCP port_'}
                                                mandatory   
                                                     STARTUPPROBE_TCPSOCKET_port {doc 'Number or name of the port to access on the container_ Number must be in the range 1 to 65535_ Name must be an IANA_SVC_NAME_'}
                                                optional   
                                                     STARTUPPROBE_TCPSOCKET_host {doc 'Optional: Host name to connect to, defaults to the pod IP_'}
                                            STARTUPPROBE_timeoutSeconds {doc 'Number of seconds after which the probe times out_ Defaults to 1 second_ Minimum value is 1_ More info: https://kubernetes_io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'}
                                        optional   
                                            STARTUPPROBE_terminationGracePeriodSeconds {doc 'Optional duration in seconds the pod needs to terminate gracefully upon probe failure_ The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal_ Set this value longer than the expected cleanup time for your process_ If this value is nil, the pod`s terminationGracePeriodSeconds will be used_ Otherwise, this value overrides the value provided by the pod spec_ Value must be non-negative integer_ The value zero indicates stop immediately via the kill signal (no opportunity to shut down)_ This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate_ Minimum value is 1_ spec_terminationGracePeriodSeconds is used if unset_'}
                                    CONTAINERS_stdin {doc 'Whether this container should allocate a buffer for stdin in the container runtime_ If this is not set, reads from stdin in the container will always result in EOF_ Default is false_'}
                                    CONTAINERS_stdinOnce {doc 'Whether the container runtime should close the stdin channel after it has been opened by a single attach_ When stdin is true the stdin stream will remain open across multiple attach sessions_ If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted_ If this flag is false, a container processes that reads from stdin will never receive an EOF_ Default is false'}
                                    CONTAINERS_terminationMessagePath {doc 'Optional: Path at which the file to which the container`s termination message will be written is mounted into the container`s filesystem_ Message written is intended to be brief final status, such as an assertion failure message_ Will be truncated by the node if greater than 4096 bytes_ The total message length across all containers will be limited to 12kb_ Defaults to /dev/termination-log_ Cannot be updated_'}
                                    CONTAINERS_terminationMessagePolicy {doc 'Indicate how the termination message should be populated_ File will use the contents of terminationMessagePath to populate the container status message on both success and failure_ FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error_ The log output is limited to 2048 bytes or 80 lines, whichever is smaller_ Defaults to File_ Cannot be updated_'}
                                    CONTAINERS_tty {doc 'Whether this container should allocate a TTY for itself, also requires "stdin" to be true_ Default is false_'}
                                    CONTAINERS_volumeDevices {doc 'volumeDevices is the list of block devices to be used by the container_'}
                                        mandatory
                                            VOLUMEDEVICES_devicePath {doc 'devicePath is the path inside of the container that the device will be mapped to_'}
                                            VOLUMEDEVICES_name {doc 'name must match the name of a persistentVolumeClaim in the pod'}
                                    CONTAINERS_volumeMounts {doc 'Pod volumes to mount into the container`s filesystem_ Cannot be updated_'}
                                        mandatory   
                                            VOLUMEMOUNTS_mountPath {doc 'Path within the container at which the volume should be mounted_ Must not contain ":"_'}
                                            VOLUMEMOUNTS_name {doc 'This must match the Name of a Volume_'}
                                        optional
                                            VOLUMEMOUNTS_readonly {doc 'Mounted read-only if true, read-write otherwise (false or unspecified)_ Defaults to false_'}
                                            VOLUMEMOUNTS_mountPropagation {doc 'mountPropagation determines how mounts are propagated from the host to container and the other way around_ When not set, MountPropagationNone is used_ This field is beta in 1_10_ When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified (which defaults to None)_'}
                                            VOLUMEMOUNTS_recursiveReadOnly {doc 'RecursiveReadOnly specifies whether read-only mounts should be handled recursively_ If ReadOnly is false, this field has no meaning and must be unspecified_ If ReadOnly is true, and this field is set to Disabled, the mount is not made recursively read-only_ If this field is set to IfPossible, the mount is made recursively read-only, if it is supported by the container runtime_ If this field is set to Enabled, the mount is made recursively read-only if it is supported by the container runtime, otherwise the pod will not be started and an error will be generated to indicate the reason_ If this field is set to IfPossible or Enabled, MountPropagation must be set to None (or be unspecified, which defaults to None)_ If this field is not specified, it is treated as an equivalent of Disabled_'}
                                            VOLUMEMOUNTS_subPath {doc 'Path within the volume from which the container`s volume should be mounted_ Defaults to "" (volume`s root)_'}
                                            VOLUMEMOUNTS_subPathExpr {doc 'Expanded path within the volume from which the container`s volume should be mounted_ Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container`s environment_ Defaults to "" (volume`s root)_ SubPathExpr and SubPath are mutually exclusive_'}
                                    CONTAINERS_workingDir {doc 'Container`s working directory_ If not specified, the container runtime`s default will be used, which might be configured in the container image_ Cannot be updated_'}
                        optional 
                            PODSPEC_initContainers {doc 'List of initialization containers belonging to the pod_ Init containers are executed in order prior to containers being started_ If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy_ The name for an init container or normal container must be unique among all containers_ Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes_ The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers_ Limits are applied to init containers in a similar fashion_ Init containers cannot currently be added or removed_ Cannot be updated_ More info: https://kubernetes_io/docs/concepts/workloads/pods/init-containers/'}
                                mandatory   
                                    INITCONTAINERS_name {doc 'Name of the container specified as a DNS_LABEL_ Each container in a pod must have a unique name (DNS_LABEL)_ Cannot be updated_'}
                                optional   
                                    INITCONTAINERS_image {doc 'Container image name_ More info: https://kubernetes_io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets_'}
                                    INITCONTAINERS_securityContext {doc 'SecurityContext defines the security options the container should be run with_ If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext_ More info: https://kubernetes_io/docs/tasks/configure-pod-container/security-context/'}
                                        optional   
                                            INITCONTAINERS_SECURITYCONTEXT_allowPrivilegeEscalation {doc 'AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process_ This bool directly controls if the no_new_privs flag will be set on the container process_ AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec_os_name is windows_'}
                                            INITCONTAINERS_SECURITYCONTEXT_privileged {doc 'Run container in privileged mode_ Processes in privileged containers are essentially equivalent to root on the host_ Defaults to false_ Note that this field cannot be set when spec_os_name is windows_'}
                                            INITCONTAINERS_SECURITYCONTEXT_procMount {doc 'procMount denotes the type of proc mount to use for the containers_ The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths_ This requires the ProcMountType feature flag to be enabled_ Note that this field cannot be set when spec_os_name is windows_'}
                                            INITCONTAINERS_SECURITYCONTEXT_readOnlyRootFilesystem {doc 'Whether this container has a read-only root filesystem_ Default is false_ Note that this field cannot be set when spec_os_name is windows_'}
                                            INITCONTAINERS_SECURITYCONTEXT_runAsGroup {doc 'The GID to run the entrypoint of the container process_ Uses runtime default if unset_ May also be set in PodSecurityContext_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_ Note that this field cannot be set when spec_os_name is windows_'}
                                            INITCONTAINERS_SECURITYCONTEXT_runAsNonRoot {doc 'Indicates that the container must run as a non-root user_ If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does_ If unset or false, no such validation will be performed_ May also be set in PodSecurityContext_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_'}
                                            INITCONTAINERS_SECURITYCONTEXT_runAsUser {doc 'The UID to run the entrypoint of the container process_ Defaults to user specified in image metadata if unspecified_ May also be set in PodSecurityContext_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_ Note that this field cannot be set when spec_os_name is windows_'}
                                            INITCONTAINERS_SECURITYCONTEXT_appArmorProfile {doc 'appArmorProfile is the AppArmor options to use by this container_ If set, this profile overrides the pod`s appArmorProfile_ Note that this field cannot be set when spec_os_name is windows_'}
                                                optional   
                                                    INITCONTAINERS_APPARMORPROFILE_localhostProfile {doc 'localhostProfile indicates a profile loaded on the node that should be used_ The profile must be preconfigured on the node to work_ Must match the loaded name of the profile_ Must be set if and only if type is "Localhost"_'}
                                                    INITCONTAINERS_APPARMORPROFILE_type {doc 'type indicates which kind of AppArmor profile will be applied_ Valid options are: Localhost - a profile pre-loaded on the node_ RuntimeDefault - the container runtime`s default profile_ Unconfined - no AppArmor enforcement_'}
                                                        alternative   
                                                            INITCONTAINERS_APPARMORPROFILE_TYPE_LocalHost
                                                            INITCONTAINERS_APPARMORPROFILE_TYPE_RuntimeDefault 
                                                            INITCONTAINERS_APPARMORPROFILE_TYPE_Unconfined 
                                            INITCONTAINERS_SECURITYCONTEXT_capabilities {doc 'The capabilities to add/drop when running containers_ Defaults to the default set of capabilities granted by the container runtime_ Note that this field cannot be set when spec_os_name is windows_'}
                                                optional   
                                                    INITCONTAINERS_CAPABILITIES_add {doc 'Added capabilities'}
                                                        mandatory   
                                                            INITCONTAINERS_addedCapabilities
                                                    INITCONTAINERS_CAPABILITIES_drop {doc 'Removed capabilities'}
                                                        mandatory   
                                                                INITCONTAINERS_removedCapabilities
                                            INITCONTAINERS_SECURITYCONTEXT_seLinuxOptions {doc 'The SELinux context to be applied to the container_ If unspecified, the container runtime will allocate a random SELinux context for each container_ May also be set in PodSecurityContext_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_ Note that this field cannot be set when spec_os_name is windows_'}
                                                optional   
                                                    INITCONTAINERS_SELINUXOPTIONS_level {doc 'Level is SELinux level label that applies to the container_'}
                                                    INITCONTAINERS_SELINUXOPTIONS_role {doc 'Role is a SELinux role label that applies to the container_'}
                                                    INITCONTAINERS_SELINUXOPTIONS_type {doc 'Type is a SELinux type label that applies to the container_'}
                                                    INITCONTAINERS_SELINUXOPTIONS_user {doc 'User is a SELinux user label that applies to the container_'}
                                            INITCONTAINERS_SECURITYCONTEXT_seccompProfile {doc 'The seccomp options to use by this container_ If seccomp options are provided at both the pod & container level, the container options override the pod options_ Note that this field cannot be set when spec_os_name is windows_'}
                                                optional   
                                                    INITCONTAINERS_SECCOMPROFILE_localhostProfile {doc 'localhostProfile indicates a profile defined in a file on the node should be used_ The profile must be preconfigured on the node to work_ Must be a descending path, relative to the kubelet`s configured seccomp profile location_ Must be set if type is "Localhost"_ Must NOT be set for any other type_'}
                                                    INITCONTAINERS_SECCOMPROFILE_type {doc 'type indicates which kind of seccomp profile will be applied_ Valid options are: Localhost - a profile defined in a file on the node should be used_ RuntimeDefault - the container runtime default profile should be used_ Unconfined - no profile should be applied_'}
                                                        alternative   
                                                            INITCONTAINERS_SECCOMPROFILE_Type_LocalHost
                                                            INITCONTAINERS_SECCOMPROFILE_Type_RuntimeDefault 
                                                            INITCONTAINERS_SECCOMPROFILE_Type_Unconfined
                                            INITCONTAINERS_SECURITYCONTEXT_windowsOptions {doc 'The Windows specific settings applied to all containers_ If unspecified, the options from the PodSecurityContext will be used_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_ Note that this field cannot be set when spec_os_name is linux_'}
                                                optional   
                                                    INITCONTAINERS_WINDOWSOPTIONS_gmsaCredentialSpec {doc 'GMSACredentialSpec is where the GMSA admission webhook (https://github_com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field_'}
                                                    INITCONTAINERS_WINDOWSOPTIONS_gmsaCredentialSpecName {doc 'GMSACredentialSpecName is the name of the GMSA credential spec to use_'}
                                                    INITCONTAINERS_WINDOWSOPTIONS_hostProcess {doc 'HostProcess determines if a container should be run as a "Host Process" container_ All of a Pod`s containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers)_ In addition, if HostProcess is true then HostNetwork must also be set to true_'}
                                                    INITCONTAINERS_WINDOWSOPTIONS_runAsUserName {doc 'The UserName in Windows to run the entrypoint of the container process_ Defaults to the user specified in image metadata if unspecified_ May also be set in PodSecurityContext_ If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence_'}
                            PODSPEC_activeDeadlineSeconds {doc 'Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers_ Value must be a positive integer_'}
                            PODSPEC_affinity {doc 'If specified, the pod`s scheduling constraints'}
                                optional
                                    AFFINITY_nodeAffinity {NO_TERMINADO}
                                    AFFINITY_podAffinity {NO_TERMINADO}
                                    AFFINITY_podAntiAffinity {NO_TERMINADO}
                            PODSPEC_automountServiceAccountToken {doc 'AutomountServiceAccountToken indicates whether a service account token should be automatically mounted_'}                                   
                            PODSPEC_dnsPolicy {doc 'Set DNS policy for the pod_ Defaults to "ClusterFirst"_ Valid values are "ClusterFirstWithHostNet", "ClusterFirst", "Default" or "None"_ DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy_ To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to "ClusterFirstWithHostNet"_'}
                                alternative
                                    DNSPOLICY_ClusterFirstWithHostNet
                                    DNSPOLICY_ClusterFirst
                                    DNSPOLICY_Default
                                    DNSPOLICY_None
                            PODSPEC_enableServiceLinks {doc 'EnableServiceLinks indicates whether information about services should be injected into pod`s environment variables, matching the syntax of Docker links_ Optional: Defaults to true_'}
                            PODSPEC_hostIPC {doc 'Use the host`s ipc namespace_ Optional: Default to false_'}
                            PODSPEC_hostNetwork {doc 'Host networking requested for this pod_ Use the host`s network namespace_ If this option is set, the ports that will be used must be specified_ Default to false_'}
                            PODSPEC_hostPID {doc 'Use the host`s pid namespace_ Optional: Default to false_'}
                            PODSPEC_hostUsers {doc 'Use the host`s user namespace_ Optional: Default to true_ If set to true or not present, the pod will be run in the host user namespace, useful for when the pod needs a feature only available to the host user namespace, such as loading a kernel module with CAP_SYS_MODULE_ When set to false, a new userns is created for the pod_ Setting false is useful for mitigating container breakout vulnerabilities even allowing users to run their containers as root without actually having root privileges on the host_ This field is alpha-level and is only honored by servers that enable the UserNamespacesSupport feature_'}
                            PODSPEC_hostname {doc 'Specifies the hostname of the Pod If not specified, the pod`s hostname will be set to a system-defined value_'}
                            PODSPEC_nodeName {doc 'NodeName is a request to schedule this pod onto a specific node_ If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements_'}
                            PODSPEC_Volumes {doc 'List of volumes that can be mounted by containers belonging to the pod_ More info: https://kubernetes_io/docs/concepts/storage/volumes'}
                                mandatory   
                                    VOLUMES_name {doc 'name of the volume_ Must be a DNS_LABEL and unique within the pod_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                                    VOLUMES_type {doc 'It contains all the types of volumes that can be defined in the pod_'}
                                        or   
                                            emptyDir {doc 'emptyDir represents a temporary directory that shares a pod`s lifetime_ More info: https://kubernetes_io/docs/concepts/storage/volumes#emptydir'}
                                                optional
                                                    EMPTYDIR_medium {doc 'medium represents what type of storage medium should back this directory_ The default is "" which means to use the node`s default medium_ Must be an empty string (default) or Memory_ More info: https://kubernetes_io/docs/concepts/storage/volumes#emptydir'}
                                                        alternative   
                                                            EMPTYDIR_MEDIUM_default
                                                            EMPTYDIR_MEDIUM_memory
                                                    EMPTYDIR_sizeLimit {doc 'sizeLimit is the total amount of local storage required for this EmptyDir volume_ The size limit is also applicable for memory medium_ The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod_ The default is nil which means that the limit is undefined_ More info: https://kubernetes_io/docs/concepts/storage/volumes#emptydir'}
                                            hostPath {doc 'hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container_ This is generally used for system agents or other privileged things that are allowed to see the host machine_ Most containers will NOT need this_ More info: https://kubernetes_io/docs/concepts/storage/volumes#hostpath'}
                                                optional
                                                    HOSTPATH_path {doc 'path of the directory on the host_ If the path is a symlink, it will follow the link to the real path_ More info: https://kubernetes_io/docs/concepts/storage/volumes#hostpath'}
                                                    HOSTPATH_type {doc 'type for HostPath Volume Defaults to "" More info: https://kubernetes_io/docs/concepts/storage/volumes#hostpath'}
                                            persistentVolumeClaim {doc 'persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace_ More info: https://kubernetes_io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'}
                                                optional   
                                                    PERSISTENTVOLUMECLAIM_claimName {doc 'claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume_ More info: https://kubernetes_io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'}
                                                    PERSISTENTVOLUMECLAIM_readOnly {doc 'readOnly Will force the ReadOnly setting in VolumeMounts_ Default false_'}
                                            configMap {doc 'configMap represents a configMap that should populate this volume'}
                                                optional
                                                    CONFIGMAP_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                                                    CONFIGMAP_defaultMode {doc 'defaultMode is optional: mode bits used to set permissions on created files by default_ Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511_ YAML accepts both octal and decimal values, JSON requires decimal values for mode bits_ Defaults to 0644_ Directories within the path are not affected by this setting_ This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set_'}
                                                    CONFIGMAP_optional {doc 'optional specify whether the ConfigMap or its keys must be defined'}
                                                    CONFIGMAP_items {doc 'items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value_ If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present_ If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional_ Paths must be relative and may not contain the "__" path or start with "__"_'}
                                                        mandatory   
                                                            CONFIGMAP_ITEMS_key {doc 'key is the key to project_'}
                                                            CONFIGMAP_ITEMS_path {doc 'path is the relative path of the file to map the key to_ May not be an absolute path_ May not contain the path element "__"_ May not start with the string "__"_'}
                                                        optional 
                                                            CONFIGMAP_ITEMS_mode  {doc 'mode is Optional: mode bits used to set permissions on this file_ Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511_ YAML accepts both octal and decimal values, JSON requires decimal values for mode bits_ If not specified, the volume defaultMode will be used_ This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set_'}
                                            secret {doc 'secret represents a secret that should populate this volume_ More info: https://kubernetes_io/docs/concepts/storage/volumes#secret'}
                                                optional   
                                                    SECRET_secretName {doc 'secretName is the name of the secret in the pod`s namespace to use_ More info: https://kubernetes_io/docs/concepts/storage/volumes#secret'}
                                                    SECRET_defaultMode {doc 'defaultMode is Optional: mode bits used to set permissions on created files by default_ Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511_ YAML accepts both octal and decimal values, JSON requires decimal values for mode bits_ Defaults to 0644_ Directories within the path are not affected by this setting_ This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set_'}
                                                    SECRET_optional {doc 'optional field specify whether the Secret or its keys must be defined'}
                                                    SECRET_items {doc 'items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value_ If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present_ If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional_ Paths must be relative and may not contain the "__" path or start with "__"_'}
                                                        mandatory   
                                                            SECRET_ITEMS_key {doc 'key is the key to project_'}
                                                            SECRET_ITEMS_path {doc 'path is the relative path of the file to map the key to_ May not be an absolute path_ May not contain the path element "__"_ May not start with the string "__"_'}
                                                        optional   
                                                            SECRET_ITEMS_mode {doc 'mode is Optional: mode bits used to set permissions on this file_ Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511_ YAML accepts both octal and decimal values, JSON requires decimal values for mode bits_ If not specified, the volume defaultMode will be used_ This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set_'}
                                            nfs {doc 'nfs represents an NFS mount on the host that shares a pod`s lifetime More info: https://kubernetes_io/docs/concepts/storage/volumes#nfs'}
                                            csi {doc 'csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature)_'}
                                            downwardAPI {doc 'downwardAPI represents downward API about the pod that should populate this volume'}
                                            ephemeral {doc 'ephemeral represents a volume that is handled by a cluster storage driver_ The volume`s lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed_ Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through a PersistentVolumeClaim (see EphemeralVolumeSource for more information on the connection between this volume type and PersistentVolumeClaim)_ Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod_ Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information_ A pod can use both types of ephemeral volumes and persistent volumes at the same time_'}
                                            fc {doc 'fc represents a Fibre Channel resource that is attached to a kubelet`s host machine and then exposed to the pod_'}
                                            flocker {doc 'flocker represents a Flocker volume attached to a kubelet`s host machine_ This depends on the Flocker control service being running'}
                                            iscsi {doc 'iscsi represents an ISCSI Disk resource that is attached to a kubelet`s host machine and then exposed to the pod_ More info: https://examples_k8s_io/volumes/iscsi/README_md'}
                                            photonPersistentDisk {doc 'photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine_'}
                                            projected {doc 'projected items for all in one resources secrets, configmaps, and downward API_'}
                                            quobyte {doc 'quobyte represents a Quobyte mount on the host that shares a pod`s lifetime_'}
                                            rbd {doc 'rbd represents a Rados Block Device mount on the host that shares a pod`s lifetime_ More info: https://examples_k8s_io/volumes/rbd/README_md'}
                                            scaleIO {doc 'scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes_'}
                                            storageos {doc 'storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes_'}
                    ServiceSpec {doc 'Specification of the desired behavior of the Service_'}
                        optional
                            SERVICESPEC_allocateLoadBalancerNodePorts {doc 'allocateLoadBalancerNodePorts defines if NodePorts will be automatically allocated for services with type LoadBalancer_ Default is "true"_ It may be set to "false" if the cluster load-balancer does not rely on NodePorts_ If the caller requests specific NodePorts (by specifying a value), those requests will be respected, regardless of this field_ This field may only be set for services with type LoadBalancer and will be cleared if the type is changed to any other type_'}
                            SERVICESPEC_clusterIP {doc 'clusterIP is the IP address of the service and is usually assigned randomly_ If an address is specified manually, is in-range (as per system configuration), and is not in use, it will be allocated to the service; otherwise creation of the service will fail_ This field may not be changed through updates unless the type field is also being changed to ExternalName (which requires this field to be blank) or the type field is being changed from ExternalName (in which case this field may optionally be specified, as describe above)_ Valid values are "None", empty string (""), or a valid IP address_ Setting this to "None" makes a "headless service" (no virtual IP), which is useful when direct endpoint connections are preferred and proxying is not required_ Only applies to types ClusterIP, NodePort, and LoadBalancer_ If this field is specified when creating a Service of type ExternalName, creation will fail_ This field will be wiped when updating a Service to type ExternalName_ More info: https://kubernetes_io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'}
                                alternative
                                    CLUSTERIP_none
                                    CLUSTERIP_emptyString
                                    CLUSTERIP_IP
                            SERVICESPEC_clusterIPs {doc 'ClusterIPs is a list of IP addresses assigned to this service, and are usually assigned randomly_ If an address is specified manually, is in-range (as per system configuration), and is not in use, it will be allocated to the service; otherwise creation of the service will fail_ This field may not be changed through updates unless the type field is also being changed to ExternalName (which requires this field to be empty) or the type field is being changed from ExternalName (in which case this field may optionally be specified, as describe above)_ Valid values are "None", empty string (""), or a valid IP address_ Setting this to "None" makes a "headless service" (no virtual IP), which is useful when direct endpoint connections are preferred and proxying is not required_ Only applies to types ClusterIP, NodePort, and LoadBalancer_ If this field is specified when creating a Service of type ExternalName, creation will fail_ This field will be wiped when updating a Service to type ExternalName_ If this field is not specified, it will be initialized from the clusterIP field_ If this field is specified, clients must ensure that clusterIPs[0] and clusterIP have the same value_ This field may hold a maximum of two entries (dual-stack IPs, in either order)_ These IPs must correspond to the values of the ipFamilies field_ Both clusterIPs and ipFamilies are governed by the ipFamilyPolicy field_ More info: https://kubernetes_io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'} 
                                alternative
                                    CLUSTERIPS_none
                                    CLUSTERIPS_emptyString
                                    CLUSTERIPS_IPs
                            SERVICESPEC_externalIPs {doc 'externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service_ These IPs are not managed by Kubernetes_ The user is responsible for ensuring that traffic arrives at a node with this IP_ A common example is external load-balancers that are not part of the Kubernetes system_'}
                                mandatory
                                    SERVICESPEC_EXTERNALIPS_ip
                            SERVICESPEC_externalName {doc 'externalName is the external reference that discovery mechanisms will return as an alias for this service (e_g_ a DNS CNAME record)_ No proxying will be involved_ Must be a lowercase RFC-1123 hostname (https://tools_ietf_org/html/rfc1123) and requires `type` to be "ExternalName"_'}
                            SERVICESPEC_externalTrafficPolicy {doc 'externalTrafficPolicy describes how nodes distribute service traffic they receive on one of the Service`s "externally-facing" addresses (NodePorts, ExternalIPs, and LoadBalancer IPs)_ If set to "Local", the proxy will configure the service in a way that assumes that external load balancers will take care of balancing the service traffic between nodes, and so each node will deliver traffic only to the node-local endpoints of the service, without masquerading the client source IP_ (Traffic mistakenly sent to a node with no endpoints will be dropped_) The default value, "Cluster", uses the standard behavior of routing to all endpoints evenly (possibly modified by topology and other features)_ Note that traffic sent to an External IP or LoadBalancer IP from within the cluster will always get "Cluster" semantics, but clients sending to a NodePort from within the cluster may need to take traffic policy into account when picking a node_'}
                                alternative   
                                    EXTERNALTRAFFICPOLICY_Local
                                    EXTERNALTRAFFICPOLICY_Cluster
                            SERVICESPEC_healthCheckNodePort {doc 'healthCheckNodePort specifies the healthcheck nodePort for the service_ This only applies when type is set to LoadBalancer and externalTrafficPolicy is set to Local_ If a value is specified, is in-range, and is not in use, it will be used_ If not specified, a value will be automatically allocated_ External systems (e_g_ load-balancers) can use this port to determine if a given node holds endpoints for this service or not_ If this field is specified when creating a Service which does not need it, creation will fail_ This field will be wiped when updating a Service to no longer need it (e_g_ changing type)_ This field cannot be updated once set_'}
                            SERVICESPEC_internalTrafficPolicy {doc 'InternalTrafficPolicy describes how nodes distribute service traffic they receive on the ClusterIP_ If set to "Local", the proxy will assume that pods only want to talk to endpoints of the service on the same node as the pod, dropping the traffic if there are no local endpoints_ The default value, "Cluster", uses the standard behavior of routing to all endpoints evenly (possibly modified by topology and other features)_'}
                                alternative   
                                    INTERNALTRAFFICPOLICY_Local
                                    INTERNALTRAFFICPOLICY_Cluster
                            SERVICESPEC_ipFamilies {doc 'IPFamilies is a list of IP families (e_g_ IPv4, IPv6) assigned to this service_ This field is usually assigned automatically based on cluster configuration and the ipFamilyPolicy field_ If this field is specified manually, the requested family is available in the cluster, and ipFamilyPolicy allows it, it will be used; otherwise creation of the service will fail_ This field is conditionally mutable: it allows for adding or removing a secondary IP family, but it does not allow changing the primary IP family of the Service_ Valid values are "IPv4" and "IPv6"_ This field only applies to Services of types ClusterIP, NodePort, and LoadBalancer, and does apply to "headless" services_ This field will be wiped when updating a Service to type ExternalName_ This field may hold a maximum of two entries (dual-stack families, in either order)_ These families must correspond to the values of the clusterIPs field, if specified_ Both clusterIPs and ipFamilies are governed by the ipFamilyPolicy field_'}
                                optional
                                    IPFAMILIES_IPv4
                                    IPFAMILIES_IPv6
                            SERVICESPEC_ipFamilyPolicy {doc 'IPFamilyPolicy represents the dual-stack-ness requested or required by this Service_ If there is no value provided, then this field will be set to SingleStack_ Services can be "SingleStack" (a single IP family), "PreferDualStack" (two IP families on dual-stack configured clusters or a single IP family on single-stack clusters), or "RequireDualStack" (two IP families on dual-stack configured clusters, otherwise fail)_ The ipFamilies and clusterIPs fields depend on the value of this field_ This field will be wiped when updating a service to type ExternalName_'}
                                alternative   
                                    SingleStack
                                    PreferDualStack
                                    RequireDualStack
                            SERVICESPEC_loadBalancerClass {doc 'loadBalancerClass is the class of the load balancer implementation this Service belongs to_ If specified, the value of this field must be a label-style identifier, with an optional prefix, e_g_ "internal-vip" or "example_com/internal-vip"_ Unprefixed names are reserved for end-users_ This field can only be set when the Service type is "LoadBalancer"_ If not set, the default load balancer implementation is used, today this is typically done through the cloud provider integration, but should apply for any default implementation_ If set, it is assumed that a load balancer implementation is watching for Services with a matching class_ Any default load balancer implementation (e_g_ cloud providers) should ignore Services that set this field_ This field can only be set when creating or updating a Service to type "LoadBalancer"_ Once set, it can not be changed_ This field will be wiped when a service is updated to a non "LoadBalancer" type_'}
                            SERVICESPEC_Ports {doc 'The list of ports that are exposed by this service_ More info: https://kubernetes_io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'}
                                mandatory   
                                    SERVICESPEC_PORTS_port {doc 'The port that will be exposed by this service_'}
                                optional
                                    SERVICESPEC_PORTS_name {doc 'The name of this port within the service_ This must be a DNS_LABEL_ All ports within a ServiceSpec must have unique names_ When considering the endpoints for a Service, this must match the "name" field in the EndpointPort_ Optional if only one ServicePort is defined on this service_'}
                                    SERVICESPEC_PORTS_protocol {doc 'The IP protocol for this port_ Supports "TCP", "UDP", and "SCTP"_ Default is TCP_'}
                                        alternative
                                            PORTS_PROTOCOL_tcp
                                            PORTS_PROTOCOL_udp
                                            PORTS_PROTOCOL_sctp
                                    SERVICESPEC_PORTS_nodePort {doc 'The port on each node on which this service is exposed when type is NodePort or LoadBalancer_ Usually assigned by the system_ If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail_ If not specified, a port will be allocated if this Service requires one_ If this field is specified when creating a Service which does not need it, creation will fail_ This field will be wiped when updating a Service to no longer need it (e_g_ changing type from NodePort to ClusterIP)_ More info: https://kubernetes_io/docs/concepts/services-networking/service/#type-nodeport'}
                                    SERVICESPEC_PORTS_targetPort {doc 'Number or name of the port to access on the pods targeted by the service_ Number must be in the range 1 to 65535_ Name must be an IANA_SVC_NAME_ If this is a string, it will be looked up as a named port in the target Pod`s container ports_ If this is not specified, the value of the "port" field is used (an identity map)_ This field is ignored for services with clusterIP=None, and should be omitted or set equal to the "port" field_ More info: https://kubernetes_io/docs/concepts/services-networking/service/#defining-a-service'}
                                    SERVICESPEC_PORTS_appProtocol {doc 'The application protocol for this port_ This is used as a hint for implementations to offer richer behavior for protocols that they understand_ This field follows standard Kubernetes label syntax_ Valid values are either: * Un-prefixed protocol names - reserved for IANA standard service names (as per RFC-6335 and https://www_iana_org/assignments/service-names)_ * Kubernetes-defined prefixed names: * "kubernetes_io/h2c" - HTTP/2 prior knowledge over cleartext as described in https://www_rfc-editor_org/rfc/rfc9113_html#name-starting-http-2-with-prior- * "kubernetes_io/ws" - WebSocket over cleartext as described in https://www_rfc-editor_org/rfc/rfc6455 * "kubernetes_io/wss" - WebSocket over TLS as described in https://www_rfc-editor_org/rfc/rfc6455 * Other protocols should use implementation-defined prefixed names such as mycompany_com/my-custom-protocol_'}
                            SERVICESPEC_publishNotReadyAddresses {doc 'publishNotReadyAddresses indicates that any agent which deals with endpoints for this Service should disregard any indications of ready/not-ready_ The primary use case for setting this field is for a StatefulSet`s Headless Service to propagate SRV DNS records for its Pods for the purpose of peer discovery_ The Kubernetes controllers that generate Endpoints and EndpointSlice resources for Services interpret this to mean that all endpoints are considered "ready" even if the Pods themselves are not_ Agents which consume only Kubernetes generated endpoints through the Endpoints or EndpointSlice resources can safely assume this behavior_'}
                            SERVICESPEC_Selector {doc 'Route service traffic to pods with label keys and values matching this selector_ If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify_ Only applies to types ClusterIP, NodePort, and LoadBalancer_ Ignored if type is ExternalName_ More info: https://kubernetes_io/docs/concepts/services-networking/service/'}
                                mandatory
                                    SELECTOR_key
                                    SELECTOR_value
                            SERVICESPEC_sessionAffinity {doc 'sessionAffinityConfig contains the configurations of session affinity_'}
                                alternative   
                                    SESSIONAFFINITY_clientIP {doc 'clientIP contains the configurations of Client IP based session affinity_'}
                                    SESSIONAFFINITY_none
                            SERVICESPEC_sessionAffinityConfig {doc 'sessionAffinityConfig contains the configurations of session affinity_'}
                                mandatory
                                    SESSIONAFFINITYCONFIG_clientIP {doc 'clientIP contains the configurations of Client IP based session affinity_'}
                                        mandatory
                                            CLIENTIP_timeoutSeconds {doc 'timeoutSeconds specifies the seconds of ClientIP type session sticky time_ The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP"_ Default value is 10800(for 3 hours)_'}
                            SERVICESPEC_trafficDistribution {doc 'TrafficDistribution offers a way to express preferences for how traffic is distributed to Service endpoints_ Implementations can use this field as a hint, but are not required to guarantee strict adherence_ If the field is not set, the implementation will apply its default routing strategy_ If set to "PreferClose", implementations should prioritize endpoints that are topologically close (e_g_, same zone)_'}
                            SERVICESPEC_Type {doc 'type determines how the Service is exposed_ Defaults to ClusterIP_ Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer_ "ClusterIP" allocates a cluster-internal IP address for load-balancing to endpoints_ Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object or EndpointSlice objects_ If clusterIP is "None", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a virtual IP_ "NodePort" builds on ClusterIP and allocates a port on every node which routes to the same endpoints as the clusterIP_ "LoadBalancer" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the same endpoints as the clusterIP_ "ExternalName" aliases this service to the specified externalName_ Several other fields do not apply to ExternalName services_ More info: https://kubernetes_io/docs/concepts/services-networking/service/#publishing-services-service-types'}
                                alternative   
                                    TYPE_ExternalName
                                    TYPE_ClusterIP
                                    TYPE_NodePort
                                    TYPE_LoadBalancer
                    CustomResourceDefinitionSpec {doc 'CustomResourceDefinitionSpec describes how a user wants their resource to appear'}
                        optional   
                            CUSTOMRESOURCEDEFINITIONSPEC_conversion {doc 'conversion defines conversion settings for the CRD_'}
                            CUSTOMRESOURCEDEFINITIONSPEC_group {doc 'group is the API group of the defined custom resource_ The custom resources are served under `/apis/<group>/___`_ Must match the name of the CustomResourceDefinition (in the form `<names_plural>_<group>`)_'}
                            CUSTOMRESOURCEDEFINITIONSPEC_names {doc 'names specify the resource and kind names for the custom resource_'}
                            CUSTOMRESOURCEDEFINITIONSPEC_scope {doc 'scope indicates whether the defined custom resource is cluster- or namespace-scoped_ Allowed values are `Cluster` and `Namespaced`_'}
                                alternative   
                                    CUSTOMRESOURCEDEFINITIONSPEC_SCOPE_Cluster
                                    CUSTOMRESOURCEDEFINITIONSPEC_SCOPE_Namespaced
                            CUSTOMRESOURCEDEFINITIONSPEC_versions  {doc 'Conversion describes conversion settings for the CRD_'}
                                optional
                                    VERSIONS_name {doc 'name is the version name, e_g_ v1, v2beta1, etc_ The custom resources are served under this version at `/apis/<group>/<version>/___` if `served` is true_'}
                                    VERSIONS_served {doc 'served is a flag enabling/disabling this version from being served via REST APIs'}
                                    VERSIONS_storage {doc 'storage indicates this version should be used when persisting custom resources to storage_ There must be exactly one version with storage=true_'}
                                    VERSIONS_subresources {doc 'subresources specify what subresources this version of the defined custom resource have_'} 
                                        optional   
                                            SUBRESOURCES_status {doc 'status indicates the custom resource should serve a /status subresource_ When enabled: 1_ requests to the custom resource primary endpoint ignore changes to the status stanza of the object_ 2_ requests to the custom resource /status subresource ignore changes to anything other than the status stanza of the object_'}
                                            SUBRESOURCES_scale {doc 'scale indicates the custom resource should serve a `/scale` subresource that returns an `autoscaling/v1` Scale object_'}
                                    VERSIONS_schema {doc 'schema describes the schema used for validation, pruning, and defaulting of this version of the custom resource_'}
                                        mandatory      
                                            SCHEMA_openAPIV3Schema {doc 'OpenAPIV3Schema is the OpenAPI v3 schema to use for validation and pruning_'}
                                                optional   
                                                    OPENAPIV3SCHEMA_type {doc ''}        
                                                    OPENAPIV3SCHEMA_properties {doc ''}
                                                    OPENAPIV3SCHEMA_description {doc ''}
                                                    OPENAPIV3SCHEMA_required {doc ''}                              
                                    VERSIONS_additionalPrinterColumns {doc 'AdditionalPrinterColumns are additional columns shown e_g_ in kubectl next to the name_ Defaults to a created-at column_ More info: https://kubernetes_io/docs/reference/using-api/api-concepts/#additionalprintercolumns'}
                                        optional
                                            ADDITIONALPRINTERCOLUMNS_name {doc 'name is a human readable name for the column_'}
                                            ADDITIONALPRINTERCOLUMNS_type {doc 'type is an OpenAPI type definition for this column_ See https://github_com/OAI/OpenAPI-Specification/blob/master/versions/2_0_md#data-types for details_'}
                                            ADDITIONALPRINTERCOLUMNS_JSONPath {doc 'jsonPath is a simple JSON path (i_e_ with array notation) which is evaluated against each custom resource to produce the value for this column_'}
                                            ADDITIONALPRINTERCOLUMNS_description {doc 'description is a human readable description of this column_'}
                                            ADDITIONALPRINTERCOLUMNS_priority {doc 'priority is an integer defining the relative importance of this column compared to others_ Lower numbers are considered higher priority_ Columns that may be omitted in limited space scenarios should be given a priority greater than 0_'}
                                            ADDITIONALPRINTERCOLUMNS_format {doc 'format is an optional OpenAPI type definition for this column_ The "name" format is applied to the primary identifier column to assist in clients identifying column is the resource name_ See https://github_com/OAI/OpenAPI-Specification/blob/master/versions/2_0_md#data-types for details_'}
                    SecretSpec {doc 'Specification of the desired behavior of the Secret_'}
            binaryData {doc 'BinaryData contains the binary data_ Each key must consist of alphanumeric characters, "-", "_" or "_"_ BinaryData can contain byte sequences that are not in the UTF-8 range_ The keys stored in BinaryData must not overlap with the ones in the Data field, this is enforced during validation process_ Using this field will require 1_10+ apiserver and kubelet_'}
                mandatory
                    BINARYDATA_binaryFile_name
                    BINARYDATA_binaryFile_value
            data {doc 'Data contains the configuration data_ Each key must consist of alphanumeric characters, "-", "_" or "_"_ Values with non-UTF-8 byte sequences must use the BinaryData field_ The keys stored in Data must not overlap with the keys in the BinaryData field, this is enforced during validation process_'}
                optional   
                    DATA_confSimple 
                        mandatory
                            CONFSIMPLE_key
                            CONFSIMPLE_value
                    DATA_confFile 
                        mandatory   
                            CONFFILE_name {doc 'name of configuration file'}
                            CONFFILE_value {doc 'content of the file'}
            immutable {doc 'Immutable, if set to true, ensures that data stored in the ConfigMap cannot be updated (only object metadata can be modified)_ If not set to true, the field can be modified at any time_ Defaulted to nil_'}
                mandatory   
                    IMMUTABLE_boolean
            subsets {doc 'The set of all endpoints is the union of all subsets_ Addresses are placed into subsets according to the IPs they share_ A single address with multiple ports, some of which are ready and some of which are not (because they come from different containers) will result in the address being displayed in different subsets for the different ports_ No address will appear in both Addresses and NotReadyAddresses in the same subset_ Sets of addresses and ports that comprise a service_'}
                optional
                    SUBSETS_addresses {doc 'IP addresses which offer the related ports that are marked as ready_ These endpoints should be considered safe for load balancers and clients to utilize_'}
                        mandatory
                            ADDRESSES_ip {doc 'The IP of this endpoint_ May not be loopback (127_0_0_0/8 or ::1), link-local (169_254_0_0/16 or fe80::/10), or link-local multicast (224_0_0_0/24 or ff02::/16)_'}
                        optional
                            ADDRESSES_hostname {doc 'The Hostname of this endpoint'}
                            ADDRESSES_nodename {doc 'Optional: Node hosting this endpoint_ This can be used to determine endpoints local to a node_'}
                            ADDRESSES_targetRef {doc 'Reference to object providing the endpoint_'}
                                optional
                                    ADDRESSES_TARGETREF_apiVersion {doc 'API version of the referent_'}
                                    ADDRESSES_TARGETREF_fieldPath {doc 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState_manifest_containers[2]_ For example, if the object reference is to a container within a pod, this would take on a value like: "spec_containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec_containers[2]" (container with index 2 in this pod)_ This syntax is chosen only to have some well-defined way of referencing a part of an object_'}
                                    ADDRESSES_TARGETREF_kind {doc 'Kind of the referent_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#types-kinds'}
                                    ADDRESSES_TARGETREF_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                                    ADDRESSES_TARGETREF_namespace {doc 'Namespace of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/namespaces/'}
                                    ADDRESSES_TARGETREF_resourceVersion {doc 'Specific resourceVersion to which this reference is made, if any_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#concurrency-control-and-consistency'}
                                    ADDRESSES_TARGETREF_uid {doc 'UID of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#uids'}
                    SUBSETS_notReadyAddresses {doc 'IP addresses which offer the related ports but are not currently marked as ready because they have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check_'}
                        mandatory
                                NOTREADYADDRESSES_ip {doc 'The IP of this endpoint_ May not be loopback (127_0_0_0/8 or ::1), link-local (169_254_0_0/16 or fe80::/10), or link-local multicast (224_0_0_0/24 or ff02::/16)_'}
                            optional
                                NOTREADYADDRESSES_hostname {doc 'The Hostname of this endpoint'}
                                NOTREADYADDRESSES_nodename {doc 'Optional: Node hosting this endpoint_ This can be used to determine endpoints local to a node_'}
                                NOTREADYADDRESSES_targetRef {doc 'Reference to object providing the endpoint_'}
                                    optional
                                        NOTREADYADDRESSES_TARGETREF_apiVersion {doc 'API version of the referent_'}
                                        NOTREADYADDRESSES_TARGETREF_fieldPath {doc 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState_manifest_containers[2]_ For example, if the object reference is to a container within a pod, this would take on a value like: "spec_containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec_containers[2]" (container with index 2 in this pod)_ This syntax is chosen only to have some well-defined way of referencing a part of an object_'}
                                        NOTREADYADDRESSES_TARGETREF_kind {doc 'Kind of the referent_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#types-kinds'}
                                        NOTREADYADDRESSES_TARGETREF_name {doc 'Name of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#names'}
                                        NOTREADYADDRESSES_TARGETREF_namespace {doc 'Namespace of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/namespaces/'}
                                        NOTREADYADDRESSES_TARGETREF_resourceVersion {doc 'Specific resourceVersion to which this reference is made, if any_ More info: https://git_k8s_io/community/contributors/devel/sig-architecture/api-conventions_md#concurrency-control-and-consistency'}
                                        NOTREADYADDRESSES_TARGETREF_uid {doc 'UID of the referent_ More info: https://kubernetes_io/docs/concepts/overview/working-with-objects/names/#uids'}
                    SUBSETS_ports {doc 'Port numbers available on the related IP addresses_'}
                        mandatory   
                            SUBSETS_PORTS_port {doc 'The port number of the endpoint_'}
                        optional   
                            SUBSETS_PORTS_appProtocol {doc 'The application protocol for this port_ This is used as a hint for implementations to offer richer behavior for protocols that they understand_ This field follows standard Kubernetes label syntax_ Valid values are either: * Un-prefixed protocol names - reserved for IANA standard service names (as per RFC-6335 and https://www_iana_org/assignments/service-names)_ * Kubernetes-defined prefixed names: * "kubernetes_io/h2c" - HTTP/2 prior knowledge over cleartext as described in https://www_rfc-editor_org/rfc/rfc9113_html#name-starting-http-2-with-prior- * "kubernetes_io/ws" - WebSocket over cleartext as described in https://www_rfc-editor_org/rfc/rfc6455 * "kubernetes_io/wss" - WebSocket over TLS as described in https://www_rfc-editor_org/rfc/rfc6455 * Other protocols should use implementation-defined prefixed names such as mycompany_com/my-custom-protocol_'}
                            SUBSETS_PORTS_name {doc 'The name of this port_ This must match the "name" field in the corresponding ServicePort_ Must be a DNS_LABEL_ Optional only if one port is defined_'}
                            SUBSETS_PORTS_protocol {doc 'The IP protocol for this port_ Must be UDP, TCP, or SCTP_ Default is TCP_'}
                                alternative  
                                    SUBSETS_PORTS_UDP 
                                    SUBSETS_PORTS_TCP
                                    SUBSETS_PORTS_SCTP
            rules {doc 'Rules holds all the PolicyRules for this Role'} 
                mandatory
                    RULES_apiGroups {doc 'APIGroups is the name of the APIGroup that contains the resources_ If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed_ "" represents the core API group and "*" represents all API groups_'}
                        mandatory
                            RULES_APIGROUPS_value
                optional   
                    RULES_nonResourceURLs {doc 'NonResourceURLs is a set of partial urls that a user should have access to_ *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding_ Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"), but not both_'}
                        mandatory
                            RULES_NONRESOURCEURLS_value
                    RULES_resourceNames {doc 'ResourceNames is an optional white list of names that the rule applies to_ An empty set means that everything is allowed_'}
                        mandatory
                            RULES_RESOURCENAMES_value
                    RULES_resources {doc 'Resources is a list of resources this rule applies to_'}
                        mandatory
                            RULES_RESOURCES_value
                    RULES_verbs {doc 'Verbs is a list of Verbs that apply to ALL the ResourceKinds contained in this rule_'}
                        mandatory
                            RULES_VERBS_value